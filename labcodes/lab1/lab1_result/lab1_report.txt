Lab1 Report 
by 12307130244

练习1：理解通过make生成执行文件的过程回答如下问题：

1. 操作系统镜像文件ucore.img是如何一步一步生成的？需要比较详细地解释Makefile中每一条相关命令和命令参数的含义，以及说明命令导致的结果。
答：Makefile文件命令以及逐步生成过程的解释如下
#最主要功能即通过文件描述源程序之间的相互关系并自动维护编译工作
PROJ	:= challenge
EMPTY	:=
SPACE	:= $(EMPTY) $(EMPTY)
SLASH	:= /

V       := @
#找到合适的GCC
#need llvm/cang-3.5+
#USELLVM := 1
# try to infer the correct GCCPREFX
ifndef GCCPREFIX
GCCPREFIX := $(shell if i386-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >/dev/null 2>&1; \
	then echo 'i386-elf-'; \
	elif objdump -i 2>&1 | grep 'elf32-i386' >/dev/null 2>&1; \
	then echo ''; \
	else echo "***" 1>&2; \
	echo "*** Error: Couldn't find an i386-elf version of GCC/binutils." 1>&2; \
	echo "*** Is the directory with i386-elf-gcc in your PATH?" 1>&2; \
	echo "*** If your i386-elf toolchain is installed with a command" 1>&2; \
	echo "*** prefix other than 'i386-elf-', set your GCCPREFIX" 1>&2; \
	echo "*** environment variable to that prefix and run 'make' again." 1>&2; \
	echo "*** To turn off this error, run 'gmake GCCPREFIX= ...'." 1>&2; \
	echo "***" 1>&2; exit 1; fi)
endif

#找到能用的QEMU
# try to infer the correct QEMU
ifndef QEMU
QEMU := $(shell if which qemu-system-i386 > /dev/null; \
	then echo 'qemu-system-i386'; exit; \
	elif which i386-elf-qemu > /dev/null; \
	then echo 'i386-elf-qemu'; exit; \
	elif which qemu > /dev/null; \
	then echo 'qemu'; exit; \
	else \
	echo "***" 1>&2; \
	echo "*** Error: Couldn't find a working QEMU executable." 1>&2; \
	echo "*** Is the directory containing the qemu binary in your PATH" 1>&2; \
	echo "***" 1>&2; exit 1; fi)
endif

#替换默认的扩展名规则
# eliminate default suffix rules
.SUFFIXES: .c .S .h

#出错时候默认删除生成文件
# delete target files if there is an error (or make is interrupted)
.DELETE_ON_ERROR:

#设定gcc编译器相关参数
# define compiler and flags
ifndef  USELLVM
HOSTCC		:= gcc
HOSTCFLAGS	:= -g -Wall -O2
CC		:= $(GCCPREFIX)gcc
CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)
CFLAGS	+= $(shell $(CC) -fno-stack-protector -E -x c /dev/null >/dev/null 2>&1 && echo -fno-stack-protector)
else
HOSTCC		:= clang
HOSTCFLAGS	:= -g -Wall -O2
CC		:= $(GCCPREFIX)clang
CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)
CFLAGS	+= $(shell $(CC) -fno-stack-protector -E -x c /dev/null >/dev/null 2>&1 && echo -fno-stack-protector)
endif

CTYPE	:= c S

LD      := $(GCCPREFIX)ld
LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>/dev/null)
LDFLAGS	+= -nostdlib

OBJCOPY := $(GCCPREFIX)objcopy
OBJDUMP := $(GCCPREFIX)objdump

COPY	:= cp
MKDIR   := mkdir -p
MV		:= mv
RM		:= rm -f
AWK		:= awk
SED		:= sed
SH		:= sh
TR		:= tr
TOUCH	:= touch -c

OBJDIR	:= obj
BINDIR	:= bin

ALLOBJS	:=
ALLDEPS	:=
TARGETS	:=

include tools/function.mk

listf_cc = $(call listf,$(1),$(CTYPE))

# for cc
add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))
create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))

# for hostcc
add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))
create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))

cgtype = $(patsubst %.$(2),%.$(3),$(1))
objfile = $(call toobj,$(1))
asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)
outfile = $(call cgtype,$(call toobj,$(1)),o,out)
symfile = $(call cgtype,$(call toobj,$(1)),o,sym)

# for match pattern
match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#加入所需的一些库
# include kernel/user

INCLUDE	+= libs/

CFLAGS	+= $(addprefix -I,$(INCLUDE))

LIBDIR	+= libs

$(call add_files_cc,$(call listf_cc,$(LIBDIR)),libs,)

# -------------------------------------------------------------------
#生成内核目标
# kernel

KINCLUDE	+= kern/debug/ \
			   kern/driver/ \
			   kern/trap/ \
			   kern/mm/

KSRCDIR		+= kern/init \
			   kern/libs \
			   kern/debug \
			   kern/driver \
			   kern/trap \
			   kern/mm

KCFLAGS		+= $(addprefix -I,$(KINCLUDE))

$(call add_files_cc,$(call listf_cc,$(KSRCDIR)),kernel,$(KCFLAGS))

KOBJS	= $(call read_packet,kernel libs)

# create kernel target
kernel = $(call totarget,kernel)

$(kernel): tools/kernel.ld

$(kernel): $(KOBJS)
	@echo + ld $@
	$(V)$(LD) $(LDFLAGS) -T tools/kernel.ld -o $@ $(KOBJS)
	@$(OBJDUMP) -S $@ > $(call asmfile,kernel)
	@$(OBJDUMP) -t $@ | $(SED) '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' > $(call symfile,kernel)

$(call create_target,kernel)

# -------------------------------------------------------------------
#bootblock是指主板上引导块包含用于引导的最小指令集
# create bootblock
bootfiles = $(call listf_cc,boot)
$(foreach f,$(bootfiles),$(call cc_compile,$(f),$(CC),$(CFLAGS) -Os -nostdinc))

bootblock = $(call totarget,bootblock)

$(bootblock): $(call toobj,$(bootfiles)) | $(call totarget,sign)
	@echo + ld $@
	$(V)$(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 $^ -o $(call toobj,bootblock)
	@$(OBJDUMP) -S $(call objfile,bootblock) > $(call asmfile,bootblock)
	@$(OBJCOPY) -S -O binary $(call objfile,bootblock) $(call outfile,bootblock)
	@$(call totarget,sign) $(call outfile,bootblock) $(bootblock)

$(call create_target,bootblock)

# -------------------------------------------------------------------
#生成引导区相关的sign工具
# create 'sign' tools
$(call add_files_host,tools/sign.c,sign,sign)
$(call create_target_host,sign,sign)

# -------------------------------------------------------------------
#生成镜像文件
# create ucore.img
UCOREIMG	:= $(call totarget,ucore.img)

$(UCOREIMG): $(kernel) $(bootblock)
	$(V)dd if=/dev/zero of=$@ count=10000
	$(V)dd if=$(bootblock) of=$@ conv=notrunc
	$(V)dd if=$(kernel) of=$@ seek=1 conv=notrunc

$(call create_target,ucore.img)

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#对于以上生成各个项目所生成的种种文件做善后工作
$(call finish_all)

IGNORE_ALLDEPS	= clean \
				  dist-clean \
				  grade \
				  touch \
				  print-.+ \
				  handin

ifeq ($(call match,$(MAKECMDGOALS),$(IGNORE_ALLDEPS)),0)
-include $(ALLDEPS)
endif

# files for grade script

TARGETS: $(TARGETS)

.DEFAULT_GOAL := TARGETS

.PHONY: qemu qemu-nox debug debug-nox
qemu: $(UCOREIMG)
	$(V)$(QEMU) -parallel stdio -hda $< -serial null

qemu-nox: $(UCOREIMG)
	$(V)$(QEMU) -serial mon:stdio -hda $< -nographic
TERMINAL        :=gnome-terminal
debug: $(UCOREIMG)
	$(V)$(QEMU) -S -s -parallel stdio -hda $< -serial null &
	$(V)sleep 2
	$(V)$(TERMINAL) -e "gdb -q -tui -x tools/gdbinit"
	
debug-nox: $(UCOREIMG)
	$(V)$(QEMU) -S -s -serial mon:stdio -hda $< -nographic &
	$(V)sleep 2
	$(V)$(TERMINAL) -e "gdb -q -x tools/gdbinit"

.PHONY: grade touch

GRADE_GDB_IN	:= .gdb.in
GRADE_QEMU_OUT	:= .qemu.out
HANDIN			:= proj$(PROJ)-handin.tar.gz

TOUCH_FILES		:= kern/trap/trap.c

MAKEOPTS		:= --quiet --no-print-directory

grade:
	$(V)$(MAKE) $(MAKEOPTS) clean
	$(V)$(SH) tools/grade.sh

touch:
	$(V)$(foreach f,$(TOUCH_FILES),$(TOUCH) $(f))

print-%:
	@echo $($(shell echo $(patsubst print-%,%,$@) | $(TR) [a-z] [A-Z]))

.PHONY: clean dist-clean handin packall tags
clean:
	$(V)$(RM) $(GRADE_GDB_IN) $(GRADE_QEMU_OUT) cscope* tags
	-$(RM) -r $(OBJDIR) $(BINDIR)

dist-clean: clean
	-$(RM) $(HANDIN)

handin: packall
	@echo Please visit http://learn.tsinghua.edu.cn and upload $(HANDIN). Thanks!

packall: clean
	@$(RM) -f $(HANDIN)
	@tar -czf $(HANDIN) `find . -type f -o -type d | grep -v '^\.*$$' | grep -vF '$(HANDIN)'`

tags:
	@echo TAGS ALL
	$(V)rm -f cscope.files cscope.in.out cscope.out cscope.po.out tags
	$(V)find . -type f -name "*.[chS]" >cscope.files
	$(V)cscope -bq 
	$(V)ctags -L cscope.files

注：gcc重要编译参数
-I<dir>		            指定搜索系统头文件的目录，可以重复使用多个该选项指定多个目录
-Wall									显示所有的警告消息
-O2										优化（级别为2）
-m32									指明目标代码32位
-Os										对生成的二进制代码进行尺寸上的优化
-ggdb									提供编译信息
-nostdinc							只为头文件寻找-I选项指定的目录
-fno-builtin					除非利用"__builtin_"进行引用，否则不识别所有内建函数
-fno-stack-protector	不检测缓存溢出
-c										完成编译或汇编工作，但是不链接，以目标文件（.o）形式输出

2. 一个被系统认为是符合规范的硬盘主引导扇区的特征是什么？
答：根据代码sign.c中的内容，一个被系统认为是符合规范的硬盘主引导扇区具有如下特征：
（1）硬盘主引导扇区共512字节。
（2）硬盘主引导程序大小不超过510字节，且位于主引导扇区第0-509字节，剩余空间补零。
（3）引导扇区有有效标志，位于第510-511（1FEh-1FFh）字节处，值为AA55h，即1FEh字节存0x55，1FFh字节存0xAA。

练习2：使用qemu执行并调试lab1中的软件，需要在报告中简要写出以下几个小练习的过程：

1. 从CPU加电后执行的第一条指令开始，单步跟踪BIOS的执行。
答：使用in_asm命令得到实际执行的反汇编代码(qemu -S -hda ucore.img -monitor stdio -d in_asm)，输出结果如下所示：

----------------
IN: 
0xfffffff0:  ljmp   $0xf000,$0xe05b

----------------
IN: 
0x000fe05b:  cmpl   $0x0,%cs:-0x2f6c
0x000fe062:  jne    0xfc5be

----------------
IN: 
0x000fe066:  xor    %ax,%ax
0x000fe068:  mov    %ax,%ss

----------------
IN: 
0x000fe06a:  mov    $0x7000,%esp

----------------
IN: 
0x000fe070:  mov    $0xf40ec,%edx
0x000fe076:  jmp    0xfc450

----------------
IN: 
0x000fc450:  mov    %eax,%ecx
0x000fc453:  cli    
0x000fc454:  cld    
0x000fc455:  mov    $0x8f,%eax
0x000fc45b:  out    %al,$0x70
0x000fc45d:  in     $0x71,%al
0x000fc45f:  in     $0x92,%al
0x000fc461:  or     $0x2,%al
0x000fc463:  out    %al,$0x92
0x000fc465:  lidtw  %cs:-0x2c20
0x000fc46b:  lgdtw  %cs:-0x2c60
0x000fc471:  mov    %cr0,%eax
0x000fc474:  or     $0x1,%eax
0x000fc478:  mov    %eax,%cr0

----------------
IN: 
0x000fc47b:  ljmpl  $0x8,$0xfc483

----------------
IN: 
0x000fc483:  mov    $0x10,%eax
0x000fc488:  mov    %eax,%ds

----------------
IN: 
0x000fc48a:  mov    %eax,%es

----------------
IN: 
0x000fc48c:  mov    %eax,%ss

----------------
IN: 
0x000fc48e:  mov    %eax,%fs

----------------
IN: 
0x000fc490:  mov    %eax,%gs
0x000fc492:  mov    %ecx,%eax
0x000fc494:  jmp    *%edx

----------------
IN: 
0x000f40ec:  push   %ebx
0x000f40ed:  sub    $0x2c,%esp
0x000f40f0:  movl   $0xf5dac,0x4(%esp)
0x000f40f8:  movl   $0xf5b49,(%esp)
0x000f40ff:  call   0xf2058

----------------
IN: 
0x000f2058:  lea    0x8(%esp),%ecx
0x000f205c:  mov    0x4(%esp),%edx
0x000f2060:  mov    $0xf5d9c,%eax
0x000f2065:  call   0xf1e46

----------------
IN: 
0x000f1e46:  push   %ebp
0x000f1e47:  push   %edi
0x000f1e48:  push   %esi
0x000f1e49:  push   %ebx
0x000f1e4a:  sub    $0xc,%esp
0x000f1e4d:  mov    %eax,0x4(%esp)
0x000f1e51:  mov    %ecx,%ebx
0x000f1e53:  mov    %edx,%edi
0x000f1e55:  movsbl (%edi),%edx
0x000f1e58:  test   %dl,%dl
0x000f1e5a:  je     0xf203d

----------------
IN: 
0x000f1e60:  cmp    $0x25,%dl
0x000f1e63:  je     0xf1e6a

----------------
IN: 
0x000f1e65:  jmp    0xf2028

----------------
IN: 
0x000f2028:  mov    0x4(%esp),%eax
0x000f202c:  call   0xf15a3

----------------
IN: 
0x000f15a3:  mov    %eax,%ecx
0x000f15a5:  call   *(%ecx)

----------------
IN: 
0x000f1598:  mov    %edx,%eax
0x000f159a:  mov    0xfd386,%dx
0x000f15a1:  out    %al,(%dx)
0x000f15a2:  ret    

----------------
IN: 
0x000f15a7:  ret    

----------------
IN: 
0x000f2031:  jmp    0xf2037

----------------
IN: 
0x000f2037:  inc    %edi
0x000f2038:  jmp    0xf1e55

----------------
IN: 
0x000f1e55:  movsbl (%edi),%edx
0x000f1e58:  test   %dl,%dl
0x000f1e5a:  je     0xf203d

----------------
IN: 
0x000f1e6a:  lea    0x1(%edi),%esi
0x000f1e6d:  movb   $0x20,0xb(%esp)
0x000f1e72:  xor    %ecx,%ecx
0x000f1e74:  movsbl (%esi),%eax
0x000f1e77:  lea    -0x30(%eax),%edx
0x000f1e7a:  cmp    $0x9,%dl
0x000f1e7d:  ja     0xf1e9a

----------------
IN: 
0x000f1e9a:  mov    %esi,%edx
0x000f1e9c:  xor    %ebp,%ebp
0x000f1e9e:  cmp    $0x6c,%al
0x000f1ea0:  jne    0xf1eb7

----------------
IN: 
0x000f1eb7:  cmp    $0x70,%al
0x000f1eb9:  je     0xf1f57

----------------
IN: 
0x000f1ebf:  jg     0xf1ee6

----------------
IN: 
0x000f1ee6:  cmp    $0x75,%al
0x000f1ee8:  je     0xf1f45

----------------
IN: 
0x000f1eea:  cmp    $0x78,%al
0x000f1eec:  je     0xf1f81

----------------
IN: 
0x000f1ef2:  cmp    $0x73,%al
0x000f1ef4:  jne    0xf2023

----------------
IN: 
0x000f1efa:  jmp    0xf200b

----------------
IN: 
0x000f200b:  lea    0x4(%ebx),%ebp
0x000f200e:  mov    (%ebx),%ebx
0x000f2010:  movsbl (%ebx),%edx
0x000f2013:  test   %dl,%dl
0x000f2015:  je     0xf2033

----------------
IN: 
0x000f2017:  mov    0x4(%esp),%eax
0x000f201b:  call   0xf15a3

----------------
IN: 
0x000f2020:  inc    %ebx
0x000f2021:  jmp    0xf2010

----------------
IN: 
0x000f2010:  movsbl (%ebx),%edx
0x000f2013:  test   %dl,%dl
0x000f2015:  je     0xf2033

----------------
IN: 
0x000f2033:  mov    %esi,%edi
0x000f2035:  mov    %ebp,%ebx
0x000f2037:  inc    %edi
0x000f2038:  jmp    0xf1e55

----------------
IN: 
0x000f203d:  add    $0xc,%esp
0x000f2040:  pop    %ebx
0x000f2041:  pop    %esi
0x000f2042:  pop    %edi
0x000f2043:  pop    %ebp
0x000f2044:  ret    

----------------
IN: 
0x000f206a:  ret    

----------------
IN: 
0x000f4104:  mov    %cr0,%eax
0x000f4107:  and    $0x9fffffff,%eax
0x000f410c:  mov    %eax,%cr0

----------------
IN: 
0x000f410f:  mov    $0x8f,%al
0x000f4111:  out    %al,$0x70
0x000f4113:  xor    %edx,%edx
0x000f4115:  mov    %dl,%al
0x000f4117:  out    %al,$0x71
0x000f4119:  out    %al,$0xd
0x000f411b:  out    %al,$0xda
0x000f411d:  mov    $0xc0,%al
0x000f411f:  out    %al,$0xd6
0x000f4121:  mov    %dl,%al
0x000f4123:  out    %al,$0xd4
0x000f4125:  mov    $0x40000000,%ebx
0x000f412a:  lea    0x18(%esp),%eax
0x000f412e:  mov    %eax,0x4(%esp)
0x000f4132:  lea    0x14(%esp),%eax
0x000f4136:  mov    %eax,(%esp)
0x000f4139:  lea    0x10(%esp),%ecx
0x000f413d:  lea    0xc(%esp),%edx
0x000f4141:  mov    %ebx,%eax
0x000f4143:  call   0xf1683

----------------
IN: 
0x000f1683:  push   %ebp
0x000f1684:  push   %edi
0x000f1685:  push   %esi
0x000f1686:  push   %ebx
0x000f1687:  mov    %edx,%esi
0x000f1689:  mov    %ecx,%edi
0x000f168b:  mov    0x14(%esp),%ebp
0x000f168f:  pushf  
0x000f1690:  pop    %ecx
0x000f1691:  mov    %ecx,%edx
0x000f1693:  xor    $0x200000,%edx
0x000f1699:  push   %edx
0x000f169a:  popf   

----------------
IN: 
0x000f169b:  pushf  
0x000f169c:  pop    %edx
0x000f169d:  push   %ecx
0x000f169e:  popf   

----------------
IN: 
0x000f169f:  xor    %ecx,%edx
0x000f16a1:  and    $0x200000,%edx
0x000f16a7:  jne    0xf16c8

----------------
IN: 
0x000f16c8:  cpuid  
0x000f16ca:  mov    %eax,(%esi)
0x000f16cc:  mov    %ebx,(%edi)
0x000f16ce:  mov    %ecx,0x0(%ebp)
0x000f16d1:  mov    0x18(%esp),%eax
0x000f16d5:  mov    %edx,(%eax)
0x000f16d7:  pop    %ebx
0x000f16d8:  pop    %esi
0x000f16d9:  pop    %edi
0x000f16da:  pop    %ebp
0x000f16db:  ret    

----------------
IN: 
0x000f4148:  mov    0x10(%esp),%eax
0x000f414c:  mov    %eax,0x1f(%esp)
0x000f4150:  mov    0x14(%esp),%eax
0x000f4154:  mov    %eax,0x23(%esp)
0x000f4158:  mov    0x18(%esp),%eax
0x000f415c:  mov    %eax,0x27(%esp)
0x000f4160:  movb   $0x0,0x2b(%esp)
0x000f4165:  mov    $0xf5b62,%edx
0x000f416a:  lea    0x1f(%esp),%eax
0x000f416e:  call   0xf170f

----------------
IN: 
0x000f170f:  push   %ebx
0x000f1710:  xor    %ecx,%ecx
0x000f1712:  mov    (%eax,%ecx,1),%bl
0x000f1715:  cmp    (%edx,%ecx,1),%bl
0x000f1718:  je     0xf1726

----------------
IN: 
0x000f171a:  setge  %al
0x000f171d:  movzbl %al,%eax
0x000f1720:  lea    -0x1(%eax,%eax,1),%eax
0x000f1724:  jmp    0xf172d

----------------
IN: 
0x000f172d:  pop    %ebx
0x000f172e:  ret    

----------------
IN: 
0x000f4173:  test   %eax,%eax
0x000f4175:  jne    0xf41cd

----------------
IN: 
0x000f41cd:  add    $0x100,%ebx
0x000f41d3:  cmp    $0x40010000,%ebx
0x000f41d9:  jne    0xf412a

----------------
IN: 
0x000f412a:  lea    0x18(%esp),%eax
0x000f412e:  mov    %eax,0x4(%esp)
0x000f4132:  lea    0x14(%esp),%eax
0x000f4136:  mov    %eax,(%esp)
0x000f4139:  lea    0x10(%esp),%ecx
0x000f413d:  lea    0xc(%esp),%edx
0x000f4141:  mov    %ebx,%eax
0x000f4143:  call   0xf1683

----------------
IN: 
0x000f41df:  cmpl   $0x0,0xf5df4
0x000f41e6:  jne    0xf41f4

----------------
IN: 
0x000f41e8:  movl   $0xf5bde,(%esp)
0x000f41ef:  call   0xf2058

----------------
IN: 
0x000f41f4:  cmpl   $0x0,0xf5df4
0x000f41fb:  jne    0xf4202

----------------
IN: 
0x000f41fd:  call   0xf20dd

----------------
IN: 
0x000f20dd:  push   %esi
0x000f20de:  push   %ebx
0x000f20df:  push   %ebx
0x000f20e0:  xor    %edx,%edx
0x000f20e2:  or     $0xffffffff,%eax
0x000f20e5:  jmp    0xf212f

----------------
IN: 
0x000f212f:  call   0xf1cd2

----------------
IN: 
0x000f1cd2:  push   %edi
0x000f1cd3:  push   %esi
0x000f1cd4:  push   %ebx
0x000f1cd5:  mov    %eax,%ebx
0x000f1cd7:  mov    %edx,%esi
0x000f1cd9:  test   $0x7,%al
0x000f1cdb:  jne    0xf1cf5

----------------
IN: 
0x000f1cf5:  lea    0x1(%ebx),%ecx
0x000f1cf8:  mov    $0xcf8,%ebx
0x000f1cfd:  mov    $0xcfc,%edi
0x000f1d02:  movzwl %cx,%eax
0x000f1d05:  mov    %eax,%edx
0x000f1d07:  shr    $0x8,%edx
0x000f1d0a:  cmp    %esi,%edx
0x000f1d0c:  jne    0xf1d31

----------------
IN: 
0x000f1d0e:  shl    $0x8,%eax
0x000f1d11:  or     $0x80000000,%eax
0x000f1d16:  mov    %ebx,%edx
0x000f1d18:  out    %eax,(%dx)
0x000f1d19:  mov    %edi,%edx
0x000f1d1b:  in     (%dx),%ax
0x000f1d1d:  dec    %eax
0x000f1d1e:  cmp    $0xfffffffd,%ax
0x000f1d22:  jbe    0xf1d34

----------------
IN: 
0x000f1d34:  mov    %ecx,%eax
0x000f1d36:  pop    %ebx
0x000f1d37:  pop    %esi
0x000f1d38:  pop    %edi
0x000f1d39:  ret    

----------------
IN: 
0x000f2134:  mov    %eax,%ebx
0x000f2136:  test   %eax,%eax
0x000f2138:  jns    0xf20e7

----------------
IN: 
0x000f20e7:  movzwl %bx,%esi
0x000f20ea:  xor    %edx,%edx
0x000f20ec:  mov    %esi,%eax
0x000f20ee:  call   0xf1789

----------------
IN: 
0x000f1789:  mov    %edx,%ecx
0x000f178b:  and    $0xfc,%ecx
0x000f1791:  or     $0x80000000,%ecx
0x000f1797:  shl    $0x8,%eax
0x000f179a:  or     %eax,%ecx
0x000f179c:  mov    $0xcf8,%edx
0x000f17a1:  mov    %ecx,%eax
0x000f17a3:  out    %eax,(%dx)
0x000f17a4:  mov    $0xfc,%dl
0x000f17a6:  in     (%dx),%eax
0x000f17a7:  ret    

----------------
IN: 
0x000f20f3:  mov    %eax,%edx
0x000f20f5:  shr    $0x10,%edx
0x000f20f8:  cmp    $0x8086,%ax
0x000f20fc:  sete   %al
0x000f20ff:  cmp    $0x1237,%dx
0x000f2104:  jne    0xf2111

----------------
IN: 
0x000f2106:  test   %al,%al
0x000f2108:  je     0xf2111

----------------
IN: 
0x000f210a:  mov    $0x59,%edx
0x000f210f:  jmp    0xf2121

----------------
IN: 
0x000f2121:  mov    %esi,%eax
0x000f2123:  pop    %ecx
0x000f2124:  pop    %ebx
0x000f2125:  pop    %esi
0x000f2126:  jmp    0xf1b12

----------------
IN: 
0x000f1b12:  push   %esi
0x000f1b13:  push   %ebx
0x000f1b14:  mov    %edx,%esi
0x000f1b16:  mov    %eax,%ebx
0x000f1b18:  call   0xf17a8

----------------
IN: 
0x000f17a8:  push   %ebx
0x000f17a9:  mov    %edx,%ebx
0x000f17ab:  mov    %edx,%ecx
0x000f17ad:  and    $0xfc,%ecx
0x000f17b3:  or     $0x80000000,%ecx
0x000f17b9:  shl    $0x8,%eax
0x000f17bc:  or     %eax,%ecx
0x000f17be:  mov    $0xcf8,%edx
0x000f17c3:  mov    %ecx,%eax
0x000f17c5:  out    %eax,(%dx)
0x000f17c6:  and    $0x3,%ebx
0x000f17c9:  lea    0xcfc(%ebx),%edx
0x000f17cf:  in     (%dx),%al
0x000f17d0:  pop    %ebx
0x000f17d1:  ret    

----------------
IN: 
0x000f1b1d:  mov    %esi,%edx
0x000f1b1f:  test   $0x10,%al
0x000f1b21:  mov    %ebx,%eax
0x000f1b23:  jne    0xf1b2e

----------------
IN: 
0x000f1b25:  mov    $0xffff1aaf,%ecx
0x000f1b2a:  call   *%ecx

----------------
IN: 
0xffff1aaf:  push   %ebp
0xffff1ab0:  push   %edi
0xffff1ab1:  push   %esi
0xffff1ab2:  push   %ebx
0xffff1ab3:  mov    %edx,%edi
0xffff1ab5:  lea    0x1(%edx),%ebx
0xffff1ab8:  lea    0x7(%edx),%ebp
0xffff1abb:  movzwl %ax,%esi
0xffff1abe:  mov    %ebx,%edx
0xffff1ac0:  mov    %esi,%eax
0xffff1ac2:  call   0xffff17a8

----------------
IN: 
0xffff17a8:  push   %ebx
0xffff17a9:  mov    %edx,%ebx
0xffff17ab:  mov    %edx,%ecx
0xffff17ad:  and    $0xfc,%ecx
0xffff17b3:  or     $0x80000000,%ecx
0xffff17b9:  shl    $0x8,%eax
0xffff17bc:  or     %eax,%ecx
0xffff17be:  mov    $0xcf8,%edx
0xffff17c3:  mov    %ecx,%eax
0xffff17c5:  out    %eax,(%dx)
0xffff17c6:  and    $0x3,%ebx
0xffff17c9:  lea    0xcfc(%ebx),%edx
0xffff17cf:  in     (%dx),%al
0xffff17d0:  pop    %ebx
0xffff17d1:  ret    

----------------
IN: 
0xffff1ac7:  mov    $0x33,%ecx
0xffff1acc:  mov    %ebx,%edx
0xffff1ace:  mov    %esi,%eax
0xffff1ad0:  call   0xffff175d

----------------
IN: 
0xffff175d:  push   %edi
0xffff175e:  push   %esi
0xffff175f:  mov    %eax,%esi
0xffff1761:  mov    %edx,%edi
0xffff1763:  mov    %edx,%eax
0xffff1765:  and    $0xfc,%eax
0xffff176a:  or     $0x80000000,%eax
0xffff176f:  shl    $0x8,%esi
0xffff1772:  or     %esi,%eax
0xffff1774:  mov    $0xcf8,%edx
0xffff1779:  out    %eax,(%dx)
0xffff177a:  and    $0x3,%edi
0xffff177d:  lea    0xcfc(%edi),%edx
0xffff1783:  mov    %cl,%al
0xffff1785:  out    %al,(%dx)
0xffff1786:  pop    %esi
0xffff1787:  pop    %edi
0xffff1788:  ret    

----------------
IN: 
0xffff1ad5:  inc    %ebx
0xffff1ad6:  cmp    %ebp,%ebx
0xffff1ad8:  jne    0xffff1abe

----------------
IN: 
0xffff1abe:  mov    %ebx,%edx
0xffff1ac0:  mov    %esi,%eax
0xffff1ac2:  call   0xffff17a8

----------------
IN: 
0xffff1ada:  mov    %edi,%edx
0xffff1adc:  mov    %esi,%eax
0xffff1ade:  call   0xffff17a8

----------------
IN: 
0xffff1ae3:  mov    %al,%bl
0xffff1ae5:  mov    $0x30,%ecx
0xffff1aea:  mov    %edi,%edx
0xffff1aec:  mov    %esi,%eax
0xffff1aee:  call   0xffff175d

----------------
IN: 
0xffff1af3:  and    $0x10,%bl
0xffff1af6:  jne    0xffff1b0d

----------------
IN: 
0xffff1af8:  mov    $0xe0b38,%eax
0xffff1afd:  mov    $0x100000,%ecx
0xffff1b02:  sub    %eax,%ecx
0xffff1b04:  mov    $0xfffe0b38,%esi
0xffff1b09:  mov    %eax,%edi
0xffff1b0b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xffff1b0b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xffff1b0d:  pop    %ebx
0xffff1b0e:  pop    %esi
0xffff1b0f:  pop    %edi
0xffff1b10:  pop    %ebp
0xffff1b11:  ret    

----------------
IN: 
0x000f1b2c:  jmp    0xf1b35

----------------
IN: 
0x000f1b35:  pop    %ebx
0x000f1b36:  pop    %esi
0x000f1b37:  ret    

----------------
IN: 
0x000f4202:  call   0xef43f

----------------
IN: 
0x000ef43f:  push   %ebp
0x000ef440:  push   %edi
0x000ef441:  push   %esi
0x000ef442:  push   %ebx
0x000ef443:  sub    $0x48,%esp
0x000ef446:  movl   $0x1,0xfd094
0x000ef450:  movl   $0x1,0xf14cc
0x000ef45a:  mov    $0x510,%edx
0x000ef45f:  xor    %eax,%eax
0x000ef461:  out    %ax,(%dx)
0x000ef463:  mov    $0xf4c1c,%ecx
0x000ef468:  mov    $0x11,%dl
0x000ef46a:  in     (%dx),%al
0x000ef46b:  movzbl %al,%eax
0x000ef46e:  movsbl (%ecx),%ebx
0x000ef471:  cmp    %ebx,%eax
0x000ef473:  je     0xef481

----------------
IN: 
0x000ef481:  inc    %ecx
0x000ef482:  cmp    $0xf4c20,%ecx
0x000ef488:  jne    0xef46a

----------------
IN: 
0x000ef46a:  in     (%dx),%al
0x000ef46b:  movzbl %al,%eax
0x000ef46e:  movsbl (%ecx),%ebx
0x000ef471:  cmp    %ebx,%eax
0x000ef473:  je     0xef481

----------------
IN: 
0x000ef48a:  cmpl   $0x0,0xf5df4
0x000ef491:  je     0xef5cc

----------------
IN: 
0x000ef5cc:  mov    $0xb4,%al
0x000ef5ce:  out    %al,$0x70
0x000ef5d0:  in     $0x71,%al
0x000ef5d2:  mov    %al,%cl
0x000ef5d4:  mov    $0xb5,%al
0x000ef5d6:  out    %al,$0x70
0x000ef5d8:  in     $0x71,%al
0x000ef5da:  mov    %eax,%edx
0x000ef5dc:  shl    $0x18,%edx
0x000ef5df:  movzbl %cl,%eax
0x000ef5e2:  shl    $0x10,%eax
0x000ef5e5:  or     %eax,%edx
0x000ef5e7:  je     0xef5f1

----------------
IN: 
0x000ef5e9:  add    $0x1000000,%edx
0x000ef5ef:  jmp    0xef613

----------------
IN: 
0x000ef613:  mov    %edx,0xfdbf0
0x000ef619:  test   %edx,%edx
0x000ef61b:  je     0xef639

----------------
IN: 
0x000ef61d:  movl   $0x1,0x8(%esp)
0x000ef625:  mov    %edx,(%esp)
0x000ef628:  movl   $0x0,0x4(%esp)
0x000ef630:  xor    %eax,%eax
0x000ef632:  xor    %edx,%edx
0x000ef634:  call   0xe4924

----------------
IN: 
0x000e4924:  push   %ebp
0x000e4925:  push   %edi
0x000e4926:  push   %esi
0x000e4927:  push   %ebx
0x000e4928:  sub    $0x3c,%esp
0x000e492b:  mov    %eax,0x28(%esp)
0x000e492f:  mov    %edx,0x2c(%esp)
0x000e4933:  mov    0x50(%esp),%edi
0x000e4937:  mov    0x54(%esp),%ebp
0x000e493b:  mov    0x58(%esp),%ebx
0x000e493f:  mov    %ebx,0x30(%esp)
0x000e4943:  add    %edi,%eax
0x000e4945:  adc    %ebp,%edx
0x000e4947:  mov    %eax,0x20(%esp)
0x000e494b:  mov    %edx,0x24(%esp)
0x000e494f:  mov    0xfcd28,%ecx
0x000e4955:  movl   $0x0,0x1c(%esp)
0x000e495d:  jmp    0xe4a5c

----------------
IN: 
0x000e4a5c:  cmp    %ecx,0x1c(%esp)
0x000e4a60:  jl     0xe4962

----------------
IN: 
0x000e4a66:  jmp    0xe4ad6

----------------
IN: 
0x000e4ad6:  imul   $0x14,0x1c(%esp),%ebx
0x000e4adb:  mov    0x1c(%esp),%eax
0x000e4adf:  cmp    0xfcd28,%eax
0x000e4ae5:  jl     0xe4a68

----------------
IN: 
0x000e4ae7:  cmpl   $0xffffffff,0x30(%esp)
0x000e4aec:  je     0xe4b16

----------------
IN: 
0x000e4aee:  mov    0x30(%esp),%ebx
0x000e4af2:  mov    %ebx,0x58(%esp)
0x000e4af6:  mov    %edi,0x50(%esp)
0x000e4afa:  mov    %ebp,0x54(%esp)
0x000e4afe:  mov    0x28(%esp),%edx
0x000e4b02:  mov    0x2c(%esp),%ecx
0x000e4b06:  mov    0x1c(%esp),%eax
0x000e4b0a:  add    $0x3c,%esp
0x000e4b0d:  pop    %ebx
0x000e4b0e:  pop    %esi
0x000e4b0f:  pop    %edi
0x000e4b10:  pop    %ebp
0x000e4b11:  jmp    0xe4890

----------------
IN: 
0x000e4890:  push   %ebp
0x000e4891:  push   %edi
0x000e4892:  push   %esi
0x000e4893:  push   %ebx
0x000e4894:  sub    $0xc,%esp
0x000e4897:  mov    %edx,(%esp)
0x000e489a:  mov    %ecx,0x4(%esp)
0x000e489e:  mov    0x20(%esp),%edi
0x000e48a2:  mov    0x24(%esp),%ebp
0x000e48a6:  mov    0x28(%esp),%edx
0x000e48aa:  mov    %edx,0x8(%esp)
0x000e48ae:  mov    0xfcd28,%ecx
0x000e48b4:  cmp    $0x1f,%ecx
0x000e48b7:  jle    0xe48cf

----------------
IN: 
0x000e48cf:  imul   $0x14,%eax,%esi
0x000e48d2:  lea    0xfcd2c(%esi),%ebx
0x000e48d8:  sub    %eax,%ecx
0x000e48da:  imul   $0x14,%ecx,%ecx
0x000e48dd:  inc    %eax
0x000e48de:  imul   $0x14,%eax,%eax
0x000e48e1:  add    $0xfcd2c,%eax
0x000e48e6:  mov    %ebx,%edx
0x000e48e8:  call   0xe2b9d

----------------
IN: 
0x000e2b9d:  push   %ebp
0x000e2b9e:  push   %edi
0x000e2b9f:  push   %esi
0x000e2ba0:  push   %ebx
0x000e2ba1:  cmp    %eax,%edx
0x000e2ba3:  jb     0xe2bad

----------------
IN: 
0x000e2bad:  lea    -0x1(%ecx),%ebx
0x000e2bb0:  lea    (%eax,%ebx,1),%ebp
0x000e2bb3:  add    %ebx,%edx
0x000e2bb5:  mov    %ecx,%ebx
0x000e2bb7:  mov    %ecx,%esi
0x000e2bb9:  neg    %esi
0x000e2bbb:  add    %esi,%edx
0x000e2bbd:  jmp    0xe2bcb

----------------
IN: 
0x000e2bcb:  dec    %ebx
0x000e2bcc:  cmp    $0xffffffff,%ebx
0x000e2bcf:  jne    0xe2bbf

----------------
IN: 
0x000e2bd1:  mov    %ebp,%eax
0x000e2bd3:  sub    %ecx,%eax
0x000e2bd5:  pop    %ebx
0x000e2bd6:  pop    %esi
0x000e2bd7:  pop    %edi
0x000e2bd8:  pop    %ebp
0x000e2bd9:  ret    

----------------
IN: 
0x000e48ed:  incl   0xfcd28
0x000e48f3:  mov    (%esp),%eax
0x000e48f6:  mov    0x4(%esp),%edx
0x000e48fa:  mov    %eax,0xfcd2c(%esi)
0x000e4900:  mov    %edx,0xfcd30(%esi)
0x000e4906:  mov    %edi,0xfcd34(%esi)
0x000e490c:  mov    %ebp,0xfcd38(%esi)
0x000e4912:  mov    0x8(%esp),%edx
0x000e4916:  mov    %edx,0xfcd3c(%esi)
0x000e491c:  add    $0xc,%esp
0x000e491f:  pop    %ebx
0x000e4920:  pop    %esi
0x000e4921:  pop    %edi
0x000e4922:  pop    %ebp
0x000e4923:  ret    

----------------
IN: 
0x000ef639:  mov    $0xdb,%al
0x000ef63b:  out    %al,$0x70
0x000ef63d:  in     $0x71,%al
0x000ef63f:  movzbl %al,%edx
0x000ef642:  mov    $0xdc,%al
0x000ef644:  out    %al,$0x70
0x000ef646:  in     $0x71,%al
0x000ef648:  mov    %al,%cl
0x000ef64a:  mov    $0xdd,%al
0x000ef64c:  out    %al,$0x70
0x000ef64e:  in     $0x71,%al
0x000ef650:  shl    $0x10,%edx
0x000ef653:  shl    $0x18,%ecx
0x000ef656:  or     %ecx,%edx
0x000ef658:  movzbl %al,%eax
0x000ef65b:  mov    %edx,0xf14d0
0x000ef661:  mov    %eax,0xf14d4
0x000ef666:  mov    %eax,%ecx
0x000ef668:  or     %edx,%ecx
0x000ef66a:  je     0xef687

----------------
IN: 
0x000ef687:  movl   $0x2,0x8(%esp)
0x000ef68f:  movl   $0x40000,(%esp)
0x000ef696:  movl   $0x0,0x4(%esp)
0x000ef69e:  mov    $0xfffc0000,%eax
0x000ef6a3:  xor    %edx,%edx
0x000ef6a5:  call   0xe4924

----------------
IN: 
0x000e4962:  imul   $0x14,0x1c(%esp),%edx
0x000e4967:  lea    0xfcd2c(%edx),%esi
0x000e496d:  mov    %esi,0x38(%esp)
0x000e4971:  mov    0xfcd2c(%edx),%ebx
0x000e4977:  mov    0xfcd30(%edx),%esi
0x000e497d:  mov    %ebx,0x14(%esp)
0x000e4981:  mov    %esi,0x18(%esp)
0x000e4985:  mov    %ebx,%eax
0x000e4987:  mov    %esi,%edx
0x000e4989:  mov    0x38(%esp),%esi
0x000e498d:  add    0x8(%esi),%eax
0x000e4990:  adc    0xc(%esi),%edx
0x000e4993:  cmp    %edx,0x2c(%esp)
0x000e4997:  jb     0xe49aa

----------------
IN: 
0x000e4999:  ja     0xe49a1

----------------
IN: 
0x000e499b:  cmp    %eax,0x28(%esp)
0x000e499f:  jbe    0xe49aa

----------------
IN: 
0x000e49a1:  incl   0x1c(%esp)
0x000e49a5:  jmp    0xe4a5c

----------------
IN: 
0x000ef6aa:  movl   $0xffffffff,0x8(%esp)
0x000ef6b2:  movl   $0x50000,(%esp)
0x000ef6b9:  movl   $0x0,0x4(%esp)
0x000ef6c1:  mov    $0xa0000,%eax
0x000ef6c6:  xor    %edx,%edx
0x000ef6c8:  call   0xe4924

----------------
IN: 
0x000e49aa:  mov    0x18(%esp),%ecx
0x000e49ae:  cmp    %ecx,0x2c(%esp)
0x000e49b2:  jb     0xe4ad6

----------------
IN: 
0x000e49b8:  ja     0xe49c8

----------------
IN: 
0x000e49ba:  mov    0x14(%esp),%ebx
0x000e49be:  cmp    %ebx,0x28(%esp)
0x000e49c2:  jbe    0xe4ad6

----------------
IN: 
0x000e49c8:  mov    0x38(%esp),%esi
0x000e49cc:  mov    0x10(%esi),%esi
0x000e49cf:  mov    %esi,0x34(%esp)
0x000e49d3:  cmp    %esi,0x30(%esp)
0x000e49d7:  jne    0xe49fe

----------------
IN: 
0x000e49fe:  mov    0x28(%esp),%ebx
0x000e4a02:  mov    0x2c(%esp),%esi
0x000e4a06:  sub    0x14(%esp),%ebx
0x000e4a0a:  sbb    0x18(%esp),%esi
0x000e4a0e:  mov    0x38(%esp),%ecx
0x000e4a12:  mov    %ebx,0x8(%ecx)
0x000e4a15:  mov    %esi,0xc(%ecx)
0x000e4a18:  incl   0x1c(%esp)
0x000e4a1c:  cmp    0x24(%esp),%edx
0x000e4a20:  jb     0xe4ad6

----------------
IN: 
0x000e4a26:  ja     0xe4a32

----------------
IN: 
0x000e4a28:  cmp    0x20(%esp),%eax
0x000e4a2c:  jbe    0xe4ad6

----------------
IN: 
0x000e4a32:  mov    0x34(%esp),%ebx
0x000e4a36:  mov    %ebx,0x8(%esp)
0x000e4a3a:  sub    0x20(%esp),%eax
0x000e4a3e:  sbb    0x24(%esp),%edx
0x000e4a42:  mov    %eax,(%esp)
0x000e4a45:  mov    %edx,0x4(%esp)
0x000e4a49:  mov    0x20(%esp),%edx
0x000e4a4d:  mov    0x24(%esp),%ecx
0x000e4a51:  mov    0x1c(%esp),%eax
0x000e4a55:  call   0xe4890

----------------
IN: 
0x000e2bbf:  lea    0x0(%ebp,%esi,1),%edi
0x000e2bc3:  mov    0x1(%edx,%ebx,1),%al
0x000e2bc7:  mov    %al,0x1(%edi,%ebx,1)
0x000e2bcb:  dec    %ebx
0x000e2bcc:  cmp    $0xffffffff,%ebx
0x000e2bcf:  jne    0xe2bbf

----------------
IN: 
0x000e4a5a:  jmp    0xe4ad6

----------------
IN: 
0x000e4a68:  lea    0xfcd2c(%ebx),%ecx
0x000e4a6e:  mov    0xfcd2c(%ebx),%eax
0x000e4a74:  mov    0xfcd30(%ebx),%edx
0x000e4a7a:  cmp    %edx,0x24(%esp)
0x000e4a7e:  jb     0xe4ae7

----------------
IN: 
0x000e4a80:  ja     0xe4a88

----------------
IN: 
0x000e4a82:  cmp    %eax,0x20(%esp)
0x000e4a86:  jb     0xe4ae7

----------------
IN: 
0x000e4a88:  add    0x8(%ecx),%eax
0x000e4a8b:  adc    0xc(%ecx),%edx
0x000e4a8e:  cmp    %edx,0x24(%esp)
0x000e4a92:  jb     0xe4aa7

----------------
IN: 
0x000e4a94:  ja     0xe4a9c

----------------
IN: 
0x000e4a96:  cmp    %eax,0x20(%esp)
0x000e4a9a:  jb     0xe4aa7

----------------
IN: 
0x000e4aa7:  mov    0x20(%esp),%ebx
0x000e4aab:  mov    0x24(%esp),%esi
0x000e4aaf:  mov    %ebx,(%ecx)
0x000e4ab1:  mov    %esi,0x4(%ecx)
0x000e4ab4:  sub    %ebx,%eax
0x000e4ab6:  sbb    %esi,%edx
0x000e4ab8:  mov    %eax,0x8(%ecx)
0x000e4abb:  mov    %edx,0xc(%ecx)
0x000e4abe:  mov    0x30(%esp),%esi
0x000e4ac2:  cmp    0x10(%ecx),%esi
0x000e4ac5:  jne    0xe4ae7

----------------
IN: 
0x000e4b16:  add    $0x3c,%esp
0x000e4b19:  pop    %ebx
0x000e4b1a:  pop    %esi
0x000e4b1b:  pop    %edi
0x000e4b1c:  pop    %ebp
0x000e4b1d:  ret    

----------------
IN: 
0x000ef6cd:  movl   $0x2,0x8(%esp)
0x000ef6d5:  movl   $0x10000,(%esp)
0x000ef6dc:  movl   $0x0,0x4(%esp)
0x000ef6e4:  mov    $0xf0000,%eax
0x000ef6e9:  xor    %edx,%edx
0x000ef6eb:  call   0xe4924

----------------
IN: 
0x000ef6f0:  cmpl   $0x0,0xf14cc
0x000ef6f7:  je     0xef765

----------------
IN: 
0x000ef6f9:  mov    $0x510,%edx
0x000ef6fe:  mov    $0xffff8003,%eax
0x000ef703:  out    %ax,(%dx)
0x000ef705:  mov    $0x4,%ecx
0x000ef70a:  lea    0x30(%esp),%edi
0x000ef70e:  mov    $0x11,%dl
0x000ef710:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000ef710:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000ef712:  mov    0x30(%esp),%esi
0x000ef716:  test   %esi,%esi
0x000ef718:  je     0xef765

----------------
IN: 
0x000ef765:  lea    0x30(%esp),%eax
0x000ef769:  mov    %eax,0x4(%esp)
0x000ef76d:  lea    0x2c(%esp),%eax
0x000ef771:  mov    %eax,(%esp)
0x000ef774:  lea    0x28(%esp),%ecx
0x000ef778:  lea    0x24(%esp),%edx
0x000ef77c:  mov    $0x40000000,%eax
0x000ef781:  call   0xf1683

----------------
IN: 
0x000f1683:  push   %ebp
0x000f1684:  push   %edi
0x000f1685:  push   %esi
0x000f1686:  push   %ebx
0x000f1687:  mov    %edx,%esi
0x000f1689:  mov    %ecx,%edi
0x000f168b:  mov    0x14(%esp),%ebp
0x000f168f:  pushf  
0x000f1690:  pop    %ecx
0x000f1691:  mov    %ecx,%edx
0x000f1693:  xor    $0x200000,%edx
0x000f1699:  push   %edx
0x000f169a:  popf   

----------------
IN: 
0x000f169b:  pushf  
0x000f169c:  pop    %edx
0x000f169d:  push   %ecx
0x000f169e:  popf   

----------------
IN: 
0x000f169f:  xor    %ecx,%edx
0x000f16a1:  and    $0x200000,%edx
0x000f16a7:  jne    0xf16c8

----------------
IN: 
0x000f16c8:  cpuid  
0x000f16ca:  mov    %eax,(%esi)
0x000f16cc:  mov    %ebx,(%edi)
0x000f16ce:  mov    %ecx,0x0(%ebp)
0x000f16d1:  mov    0x18(%esp),%eax
0x000f16d5:  mov    %edx,(%eax)
0x000f16d7:  pop    %ebx
0x000f16d8:  pop    %esi
0x000f16d9:  pop    %edi
0x000f16da:  pop    %ebp
0x000f16db:  ret    

----------------
IN: 
0x000ef786:  mov    0x28(%esp),%eax
0x000ef78a:  mov    %eax,0x34(%esp)
0x000ef78e:  mov    0x2c(%esp),%eax
0x000ef792:  mov    %eax,0x38(%esp)
0x000ef796:  mov    0x30(%esp),%eax
0x000ef79a:  mov    %eax,0x3c(%esp)
0x000ef79e:  movb   $0x0,0x40(%esp)
0x000ef7a3:  mov    $0xf5aa8,%edx
0x000ef7a8:  lea    0x34(%esp),%eax
0x000ef7ac:  call   0xf170f

----------------
IN: 
0x000f170f:  push   %ebx
0x000f1710:  xor    %ecx,%ecx
0x000f1712:  mov    (%eax,%ecx,1),%bl
0x000f1715:  cmp    (%edx,%ecx,1),%bl
0x000f1718:  je     0xf1726

----------------
IN: 
0x000f171a:  setge  %al
0x000f171d:  movzbl %al,%eax
0x000f1720:  lea    -0x1(%eax,%eax,1),%eax
0x000f1724:  jmp    0xf172d

----------------
IN: 
0x000f172d:  pop    %ebx
0x000f172e:  ret    

----------------
IN: 
0x000ef7b1:  test   %eax,%eax
0x000ef7b3:  jne    0xef7d8

----------------
IN: 
0x000ef7d8:  mov    0xf14d0,%eax
0x000ef7dd:  mov    0xf14d4,%edx
0x000ef7e3:  mov    %eax,0x8(%esp)
0x000ef7e7:  mov    %edx,0xc(%esp)
0x000ef7eb:  mov    0xfdbf0,%eax
0x000ef7f0:  mov    %eax,0x4(%esp)
0x000ef7f4:  movl   $0xf5ab2,(%esp)
0x000ef7fb:  call   0xf2058

----------------
IN: 
0x000f2058:  lea    0x8(%esp),%ecx
0x000f205c:  mov    0x4(%esp),%edx
0x000f2060:  mov    $0xf5d9c,%eax
0x000f2065:  call   0xf1e46

----------------
IN: 
0x000f1e46:  push   %ebp
0x000f1e47:  push   %edi
0x000f1e48:  push   %esi
0x000f1e49:  push   %ebx
0x000f1e4a:  sub    $0xc,%esp
0x000f1e4d:  mov    %eax,0x4(%esp)
0x000f1e51:  mov    %ecx,%ebx
0x000f1e53:  mov    %edx,%edi
0x000f1e55:  movsbl (%edi),%edx
0x000f1e58:  test   %dl,%dl
0x000f1e5a:  je     0xf203d

----------------
IN: 
0x000f1e60:  cmp    $0x25,%dl
0x000f1e63:  je     0xf1e6a

----------------
IN: 
0x000f1e65:  jmp    0xf2028

----------------
IN: 
0x000f2028:  mov    0x4(%esp),%eax
0x000f202c:  call   0xf15a3

----------------
IN: 
0x000f15a3:  mov    %eax,%ecx
0x000f15a5:  call   *(%ecx)

----------------
IN: 
0x000f1598:  mov    %edx,%eax
0x000f159a:  mov    0xfd386,%dx
0x000f15a1:  out    %al,(%dx)
0x000f15a2:  ret    

----------------
IN: 
0x000f15a7:  ret    

----------------
IN: 
0x000f2031:  jmp    0xf2037

----------------
IN: 
0x000f2037:  inc    %edi
0x000f2038:  jmp    0xf1e55

----------------
IN: 
0x000f1e55:  movsbl (%edi),%edx
0x000f1e58:  test   %dl,%dl
0x000f1e5a:  je     0xf203d

----------------
IN: 
0x000f1e6a:  lea    0x1(%edi),%esi
0x000f1e6d:  movb   $0x20,0xb(%esp)
0x000f1e72:  xor    %ecx,%ecx
0x000f1e74:  movsbl (%esi),%eax
0x000f1e77:  lea    -0x30(%eax),%edx
0x000f1e7a:  cmp    $0x9,%dl
0x000f1e7d:  ja     0xf1e9a

----------------
IN: 
0x000f1e7f:  cmp    $0x30,%al
0x000f1e81:  jne    0xf1e87

----------------
IN: 
0x000f1e83:  test   %ecx,%ecx
0x000f1e85:  je     0xf1e90

----------------
IN: 
0x000f1e90:  movb   $0x30,0xb(%esp)
0x000f1e95:  xor    %ecx,%ecx
0x000f1e97:  inc    %esi
0x000f1e98:  jmp    0xf1e74

----------------
IN: 
0x000f1e74:  movsbl (%esi),%eax
0x000f1e77:  lea    -0x30(%eax),%edx
0x000f1e7a:  cmp    $0x9,%dl
0x000f1e7d:  ja     0xf1e9a

----------------
IN: 
0x000f1e87:  imul   $0xa,%ecx,%ecx
0x000f1e8a:  lea    -0x30(%ecx,%eax,1),%ecx
0x000f1e8e:  jmp    0xf1e97

----------------
IN: 
0x000f1e97:  inc    %esi
0x000f1e98:  jmp    0xf1e74

----------------
IN: 
0x000f1e9a:  mov    %esi,%edx
0x000f1e9c:  xor    %ebp,%ebp
0x000f1e9e:  cmp    $0x6c,%al
0x000f1ea0:  jne    0xf1eb7

----------------
IN: 
0x000f1eb7:  cmp    $0x70,%al
0x000f1eb9:  je     0xf1f57

----------------
IN: 
0x000f1ebf:  jg     0xf1ee6

----------------
IN: 
0x000f1ee6:  cmp    $0x75,%al
0x000f1ee8:  je     0xf1f45

----------------
IN: 
0x000f1eea:  cmp    $0x78,%al
0x000f1eec:  je     0xf1f81

----------------
IN: 
0x000f1f81:  mov    (%ebx),%edi
0x000f1f83:  mov    %ebp,%eax
0x000f1f85:  test   %al,%al
0x000f1f87:  movsbl 0xb(%esp),%eax
0x000f1f8c:  je     0xf1fb9

----------------
IN: 
0x000f1fb9:  lea    0x4(%ebx),%ebp
0x000f1fbc:  mov    %eax,(%esp)
0x000f1fbf:  mov    %edi,%edx
0x000f1fc1:  mov    0x4(%esp),%eax
0x000f1fc5:  call   0xf163e

----------------
IN: 
0x000f163e:  push   %ebp
0x000f163f:  push   %edi
0x000f1640:  push   %esi
0x000f1641:  push   %ebx
0x000f1642:  push   %esi
0x000f1643:  mov    %eax,%esi
0x000f1645:  mov    %edx,%edi
0x000f1647:  movsbl 0x18(%esp),%edx
0x000f164c:  mov    %edi,%eax
0x000f164e:  mov    $0x1,%ebx
0x000f1653:  jmp    0xf1656

----------------
IN: 
0x000f1656:  shr    $0x4,%eax
0x000f1659:  jne    0xf1655

----------------
IN: 
0x000f1655:  inc    %ebx
0x000f1656:  shr    $0x4,%eax
0x000f1659:  jne    0xf1655

----------------
IN: 
0x000f165b:  mov    %ecx,%ebp
0x000f165d:  sub    %ebx,%ebp
0x000f165f:  mov    %edx,(%esp)
0x000f1662:  jmp    0xf166f

----------------
IN: 
0x000f166f:  test   %ebp,%ebp
0x000f1671:  jg     0xf1664

----------------
IN: 
0x000f1664:  mov    (%esp),%edx
0x000f1667:  mov    %esi,%eax
0x000f1669:  call   0xf15a3

----------------
IN: 
0x000f166e:  dec    %ebp
0x000f166f:  test   %ebp,%ebp
0x000f1671:  jg     0xf1664

----------------
IN: 
0x000f1673:  mov    %ebx,%ecx
0x000f1675:  mov    %edi,%edx
0x000f1677:  mov    %esi,%eax
0x000f1679:  pop    %ebx
0x000f167a:  pop    %ebx
0x000f167b:  pop    %esi
0x000f167c:  pop    %edi
0x000f167d:  pop    %ebp
0x000f167e:  jmp    0xf15bb

----------------
IN: 
0x000f15bb:  push   %esi
0x000f15bc:  push   %ebx
0x000f15bd:  mov    %eax,%ebx
0x000f15bf:  mov    %edx,%esi
0x000f15c1:  dec    %ecx
0x000f15c2:  cmp    $0x6,%ecx
0x000f15c5:  ja     0xf15ce

----------------
IN: 
0x000f15c7:  jmp    *0xf427c(,%ecx,4)

----------------
IN: 
0x000f15d6:  mov    %esi,%edx
0x000f15d8:  shr    $0x18,%edx
0x000f15db:  and    $0xf,%edx
0x000f15de:  mov    %ebx,%eax
0x000f15e0:  call   0xf15a8

----------------
IN: 
0x000f15a8:  lea    0x57(%edx),%ecx
0x000f15ab:  cmp    $0x9,%edx
0x000f15ae:  ja     0xf15b3

----------------
IN: 
0x000f15b0:  lea    0x30(%edx),%ecx
0x000f15b3:  movsbl %cl,%edx
0x000f15b6:  jmp    0xf15a3

----------------
IN: 
0x000f15e5:  mov    %esi,%edx
0x000f15e7:  shr    $0x14,%edx
0x000f15ea:  and    $0xf,%edx
0x000f15ed:  mov    %ebx,%eax
0x000f15ef:  call   0xf15a8

----------------
IN: 
0x000f15f4:  mov    %esi,%edx
0x000f15f6:  shr    $0x10,%edx
0x000f15f9:  and    $0xf,%edx
0x000f15fc:  mov    %ebx,%eax
0x000f15fe:  call   0xf15a8

----------------
IN: 
0x000f1603:  mov    %esi,%edx
0x000f1605:  shr    $0xc,%edx
0x000f1608:  and    $0xf,%edx
0x000f160b:  mov    %ebx,%eax
0x000f160d:  call   0xf15a8

----------------
IN: 
0x000f1612:  mov    %esi,%edx
0x000f1614:  shr    $0x8,%edx
0x000f1617:  and    $0xf,%edx
0x000f161a:  mov    %ebx,%eax
0x000f161c:  call   0xf15a8

----------------
IN: 
0x000f1621:  mov    %esi,%edx
0x000f1623:  shr    $0x4,%edx
0x000f1626:  and    $0xf,%edx
0x000f1629:  mov    %ebx,%eax
0x000f162b:  call   0xf15a8

----------------
IN: 
0x000f1630:  mov    %esi,%edx
0x000f1632:  and    $0xf,%edx
0x000f1635:  mov    %ebx,%eax
0x000f1637:  pop    %ebx
0x000f1638:  pop    %esi
0x000f1639:  jmp    0xf15a8

----------------
IN: 
0x000f1fca:  jmp    0xf2033

----------------
IN: 
0x000f2033:  mov    %esi,%edi
0x000f2035:  mov    %ebp,%ebx
0x000f2037:  inc    %edi
0x000f2038:  jmp    0xf1e55

----------------
IN: 
0x000f1ea2:  mov    0x1(%esi),%al
0x000f1ea5:  cmp    $0x6c,%al
0x000f1ea7:  je     0xf1eac

----------------
IN: 
0x000f1eac:  add    $0x2,%esi
0x000f1eaf:  mov    0x2(%edx),%al
0x000f1eb2:  mov    $0x1,%ebp
0x000f1eb7:  cmp    $0x70,%al
0x000f1eb9:  je     0xf1f57

----------------
IN: 
0x000f1f8e:  lea    0x8(%ebx),%ebp
0x000f1f91:  mov    0x4(%ebx),%edx
0x000f1f94:  test   %edx,%edx
0x000f1f96:  je     0xf1fbc

----------------
IN: 
0x000f1fbc:  mov    %eax,(%esp)
0x000f1fbf:  mov    %edi,%edx
0x000f1fc1:  mov    0x4(%esp),%eax
0x000f1fc5:  call   0xf163e

----------------
IN: 
0x000f203d:  add    $0xc,%esp
0x000f2040:  pop    %ebx
0x000f2041:  pop    %esi
0x000f2042:  pop    %edi
0x000f2043:  pop    %ebp
0x000f2044:  ret    

----------------
IN: 
0x000f206a:  ret    

----------------
IN: 
0x000ef800:  mov    0xfcd28,%esi
0x000ef806:  dec    %esi
0x000ef807:  xor    %ebp,%ebp
0x000ef809:  jmp    0xef8b2

----------------
IN: 
0x000ef8b2:  test   %esi,%esi
0x000ef8b4:  jns    0xef80e

----------------
IN: 
0x000ef80e:  imul   $0x14,%esi,%eax
0x000ef811:  lea    0xfcd2c(%eax),%edi
0x000ef817:  mov    0xfcd30(%eax),%edx
0x000ef81d:  mov    0xfcd2c(%eax),%eax
0x000ef823:  mov    %eax,%ecx
0x000ef825:  mov    %edx,%ebx
0x000ef827:  add    0x8(%edi),%ecx
0x000ef82a:  adc    0xc(%edi),%ebx
0x000ef82d:  cmp    $0x0,%ebx
0x000ef830:  ja     0xef881

----------------
IN: 
0x000ef881:  cmpl   $0x1,0x10(%edi)
0x000ef885:  jne    0xef8b1

----------------
IN: 
0x000ef8b1:  dec    %esi
0x000ef8b2:  test   %esi,%esi
0x000ef8b4:  jns    0xef80e

----------------
IN: 
0x000ef832:  cmp    $0xfffff,%ecx
0x000ef838:  ja     0xef881

----------------
IN: 
0x000ef887:  cmp    $0x0,%ebx
0x000ef88a:  ja     0xef8b1

----------------
IN: 
0x000ef88c:  mov    %eax,%edx
0x000ef88e:  test   %ebp,%ebp
0x000ef890:  jne    0xef8a7

----------------
IN: 
0x000ef892:  lea    -0x10000(%ecx),%ebx
0x000ef898:  and    $0xfffffff0,%ebx
0x000ef89b:  cmp    %eax,%ebx
0x000ef89d:  jb     0xef8a7

----------------
IN: 
0x000ef89f:  cmp    %ecx,%ebx
0x000ef8a1:  ja     0xef8a7

----------------
IN: 
0x000ef8a3:  mov    %ebx,%ebp
0x000ef8a5:  mov    %ebx,%ecx
0x000ef8a7:  mov    $0xf14c0,%eax
0x000ef8ac:  call   0xe4c97

----------------
IN: 
0x000e4c97:  push   %edi
0x000e4c98:  push   %esi
0x000e4c99:  push   %ebx
0x000e4c9a:  sub    $0x30,%esp
0x000e4c9d:  mov    (%eax),%ebx
0x000e4c9f:  test   %ebx,%ebx
0x000e4ca1:  je     0xe4cac

----------------
IN: 
0x000e4cac:  mov    %ebx,0x18(%esp)
0x000e4cb0:  mov    %eax,0x1c(%esp)
0x000e4cb4:  mov    %edx,0x24(%esp)
0x000e4cb8:  mov    %edx,0x20(%esp)
0x000e4cbc:  mov    %ecx,0x28(%esp)
0x000e4cc0:  lea    0x18(%esp),%edx
0x000e4cc4:  mov    %edx,(%eax)
0x000e4cc6:  test   %ebx,%ebx
0x000e4cc8:  je     0xe4ccd

----------------
IN: 
0x000e4ccd:  movl   $0x0,(%esp)
0x000e4cd4:  mov    $0x10,%ecx
0x000e4cd9:  mov    $0x2c,%edx
0x000e4cde:  mov    $0xf14c0,%eax
0x000e4ce3:  call   0xe2116

----------------
IN: 
0x000e2116:  push   %edi
0x000e2117:  push   %esi
0x000e2118:  push   %ebx
0x000e2119:  mov    0x10(%esp),%esi
0x000e211d:  mov    (%eax),%ebx
0x000e211f:  neg    %ecx
0x000e2121:  jmp    0xe215a

----------------
IN: 
0x000e215a:  test   %ebx,%ebx
0x000e215c:  jne    0xe2123

----------------
IN: 
0x000e2123:  mov    0x10(%ebx),%edi
0x000e2126:  mov    %edi,%eax
0x000e2128:  sub    %edx,%eax
0x000e212a:  and    %ecx,%eax
0x000e212c:  cmp    %edi,%eax
0x000e212e:  ja     0xe2158

----------------
IN: 
0x000e2130:  cmp    0xc(%ebx),%eax
0x000e2133:  jb     0xe2158

----------------
IN: 
0x000e2135:  mov    0x4(%ebx),%ecx
0x000e2138:  test   %esi,%esi
0x000e213a:  jne    0xe213e

----------------
IN: 
0x000e213c:  mov    %eax,%esi
0x000e213e:  mov    %ebx,(%esi)
0x000e2140:  mov    %ecx,0x4(%esi)
0x000e2143:  mov    %eax,0x8(%esi)
0x000e2146:  add    %eax,%edx
0x000e2148:  mov    %edx,0xc(%esi)
0x000e214b:  mov    %edi,0x10(%esi)
0x000e214e:  mov    %eax,0x10(%ebx)
0x000e2151:  mov    %esi,0x4(%ebx)
0x000e2154:  mov    %esi,(%ecx)
0x000e2156:  jmp    0xe2160

----------------
IN: 
0x000e2160:  pop    %ebx
0x000e2161:  pop    %esi
0x000e2162:  pop    %edi
0x000e2163:  ret    

----------------
IN: 
0x000e4ce8:  test   %eax,%eax
0x000e4cea:  jne    0xe4d35

----------------
IN: 
0x000e4d35:  lea    0x14(%eax),%edi
0x000e4d38:  lea    0x18(%esp),%esi
0x000e4d3c:  mov    $0x5,%ecx
0x000e4d41:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e4d41:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e4d43:  movl   $0xffffffff,0x28(%eax)
0x000e4d4a:  add    $0x14,%eax
0x000e4d4d:  mov    0x1c(%esp),%edx
0x000e4d51:  mov    %eax,(%edx)
0x000e4d53:  mov    0x18(%esp),%edx
0x000e4d57:  test   %edx,%edx
0x000e4d59:  je     0xe4d5e

----------------
IN: 
0x000e4d5e:  add    $0x30,%esp
0x000e4d61:  pop    %ebx
0x000e4d62:  pop    %esi
0x000e4d63:  pop    %edi
0x000e4d64:  ret    

----------------
IN: 
0x000ef83a:  mov    $0x90000,%ecx
0x000ef83f:  mov    $0x7000,%edx
0x000ef844:  mov    $0xf14b8,%eax
0x000ef849:  call   0xe4c97

----------------
IN: 
0x000e2158:  mov    (%ebx),%ebx
0x000e215a:  test   %ebx,%ebx
0x000e215c:  jne    0xe2123

----------------
IN: 
0x000ef84e:  mov    $0xfdbf0,%ecx
0x000ef853:  mov    $0xfd3f0,%edx
0x000ef858:  mov    $0xf14c8,%eax
0x000ef85d:  call   0xe4c97

----------------
IN: 
0x000ef862:  mov    $0xef780,%ecx
0x000ef867:  mov    $0xe0010,%edx
0x000ef86c:  mov    $0xf14bc,%eax
0x000ef871:  call   0xe4c97

----------------
IN: 
0x000ef876:  mov    0xf14bc,%eax
0x000ef87b:  test   %eax,%eax
0x000ef87d:  jne    0xef8c1

----------------
IN: 
0x000ef8c1:  mov    (%eax),%edx
0x000ef8c3:  test   %edx,%edx
0x000ef8c5:  jne    0xef8bf

----------------
IN: 
0x000ef8c7:  mov    %eax,0xf5e08
0x000ef8cc:  test   %ebp,%ebp
0x000ef8ce:  je     0xef902

----------------
IN: 
0x000ef8d0:  lea    0x10000(%ebp),%ecx
0x000ef8d6:  mov    %ebp,%edx
0x000ef8d8:  mov    $0xf14c4,%eax
0x000ef8dd:  call   0xe4c97

----------------
IN: 
0x000ef8e2:  movl   $0x2,0x8(%esp)
0x000ef8ea:  movl   $0x10000,(%esp)
0x000ef8f1:  movl   $0x0,0x4(%esp)
0x000ef8f9:  mov    %ebp,%eax
0x000ef8fb:  xor    %edx,%edx
0x000ef8fd:  call   0xe4924

----------------
IN: 
0x000ef902:  mov    $0xe20f1,%esi
0x000ef907:  mov    $0xf152c,%ebp
0x000ef90c:  sub    %esi,%ebp
0x000ef90e:  mov    %ebp,%edx
0x000ef910:  mov    $0x10,%eax
0x000ef915:  call   0xe35a4

----------------
IN: 
0x000e35a4:  push   %esi
0x000e35a5:  push   %ebx
0x000e35a6:  push   %ecx
0x000e35a7:  mov    %eax,%esi
0x000e35a9:  mov    %edx,%ebx
0x000e35ab:  mov    %eax,(%esp)
0x000e35ae:  mov    %edx,%ecx
0x000e35b0:  or     $0xffffffff,%edx
0x000e35b3:  mov    $0xf14c0,%eax
0x000e35b8:  call   0xe21c0

----------------
IN: 
0x000e21c0:  push   %ebp
0x000e21c1:  push   %edi
0x000e21c2:  push   %esi
0x000e21c3:  push   %ebx
0x000e21c4:  push   %ebx
0x000e21c5:  mov    %ecx,%esi
0x000e21c7:  test   %ecx,%ecx
0x000e21c9:  jne    0xe21cf

----------------
IN: 
0x000e21cf:  mov    %eax,%ebp
0x000e21d1:  mov    %edx,%edi
0x000e21d3:  movl   $0x0,(%esp)
0x000e21da:  mov    $0x10,%ecx
0x000e21df:  mov    $0x2c,%edx
0x000e21e4:  mov    $0xf14c0,%eax
0x000e21e9:  call   0xe2116

----------------
IN: 
0x000e21ee:  mov    %eax,%ebx
0x000e21f0:  test   %eax,%eax
0x000e21f2:  jne    0xe2215

----------------
IN: 
0x000e2215:  lea    0x14(%ebx),%eax
0x000e2218:  mov    %eax,(%esp)
0x000e221b:  mov    0x18(%esp),%ecx
0x000e221f:  mov    %esi,%edx
0x000e2221:  mov    %ebp,%eax
0x000e2223:  call   0xe2116

----------------
IN: 
0x000e213e:  mov    %ebx,(%esi)
0x000e2140:  mov    %ecx,0x4(%esi)
0x000e2143:  mov    %eax,0x8(%esi)
0x000e2146:  add    %eax,%edx
0x000e2148:  mov    %edx,0xc(%esi)
0x000e214b:  mov    %edi,0x10(%esi)
0x000e214e:  mov    %eax,0x10(%ebx)
0x000e2151:  mov    %esi,0x4(%ebx)
0x000e2154:  mov    %esi,(%ecx)
0x000e2156:  jmp    0xe2160

----------------
IN: 
0x000e2228:  mov    %eax,%esi
0x000e222a:  test   %eax,%eax
0x000e222c:  jne    0xe2237

----------------
IN: 
0x000e2237:  mov    %edi,0x28(%ebx)
0x000e223a:  mov    %esi,%eax
0x000e223c:  pop    %edx
0x000e223d:  pop    %ebx
0x000e223e:  pop    %esi
0x000e223f:  pop    %edi
0x000e2240:  pop    %ebp
0x000e2241:  ret    

----------------
IN: 
0x000e35bd:  test   %eax,%eax
0x000e35bf:  jne    0xe35d3

----------------
IN: 
0x000e35d3:  pop    %edx
0x000e35d4:  pop    %ebx
0x000e35d5:  pop    %esi
0x000e35d6:  ret    

----------------
IN: 
0x000ef91a:  mov    %eax,%ebx
0x000ef91c:  test   %eax,%eax
0x000ef91e:  jne    0xef92c

----------------
IN: 
0x000ef92c:  mov    $0xe20f1,%eax
0x000ef931:  sub    $0xe1880,%eax
0x000ef936:  mov    %eax,0xc(%esp)
0x000ef93a:  movl   $0xef780,0x8(%esp)
0x000ef942:  movl   $0xe1880,0x4(%esp)
0x000ef94a:  movl   $0xf5af3,(%esp)
0x000ef951:  call   0xf2058

----------------
IN: 
0x000f1f57:  lea    0x4(%ebx),%ebp
0x000f1f5a:  mov    (%ebx),%ebx
0x000f1f5c:  mov    $0x30,%edx
0x000f1f61:  mov    0x4(%esp),%eax
0x000f1f65:  call   0xf15a3

----------------
IN: 
0x000f1f6a:  mov    $0x78,%edx
0x000f1f6f:  mov    0x4(%esp),%eax
0x000f1f73:  call   0xf15a3

----------------
IN: 
0x000f1f78:  mov    $0x8,%ecx
0x000f1f7d:  mov    %ebx,%edx
0x000f1f7f:  jmp    0xf1fae

----------------
IN: 
0x000f1fae:  mov    0x4(%esp),%eax
0x000f1fb2:  call   0xf15bb

----------------
IN: 
0x000f15ce:  shr    $0x1c,%edx
0x000f15d1:  call   0xf15a8

----------------
IN: 
0x000f15b3:  movsbl %cl,%edx
0x000f15b6:  jmp    0xf15a3

----------------
IN: 
0x000f1fb7:  jmp    0xf2033

----------------
IN: 
0x000f1ec1:  cmp    $0x63,%al
0x000f1ec3:  je     0xf1fcc

----------------
IN: 
0x000f1ec9:  jg     0xf1edc

----------------
IN: 
0x000f1edc:  cmp    $0x64,%al
0x000f1ede:  jne    0xf2023

----------------
IN: 
0x000f1ee4:  jmp    0xf1f0f

----------------
IN: 
0x000f1f0f:  mov    (%ebx),%edi
0x000f1f11:  mov    %ebp,%eax
0x000f1f13:  test   %al,%al
0x000f1f15:  jne    0xf1f1c

----------------
IN: 
0x000f1f17:  add    $0x4,%ebx
0x000f1f1a:  jmp    0xf1f1f

----------------
IN: 
0x000f1f1f:  test   %edi,%edi
0x000f1f21:  jns    0xf1f33

----------------
IN: 
0x000f1f33:  mov    %edi,%edx
0x000f1f35:  mov    0x4(%esp),%eax
0x000f1f39:  call   0xf1dfd

----------------
IN: 
0x000f1dfd:  push   %esi
0x000f1dfe:  push   %ebx
0x000f1dff:  sub    $0xc,%esp
0x000f1e02:  mov    %eax,%esi
0x000f1e04:  movb   $0x0,0xb(%esp)
0x000f1e09:  lea    0xa(%esp),%ebx
0x000f1e0d:  mov    $0xa,%ecx
0x000f1e12:  mov    %edx,%eax
0x000f1e14:  xor    %edx,%edx
0x000f1e16:  div    %ecx
0x000f1e18:  add    $0x30,%edx
0x000f1e1b:  mov    %dl,(%ebx)
0x000f1e1d:  mov    %eax,%edx
0x000f1e1f:  test   %eax,%eax
0x000f1e21:  je     0xf1e26

----------------
IN: 
0x000f1e23:  dec    %ebx
0x000f1e24:  jmp    0xf1e12

----------------
IN: 
0x000f1e12:  mov    %edx,%eax
0x000f1e14:  xor    %edx,%edx
0x000f1e16:  div    %ecx
0x000f1e18:  add    $0x30,%edx
0x000f1e1b:  mov    %dl,(%ebx)
0x000f1e1d:  mov    %eax,%edx
0x000f1e1f:  test   %eax,%eax
0x000f1e21:  je     0xf1e26

----------------
IN: 
0x000f1e26:  test   %ebx,%ebx
0x000f1e28:  jne    0xf1e39

----------------
IN: 
0x000f1e39:  movsbl (%ebx),%edx
0x000f1e3c:  test   %dl,%dl
0x000f1e3e:  jne    0xf1e31

----------------
IN: 
0x000f1e31:  mov    %esi,%eax
0x000f1e33:  call   0xf15a3

----------------
IN: 
0x000f1e38:  inc    %ebx
0x000f1e39:  movsbl (%ebx),%edx
0x000f1e3c:  test   %dl,%dl
0x000f1e3e:  jne    0xf1e31

----------------
IN: 
0x000f1e40:  add    $0xc,%esp
0x000f1e43:  pop    %ebx
0x000f1e44:  pop    %esi
0x000f1e45:  ret    

----------------
IN: 
0x000f1f3e:  mov    %esi,%edi
0x000f1f40:  jmp    0xf2037

----------------
IN: 
0x000ef956:  mov    $0xef780,%eax
0x000ef95b:  sub    $0xe1880,%eax
0x000ef960:  mov    %eax,(%esp)
0x000ef963:  mov    $0xe1880,%ecx
0x000ef968:  mov    $0xe17e8,%edx
0x000ef96d:  mov    $0xe0b38,%eax
0x000ef972:  call   0xe25ba

----------------
IN: 
0x000e25ba:  push   %esi
0x000e25bb:  push   %ebx
0x000e25bc:  jmp    0xe25cb

----------------
IN: 
0x000e25cb:  cmp    %ecx,%edx
0x000e25cd:  jb     0xe25be

----------------
IN: 
0x000e25be:  mov    (%edx),%ebx
0x000e25c0:  add    %eax,%ebx
0x000e25c2:  mov    0xc(%esp),%esi
0x000e25c6:  add    %esi,(%ebx)
0x000e25c8:  add    $0x4,%edx
0x000e25cb:  cmp    %ecx,%edx
0x000e25cd:  jb     0xe25be

----------------
IN: 
0x000e25cf:  pop    %ebx
0x000e25d0:  pop    %esi
0x000e25d1:  ret    

----------------
IN: 
0x000ef977:  mov    %ebp,0xc(%esp)
0x000ef97b:  mov    %ebx,0x8(%esp)
0x000ef97f:  movl   $0xe20f1,0x4(%esp)
0x000ef987:  movl   $0xf5b20,(%esp)
0x000ef98e:  call   0xf2058

----------------
IN: 
0x000ef993:  mov    %ebx,%eax
0x000ef995:  sub    $0xe20f1,%eax
0x000ef99a:  mov    %eax,0x14(%esp)
0x000ef99e:  mov    %ebx,%edi
0x000ef9a0:  mov    %ebp,%ecx
0x000ef9a2:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000ef9a2:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000ef9a4:  mov    %eax,(%esp)
0x000ef9a7:  mov    $0xe101c,%ecx
0x000ef9ac:  mov    $0xe0b38,%edx
0x000ef9b1:  mov    %ebx,%eax
0x000ef9b3:  call   0xe25ba

----------------
IN: 
0x000ef9b8:  mov    0x14(%esp),%eax
0x000ef9bc:  neg    %eax
0x000ef9be:  mov    %eax,(%esp)
0x000ef9c1:  mov    $0xe17e0,%ecx
0x000ef9c6:  mov    $0xe101c,%edx
0x000ef9cb:  mov    %ebx,%eax
0x000ef9cd:  call   0xe25ba

----------------
IN: 
0x000ef9d2:  mov    0x14(%esp),%ebp
0x000ef9d6:  mov    %ebp,(%esp)
0x000ef9d9:  mov    $0xe17e8,%ecx
0x000ef9de:  mov    $0xe17e0,%edx
0x000ef9e3:  mov    $0xe0b38,%eax
0x000ef9e8:  call   0xe25ba

----------------
IN: 
0x000ef9ed:  mov    %ebp,%eax
0x000ef9ef:  add    $0xeccd8,%eax
0x000ef9f4:  call   *%eax

----------------
IN: 
0x07feb687:  xor    %eax,%eax
0x07feb689:  mov    0x7fee3af(,%eax,4),%ecx
0x07feb690:  mov    (%ecx),%edx
0x07feb692:  test   %edx,%edx
0x07feb694:  je     0x7feb699

----------------
IN: 
0x07feb696:  mov    %ecx,0x4(%edx)
0x07feb699:  inc    %eax
0x07feb69a:  cmp    $0x5,%eax
0x07feb69d:  jne    0x7feb689

----------------
IN: 
0x07feb689:  mov    0x7fee3af(,%eax,4),%ecx
0x07feb690:  mov    (%ecx),%edx
0x07feb692:  test   %edx,%edx
0x07feb694:  je     0x7feb699

----------------
IN: 
0x07feb69f:  push   %ebp
0x07feb6a0:  push   %edi
0x07feb6a1:  push   %esi
0x07feb6a2:  push   %ebx
0x07feb6a3:  sub    $0x100,%esp
0x07feb6a9:  mov    $0xf152c,%eax
0x07feb6ae:  cmp    $0xf0000,%eax
0x07feb6b3:  jbe    0x7feb6da

----------------
IN: 
0x07feb6b5:  mov    $0x152c,%ecx
0x07feb6ba:  xor    %edx,%edx
0x07feb6bc:  mov    $0xf0000,%eax
0x07feb6c1:  call   0xf172f

----------------
IN: 
0x000f172f:  jmp    0xf1735

----------------
IN: 
0x000f1735:  test   %ecx,%ecx
0x000f1737:  jne    0xf1731

----------------
IN: 
0x000f1731:  dec    %ecx
0x000f1732:  mov    %dl,(%eax,%ecx,1)
0x000f1735:  test   %ecx,%ecx
0x000f1737:  jne    0xf1731

----------------
IN: 
0x000f1739:  ret    

----------------
IN: 
0x07feb6c6:  mov    $0xf152c,%ecx
0x07feb6cb:  mov    $0xf0000,%edx
0x07feb6d0:  mov    $0x7fefe77,%eax
0x07feb6d5:  call   0x7fe3646

----------------
IN: 
0x07fe3646:  push   %edi
0x07fe3647:  push   %esi
0x07fe3648:  push   %ebx
0x07fe3649:  sub    $0x30,%esp
0x07fe364c:  mov    (%eax),%ebx
0x07fe364e:  test   %ebx,%ebx
0x07fe3650:  je     0x7fe365b

----------------
IN: 
0x07fe3652:  cmp    %edx,0x8(%ebx)
0x07fe3655:  jb     0x7fe365b

----------------
IN: 
0x07fe3657:  mov    %ebx,%eax
0x07fe3659:  jmp    0x7fe364c

----------------
IN: 
0x07fe364c:  mov    (%eax),%ebx
0x07fe364e:  test   %ebx,%ebx
0x07fe3650:  je     0x7fe365b

----------------
IN: 
0x07fe365b:  mov    %ebx,0x18(%esp)
0x07fe365f:  mov    %eax,0x1c(%esp)
0x07fe3663:  mov    %edx,0x24(%esp)
0x07fe3667:  mov    %edx,0x20(%esp)
0x07fe366b:  mov    %ecx,0x28(%esp)
0x07fe366f:  lea    0x18(%esp),%edx
0x07fe3673:  mov    %edx,(%eax)
0x07fe3675:  test   %ebx,%ebx
0x07fe3677:  je     0x7fe367c

----------------
IN: 
0x07fe367c:  movl   $0x0,(%esp)
0x07fe3683:  mov    $0x10,%ecx
0x07fe3688:  mov    $0x2c,%edx
0x07fe368d:  mov    $0x7fefe6f,%eax
0x07fe3692:  call   0x7fe0ac5

----------------
IN: 
0x07fe0ac5:  push   %edi
0x07fe0ac6:  push   %esi
0x07fe0ac7:  push   %ebx
0x07fe0ac8:  mov    0x10(%esp),%esi
0x07fe0acc:  mov    (%eax),%ebx
0x07fe0ace:  neg    %ecx
0x07fe0ad0:  jmp    0x7fe0b09

----------------
IN: 
0x07fe0b09:  test   %ebx,%ebx
0x07fe0b0b:  jne    0x7fe0ad2

----------------
IN: 
0x07fe0ad2:  mov    0x10(%ebx),%edi
0x07fe0ad5:  mov    %edi,%eax
0x07fe0ad7:  sub    %edx,%eax
0x07fe0ad9:  and    %ecx,%eax
0x07fe0adb:  cmp    %edi,%eax
0x07fe0add:  ja     0x7fe0b07

----------------
IN: 
0x07fe0adf:  cmp    0xc(%ebx),%eax
0x07fe0ae2:  jb     0x7fe0b07

----------------
IN: 
0x07fe0b07:  mov    (%ebx),%ebx
0x07fe0b09:  test   %ebx,%ebx
0x07fe0b0b:  jne    0x7fe0ad2

----------------
IN: 
0x07fe0ae4:  mov    0x4(%ebx),%ecx
0x07fe0ae7:  test   %esi,%esi
0x07fe0ae9:  jne    0x7fe0aed

----------------
IN: 
0x07fe0aeb:  mov    %eax,%esi
0x07fe0aed:  mov    %ebx,(%esi)
0x07fe0aef:  mov    %ecx,0x4(%esi)
0x07fe0af2:  mov    %eax,0x8(%esi)
0x07fe0af5:  add    %eax,%edx
0x07fe0af7:  mov    %edx,0xc(%esi)
0x07fe0afa:  mov    %edi,0x10(%esi)
0x07fe0afd:  mov    %eax,0x10(%ebx)
0x07fe0b00:  mov    %esi,0x4(%ebx)
0x07fe0b03:  mov    %esi,(%ecx)
0x07fe0b05:  jmp    0x7fe0b0f

----------------
IN: 
0x07fe0b0f:  pop    %ebx
0x07fe0b10:  pop    %esi
0x07fe0b11:  pop    %edi
0x07fe0b12:  ret    

----------------
IN: 
0x07fe3697:  test   %eax,%eax
0x07fe3699:  jne    0x7fe36e4

----------------
IN: 
0x07fe36e4:  lea    0x14(%eax),%edi
0x07fe36e7:  lea    0x18(%esp),%esi
0x07fe36eb:  mov    $0x5,%ecx
0x07fe36f0:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe36f0:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe36f2:  movl   $0xffffffff,0x28(%eax)
0x07fe36f9:  add    $0x14,%eax
0x07fe36fc:  mov    0x1c(%esp),%edx
0x07fe3700:  mov    %eax,(%edx)
0x07fe3702:  mov    0x18(%esp),%edx
0x07fe3706:  test   %edx,%edx
0x07fe3708:  je     0x7fe370d

----------------
IN: 
0x07fe370d:  add    $0x30,%esp
0x07fe3710:  pop    %ebx
0x07fe3711:  pop    %esi
0x07fe3712:  pop    %edi
0x07fe3713:  ret    

----------------
IN: 
0x07feb6da:  mov    $0xe20f1,%ecx
0x07feb6df:  sub    $0xe1880,%ecx
0x07feb6e5:  mov    $0xe1880,%edx
0x07feb6ea:  mov    $0xef780,%eax
0x07feb6ef:  call   0x7fe154c

----------------
IN: 
0x07fe154c:  push   %ebp
0x07fe154d:  push   %edi
0x07fe154e:  push   %esi
0x07fe154f:  push   %ebx
0x07fe1550:  cmp    %eax,%edx
0x07fe1552:  jb     0x7fe155c

----------------
IN: 
0x07fe155c:  lea    -0x1(%ecx),%ebx
0x07fe155f:  lea    (%eax,%ebx,1),%ebp
0x07fe1562:  add    %ebx,%edx
0x07fe1564:  mov    %ecx,%ebx
0x07fe1566:  mov    %ecx,%esi
0x07fe1568:  neg    %esi
0x07fe156a:  add    %esi,%edx
0x07fe156c:  jmp    0x7fe157a

----------------
IN: 
0x07fe157a:  dec    %ebx
0x07fe157b:  cmp    $0xffffffff,%ebx
0x07fe157e:  jne    0x7fe156e

----------------
IN: 
0x07fe156e:  lea    0x0(%ebp,%esi,1),%edi
0x07fe1572:  mov    0x1(%edx,%ebx,1),%al
0x07fe1576:  mov    %al,0x1(%edi,%ebx,1)
0x07fe157a:  dec    %ebx
0x07fe157b:  cmp    $0xffffffff,%ebx
0x07fe157e:  jne    0x7fe156e

----------------
IN: 
0x07fe1580:  mov    %ebp,%eax
0x07fe1582:  sub    %ecx,%eax
0x07fe1584:  pop    %ebx
0x07fe1585:  pop    %esi
0x07fe1586:  pop    %edi
0x07fe1587:  pop    %ebp
0x07fe1588:  ret    

----------------
IN: 
0x07feb6f4:  cmpl   $0x0,0x7fefe7b
0x07feb6fb:  je     0x7feb7ce

----------------
IN: 
0x07feb701:  mov    $0x510,%edx
0x07feb706:  mov    $0x19,%eax
0x07feb70b:  out    %ax,(%dx)
0x07feb70d:  mov    $0x4,%ecx
0x07feb712:  lea    0x9c(%esp),%edi
0x07feb719:  mov    $0x11,%dl
0x07feb71b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb71b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb71d:  mov    0x9c(%esp),%eax
0x07feb724:  bswap  %eax
0x07feb726:  mov    %eax,0x9c(%esp)
0x07feb72d:  xor    %ebx,%ebx
0x07feb72f:  jmp    0x7feb7c1

----------------
IN: 
0x07feb7c1:  cmp    0x9c(%esp),%ebx
0x07feb7c8:  jb     0x7feb734

----------------
IN: 
0x07feb734:  mov    $0x40,%ecx
0x07feb739:  lea    0xc0(%esp),%edi
0x07feb740:  mov    $0x511,%edx
0x07feb745:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb745:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07feb747:  mov    $0x9c,%eax
0x07feb74c:  call   0x7fe0c38

----------------
IN: 
0x07fe0c38:  push   %ebx
0x07fe0c39:  push   %ebx
0x07fe0c3a:  mov    %eax,%ebx
0x07fe0c3c:  call   0x7fe0bf1

----------------
IN: 
0x07fe0bf1:  push   %edx
0x07fe0bf2:  movl   $0x10,(%esp)
0x07fe0bf9:  mov    %eax,%ecx
0x07fe0bfb:  or     $0xffffffff,%edx
0x07fe0bfe:  mov    $0x7fefe6f,%eax
0x07fe0c03:  call   0x7fe0b6f

----------------
IN: 
0x07fe0b6f:  push   %ebp
0x07fe0b70:  push   %edi
0x07fe0b71:  push   %esi
0x07fe0b72:  push   %ebx
0x07fe0b73:  push   %ebx
0x07fe0b74:  mov    %ecx,%esi
0x07fe0b76:  test   %ecx,%ecx
0x07fe0b78:  jne    0x7fe0b7e

----------------
IN: 
0x07fe0b7e:  mov    %eax,%ebp
0x07fe0b80:  mov    %edx,%edi
0x07fe0b82:  movl   $0x0,(%esp)
0x07fe0b89:  mov    $0x10,%ecx
0x07fe0b8e:  mov    $0x2c,%edx
0x07fe0b93:  mov    $0x7fefe6f,%eax
0x07fe0b98:  call   0x7fe0ac5

----------------
IN: 
0x07fe0b9d:  mov    %eax,%ebx
0x07fe0b9f:  test   %eax,%eax
0x07fe0ba1:  jne    0x7fe0bc4

----------------
IN: 
0x07fe0bc4:  lea    0x14(%ebx),%eax
0x07fe0bc7:  mov    %eax,(%esp)
0x07fe0bca:  mov    0x18(%esp),%ecx
0x07fe0bce:  mov    %esi,%edx
0x07fe0bd0:  mov    %ebp,%eax
0x07fe0bd2:  call   0x7fe0ac5

----------------
IN: 
0x07fe0aed:  mov    %ebx,(%esi)
0x07fe0aef:  mov    %ecx,0x4(%esi)
0x07fe0af2:  mov    %eax,0x8(%esi)
0x07fe0af5:  add    %eax,%edx
0x07fe0af7:  mov    %edx,0xc(%esi)
0x07fe0afa:  mov    %edi,0x10(%esi)
0x07fe0afd:  mov    %eax,0x10(%ebx)
0x07fe0b00:  mov    %esi,0x4(%ebx)
0x07fe0b03:  mov    %esi,(%ecx)
0x07fe0b05:  jmp    0x7fe0b0f

----------------
IN: 
0x07fe0bd7:  mov    %eax,%esi
0x07fe0bd9:  test   %eax,%eax
0x07fe0bdb:  jne    0x7fe0be6

----------------
IN: 
0x07fe0be6:  mov    %edi,0x28(%ebx)
0x07fe0be9:  mov    %esi,%eax
0x07fe0beb:  pop    %edx
0x07fe0bec:  pop    %ebx
0x07fe0bed:  pop    %esi
0x07fe0bee:  pop    %edi
0x07fe0bef:  pop    %ebp
0x07fe0bf0:  ret    

----------------
IN: 
0x07fe0c08:  pop    %ecx
0x07fe0c09:  ret    

----------------
IN: 
0x07fe0c41:  test   %eax,%eax
0x07fe0c43:  jne    0x7fe0c5b

----------------
IN: 
0x07fe0c5b:  pop    %ecx
0x07fe0c5c:  pop    %ebx
0x07fe0c5d:  ret    

----------------
IN: 
0x07feb751:  mov    %eax,%esi
0x07feb753:  test   %eax,%eax
0x07feb755:  jne    0x7feb768

----------------
IN: 
0x07feb768:  mov    $0x9c,%ecx
0x07feb76d:  xor    %edx,%edx
0x07feb76f:  call   0xf172f

----------------
IN: 
0x07feb774:  lea    0x4(%esi),%eax
0x07feb777:  mov    $0x80,%ecx
0x07feb77c:  lea    0xc8(%esp),%edx
0x07feb783:  call   0x7fe0d2e

----------------
IN: 
0x07fe0d2e:  push   %esi
0x07fe0d2f:  push   %ebx
0x07fe0d30:  lea    0x1(%edx),%esi
0x07fe0d33:  add    %ecx,%edx
0x07fe0d35:  mov    %eax,%ebx
0x07fe0d37:  jmp    0x7fe0d3c

----------------
IN: 
0x07fe0d3c:  cmp    %edx,%esi
0x07fe0d3e:  jne    0x7fe0d45

----------------
IN: 
0x07fe0d45:  inc    %esi
0x07fe0d46:  mov    -0x2(%esi),%cl
0x07fe0d49:  test   %cl,%cl
0x07fe0d4b:  jne    0x7fe0d39

----------------
IN: 
0x07fe0d39:  mov    %cl,(%ebx)
0x07fe0d3b:  inc    %ebx
0x07fe0d3c:  cmp    %edx,%esi
0x07fe0d3e:  jne    0x7fe0d45

----------------
IN: 
0x07fe0d4d:  jmp    0x7fe0d40

----------------
IN: 
0x07fe0d40:  movb   $0x0,(%ebx)
0x07fe0d43:  jmp    0x7fe0d4f

----------------
IN: 
0x07fe0d4f:  pop    %ebx
0x07fe0d50:  pop    %esi
0x07fe0d51:  ret    

----------------
IN: 
0x07feb788:  mov    0xc0(%esp),%eax
0x07feb78f:  bswap  %eax
0x07feb791:  mov    %eax,0x84(%esi)
0x07feb797:  mov    0xc4(%esp),%eax
0x07feb79e:  xchg   %ah,%al
0x07feb7a0:  movzwl %ax,%eax
0x07feb7a3:  mov    %eax,0x8c(%esi)
0x07feb7a9:  movl   $0x7fe1518,0x88(%esi)
0x07feb7b3:  mov    0xf5e0c,%eax
0x07feb7b8:  mov    %eax,(%esi)
0x07feb7ba:  mov    %esi,0xf5e0c
0x07feb7c0:  inc    %ebx
0x07feb7c1:  cmp    0x9c(%esp),%ebx
0x07feb7c8:  jb     0x7feb734

----------------
IN: 
0x07feb7ce:  xor    %eax,%eax
0x07feb7d0:  mov    $0xfff53,%edx
0x07feb7d5:  mov    %dx,(%eax)
0x07feb7d8:  movw   $0xf000,0x2(%eax)
0x07feb7de:  add    $0x4,%eax
0x07feb7e1:  cmp    $0x400,%eax
0x07feb7e6:  jne    0x7feb7d5

----------------
IN: 
0x07feb7d5:  mov    %dx,(%eax)
0x07feb7d8:  movw   $0xf000,0x2(%eax)
0x07feb7de:  add    $0x4,%eax
0x07feb7e1:  cmp    $0x400,%eax
0x07feb7e6:  jne    0x7feb7d5

----------------
IN: 
0x07feb7e8:  xor    %ax,%ax
0x07feb7eb:  mov    $0xfc78e,%edx
0x07feb7f0:  mov    %dx,0x20(%eax)
0x07feb7f4:  movw   $0xf000,0x22(%eax)
0x07feb7fa:  add    $0x4,%eax
0x07feb7fd:  cmp    $0x20,%eax
0x07feb800:  jne    0x7feb7f0

----------------
IN: 
0x07feb7f0:  mov    %dx,0x20(%eax)
0x07feb7f4:  movw   $0xf000,0x22(%eax)
0x07feb7fa:  add    $0x4,%eax
0x07feb7fd:  cmp    $0x20,%eax
0x07feb800:  jne    0x7feb7f0

----------------
IN: 
0x07feb802:  xor    %al,%al
0x07feb804:  mov    $0xfc797,%edx
0x07feb809:  mov    %dx,0x1c0(%eax)
0x07feb810:  movw   $0xf000,0x1c2(%eax)
0x07feb819:  add    $0x4,%eax
0x07feb81c:  cmp    $0x20,%eax
0x07feb81f:  jne    0x7feb809

----------------
IN: 
0x07feb809:  mov    %dx,0x1c0(%eax)
0x07feb810:  movw   $0xf000,0x1c2(%eax)
0x07feb819:  add    $0x4,%eax
0x07feb81c:  cmp    $0x20,%eax
0x07feb81f:  jne    0x7feb809

----------------
IN: 
0x07feb821:  mov    $0xfe2c3,%eax
0x07feb826:  mov    %ax,0x8
0x07feb82c:  movw   $0xf000,0xa
0x07feb835:  mov    $0xff065,%eax
0x07feb83a:  mov    %ax,0x40
0x07feb840:  movw   $0xf000,0x42
0x07feb849:  mov    $0xff84d,%eax
0x07feb84e:  mov    %ax,0x44
0x07feb854:  movw   $0xf000,0x46
0x07feb85d:  mov    $0xff841,%eax
0x07feb862:  mov    %ax,0x48
0x07feb868:  movw   $0xf000,0x4a
0x07feb871:  mov    $0xfe3fe,%eax
0x07feb876:  mov    %ax,0x4c
0x07feb87c:  movw   $0xf000,0x4e
0x07feb885:  mov    $0xfe739,%eax
0x07feb88a:  mov    %ax,0x50
0x07feb890:  movw   $0xf000,0x52
0x07feb899:  mov    $0xff859,%eax
0x07feb89e:  mov    %ax,0x54
0x07feb8a4:  movw   $0xf000,0x56
0x07feb8ad:  mov    $0xfe82e,%eax
0x07feb8b2:  mov    %ax,0x58
0x07feb8b8:  movw   $0xf000,0x5a
0x07feb8c1:  mov    $0xfefd2,%eax
0x07feb8c6:  mov    %ax,0x5c
0x07feb8cc:  movw   $0xf000,0x5e
0x07feb8d5:  mov    $0xfc7b3,%eax
0x07feb8da:  mov    %ax,0x60
0x07feb8e0:  movw   $0xf000,0x62
0x07feb8e9:  mov    $0xfe6f2,%eax
0x07feb8ee:  mov    %ax,0x64
0x07feb8f4:  movw   $0xf000,0x66
0x07feb8fd:  mov    $0xffe6e,%eax
0x07feb902:  mov    %ax,0x68
0x07feb908:  movw   $0xf000,0x6a
0x07feb911:  mov    $0xfec59,%eax
0x07feb916:  mov    %ax,0x100
0x07feb91c:  movw   $0xf000,0x102
0x07feb925:  xor    %eax,%eax
0x07feb927:  movw   $0x0,0x180(%eax)
0x07feb930:  movw   $0x0,0x182(%eax)
0x07feb939:  add    $0x4,%eax
0x07feb93c:  cmp    $0x1c,%eax
0x07feb93f:  jne    0x7feb927

----------------
IN: 
0x07feb927:  movw   $0x0,0x180(%eax)
0x07feb930:  movw   $0x0,0x182(%eax)
0x07feb939:  add    $0x4,%eax
0x07feb93c:  cmp    $0x1c,%eax
0x07feb93f:  jne    0x7feb927

----------------
IN: 
0x07feb941:  movw   $0x0,0x1e4
0x07feb94a:  movw   $0x0,0x1e6
0x07feb953:  mov    $0x100,%ecx
0x07feb958:  xor    %edx,%edx
0x07feb95a:  mov    $0x400,%ax
0x07feb95e:  call   0xf172f

----------------
IN: 
0x07feb963:  movw   $0x27f,0x413
0x07feb96c:  movw   $0x9fc0,0x40e
0x07feb975:  mov    $0x121,%ecx
0x07feb97a:  xor    %edx,%edx
0x07feb97c:  mov    $0x9fc00,%eax
0x07feb981:  call   0xf172f

----------------
IN: 
0x07feb986:  movb   $0x1,0x9fc00
0x07feb98d:  movl   $0x2,0x8(%esp)
0x07feb995:  movl   $0x400,(%esp)
0x07feb99c:  movl   $0x0,0x4(%esp)
0x07feb9a4:  mov    $0x9fc00,%eax
0x07feb9a9:  xor    %edx,%edx
0x07feb9ab:  call   0x7fe32d3

----------------
IN: 
0x07fe32d3:  push   %ebp
0x07fe32d4:  push   %edi
0x07fe32d5:  push   %esi
0x07fe32d6:  push   %ebx
0x07fe32d7:  sub    $0x3c,%esp
0x07fe32da:  mov    %eax,0x28(%esp)
0x07fe32de:  mov    %edx,0x2c(%esp)
0x07fe32e2:  mov    0x50(%esp),%edi
0x07fe32e6:  mov    0x54(%esp),%ebp
0x07fe32ea:  mov    0x58(%esp),%ebx
0x07fe32ee:  mov    %ebx,0x30(%esp)
0x07fe32f2:  add    %edi,%eax
0x07fe32f4:  adc    %ebp,%edx
0x07fe32f6:  mov    %eax,0x20(%esp)
0x07fe32fa:  mov    %edx,0x24(%esp)
0x07fe32fe:  mov    0xfcd28,%ecx
0x07fe3304:  movl   $0x0,0x1c(%esp)
0x07fe330c:  jmp    0x7fe340b

----------------
IN: 
0x07fe340b:  cmp    %ecx,0x1c(%esp)
0x07fe340f:  jl     0x7fe3311

----------------
IN: 
0x07fe3311:  imul   $0x14,0x1c(%esp),%edx
0x07fe3316:  lea    0xfcd2c(%edx),%esi
0x07fe331c:  mov    %esi,0x38(%esp)
0x07fe3320:  mov    0xfcd2c(%edx),%ebx
0x07fe3326:  mov    0xfcd30(%edx),%esi
0x07fe332c:  mov    %ebx,0x14(%esp)
0x07fe3330:  mov    %esi,0x18(%esp)
0x07fe3334:  mov    %ebx,%eax
0x07fe3336:  mov    %esi,%edx
0x07fe3338:  mov    0x38(%esp),%esi
0x07fe333c:  add    0x8(%esi),%eax
0x07fe333f:  adc    0xc(%esi),%edx
0x07fe3342:  cmp    %edx,0x2c(%esp)
0x07fe3346:  jb     0x7fe3359

----------------
IN: 
0x07fe3348:  ja     0x7fe3350

----------------
IN: 
0x07fe334a:  cmp    %eax,0x28(%esp)
0x07fe334e:  jbe    0x7fe3359

----------------
IN: 
0x07fe3359:  mov    0x18(%esp),%ecx
0x07fe335d:  cmp    %ecx,0x2c(%esp)
0x07fe3361:  jb     0x7fe3485

----------------
IN: 
0x07fe3367:  ja     0x7fe3377

----------------
IN: 
0x07fe3369:  mov    0x14(%esp),%ebx
0x07fe336d:  cmp    %ebx,0x28(%esp)
0x07fe3371:  jbe    0x7fe3485

----------------
IN: 
0x07fe3377:  mov    0x38(%esp),%esi
0x07fe337b:  mov    0x10(%esi),%esi
0x07fe337e:  mov    %esi,0x34(%esp)
0x07fe3382:  cmp    %esi,0x30(%esp)
0x07fe3386:  jne    0x7fe33ad

----------------
IN: 
0x07fe33ad:  mov    0x28(%esp),%ebx
0x07fe33b1:  mov    0x2c(%esp),%esi
0x07fe33b5:  sub    0x14(%esp),%ebx
0x07fe33b9:  sbb    0x18(%esp),%esi
0x07fe33bd:  mov    0x38(%esp),%ecx
0x07fe33c1:  mov    %ebx,0x8(%ecx)
0x07fe33c4:  mov    %esi,0xc(%ecx)
0x07fe33c7:  incl   0x1c(%esp)
0x07fe33cb:  cmp    0x24(%esp),%edx
0x07fe33cf:  jb     0x7fe3485

----------------
IN: 
0x07fe33d5:  ja     0x7fe33e1

----------------
IN: 
0x07fe33d7:  cmp    0x20(%esp),%eax
0x07fe33db:  jbe    0x7fe3485

----------------
IN: 
0x07fe3485:  imul   $0x14,0x1c(%esp),%ebx
0x07fe348a:  mov    0x1c(%esp),%eax
0x07fe348e:  cmp    0xfcd28,%eax
0x07fe3494:  jl     0x7fe3417

----------------
IN: 
0x07fe3417:  lea    0xfcd2c(%ebx),%ecx
0x07fe341d:  mov    0xfcd2c(%ebx),%eax
0x07fe3423:  mov    0xfcd30(%ebx),%edx
0x07fe3429:  cmp    %edx,0x24(%esp)
0x07fe342d:  jb     0x7fe3496

----------------
IN: 
0x07fe342f:  ja     0x7fe3437

----------------
IN: 
0x07fe3431:  cmp    %eax,0x20(%esp)
0x07fe3435:  jb     0x7fe3496

----------------
IN: 
0x07fe3496:  cmpl   $0xffffffff,0x30(%esp)
0x07fe349b:  je     0x7fe34c5

----------------
IN: 
0x07fe349d:  mov    0x30(%esp),%ebx
0x07fe34a1:  mov    %ebx,0x58(%esp)
0x07fe34a5:  mov    %edi,0x50(%esp)
0x07fe34a9:  mov    %ebp,0x54(%esp)
0x07fe34ad:  mov    0x28(%esp),%edx
0x07fe34b1:  mov    0x2c(%esp),%ecx
0x07fe34b5:  mov    0x1c(%esp),%eax
0x07fe34b9:  add    $0x3c,%esp
0x07fe34bc:  pop    %ebx
0x07fe34bd:  pop    %esi
0x07fe34be:  pop    %edi
0x07fe34bf:  pop    %ebp
0x07fe34c0:  jmp    0x7fe323f

----------------
IN: 
0x07fe323f:  push   %ebp
0x07fe3240:  push   %edi
0x07fe3241:  push   %esi
0x07fe3242:  push   %ebx
0x07fe3243:  sub    $0xc,%esp
0x07fe3246:  mov    %edx,(%esp)
0x07fe3249:  mov    %ecx,0x4(%esp)
0x07fe324d:  mov    0x20(%esp),%edi
0x07fe3251:  mov    0x24(%esp),%ebp
0x07fe3255:  mov    0x28(%esp),%edx
0x07fe3259:  mov    %edx,0x8(%esp)
0x07fe325d:  mov    0xfcd28,%ecx
0x07fe3263:  cmp    $0x1f,%ecx
0x07fe3266:  jle    0x7fe327e

----------------
IN: 
0x07fe327e:  imul   $0x14,%eax,%esi
0x07fe3281:  lea    0xfcd2c(%esi),%ebx
0x07fe3287:  sub    %eax,%ecx
0x07fe3289:  imul   $0x14,%ecx,%ecx
0x07fe328c:  inc    %eax
0x07fe328d:  imul   $0x14,%eax,%eax
0x07fe3290:  add    $0xfcd2c,%eax
0x07fe3295:  mov    %ebx,%edx
0x07fe3297:  call   0x7fe154c

----------------
IN: 
0x07fe329c:  incl   0xfcd28
0x07fe32a2:  mov    (%esp),%eax
0x07fe32a5:  mov    0x4(%esp),%edx
0x07fe32a9:  mov    %eax,0xfcd2c(%esi)
0x07fe32af:  mov    %edx,0xfcd30(%esi)
0x07fe32b5:  mov    %edi,0xfcd34(%esi)
0x07fe32bb:  mov    %ebp,0xfcd38(%esi)
0x07fe32c1:  mov    0x8(%esp),%edx
0x07fe32c5:  mov    %edx,0xfcd3c(%esi)
0x07fe32cb:  add    $0xc,%esp
0x07fe32ce:  pop    %ebx
0x07fe32cf:  pop    %esi
0x07fe32d0:  pop    %edi
0x07fe32d1:  pop    %ebp
0x07fe32d2:  ret    

----------------
IN: 
0x07feb9b0:  mov    $0xefff0,%eax
0x07feb9b5:  sub    $0xe0000,%eax
0x07feb9ba:  mov    %eax,0xef7e8
0x07feb9bf:  call   0xf1c6c

----------------
IN: 
0x000f1c6c:  mov    $0x11,%al
0x000f1c6e:  out    %al,$0x20
0x000f1c70:  out    %al,$0xa0
0x000f1c72:  mov    $0x8,%al
0x000f1c74:  out    %al,$0x21
0x000f1c76:  mov    $0x70,%al
0x000f1c78:  out    %al,$0xa1
0x000f1c7a:  mov    $0x4,%al
0x000f1c7c:  out    %al,$0x21
0x000f1c7e:  mov    $0x2,%al
0x000f1c80:  out    %al,$0xa1
0x000f1c82:  mov    $0x1,%al
0x000f1c84:  out    %al,$0x21
0x000f1c86:  out    %al,$0xa1
0x000f1c88:  mov    $0xfb,%al
0x000f1c8a:  out    %al,$0x21
0x000f1c8c:  mov    $0xff,%al
0x000f1c8e:  out    %al,$0xa1
0x000f1c90:  ret    

----------------
IN: 
0x07feb9c4:  movl   $0x0,0x9c(%esp)
0x07feb9cf:  lea    0x98(%esp),%eax
0x07feb9d6:  mov    %eax,0x4(%esp)
0x07feb9da:  lea    0x94(%esp),%ebx
0x07feb9e1:  mov    %ebx,(%esp)
0x07feb9e4:  lea    0x90(%esp),%ecx
0x07feb9eb:  lea    0x8c(%esp),%edx
0x07feb9f2:  xor    %eax,%eax
0x07feb9f4:  call   0xf1683

----------------
IN: 
0x07feb9f9:  cmpl   $0x0,0x8c(%esp)
0x07feba01:  je     0x7feba29

----------------
IN: 
0x07feba03:  lea    0x9c(%esp),%eax
0x07feba0a:  mov    %eax,0x4(%esp)
0x07feba0e:  mov    %ebx,(%esp)
0x07feba11:  lea    0x90(%esp),%ecx
0x07feba18:  lea    0x8c(%esp),%edx
0x07feba1f:  mov    $0x1,%eax
0x07feba24:  call   0xf1683

----------------
IN: 
0x07feba29:  testb  $0x10,0x9c(%esp)
0x07feba31:  jne    0x7feba49

----------------
IN: 
0x07feba49:  in     $0x61,%al
0x07feba4b:  mov    %al,%bl
0x07feba4d:  and    $0xfffffffc,%eax
0x07feba50:  or     $0x1,%eax
0x07feba53:  out    %al,$0x61
0x07feba55:  mov    $0xb0,%al
0x07feba57:  out    %al,$0x43
0x07feba59:  xor    %eax,%eax
0x07feba5b:  out    %al,$0x42
0x07feba5d:  mov    $0x8,%al
0x07feba5f:  out    %al,$0x42
0x07feba61:  rdtsc  
0x07feba63:  mov    %eax,0x48(%esp)
0x07feba67:  mov    %edx,0x4c(%esp)
0x07feba6b:  in     $0x61,%al
0x07feba6d:  test   $0x20,%al
0x07feba6f:  je     0x7feba6b

----------------
IN: 
0x07feba6b:  in     $0x61,%al
0x07feba6d:  test   $0x20,%al
0x07feba6f:  je     0x7feba6b

----------------
IN: 
0x07feba71:  rdtsc  
0x07feba73:  mov    %eax,0x58(%esp)
0x07feba77:  mov    %edx,0x5c(%esp)
0x07feba7b:  mov    %bl,%al
0x07feba7d:  out    %al,$0x61
0x07feba7f:  mov    0x48(%esp),%ecx
0x07feba83:  mov    0x4c(%esp),%ebx
0x07feba87:  sub    %ecx,0x58(%esp)
0x07feba8b:  sbb    %ebx,0x5c(%esp)
0x07feba8f:  imul   $0x1234dc,0x5c(%esp),%ecx
0x07feba97:  mov    $0x1234dc,%eax
0x07feba9c:  mull   0x58(%esp)
0x07febaa0:  add    %ecx,%edx
0x07febaa2:  shrd   $0xb,%edx,%eax
0x07febaa6:  shr    $0xb,%edx
0x07febaa9:  mov    %eax,%ecx
0x07febaab:  mov    $0x3e8,%ebx
0x07febab0:  xor    %edx,%edx
0x07febab2:  div    %ebx
0x07febab4:  mov    %eax,0xfd24c
0x07febab9:  mov    $0xf4240,%ebx
0x07febabe:  mov    %ecx,%eax
0x07febac0:  xor    %edx,%edx
0x07febac2:  div    %ebx
0x07febac4:  mov    %eax,0x4(%esp)
0x07febac8:  movl   $0xf5551,(%esp)
0x07febacf:  call   0xf2058

----------------
IN: 
0x000f1f45:  mov    (%ebx),%edx
0x000f1f47:  mov    %ebp,%eax
0x000f1f49:  test   %al,%al
0x000f1f4b:  jne    0xf1f52

----------------
IN: 
0x000f1f4d:  add    $0x4,%ebx
0x000f1f50:  jmp    0xf1f35

----------------
IN: 
0x000f1f35:  mov    0x4(%esp),%eax
0x000f1f39:  call   0xf1dfd

----------------
IN: 
0x07febad4:  mov    $0x34,%al
0x07febad6:  out    %al,$0x43
0x07febad8:  xor    %eax,%eax
0x07febada:  out    %al,$0x40
0x07febadc:  out    %al,$0x40
0x07febade:  mov    $0x8a,%cl
0x07febae0:  mov    %cl,%al
0x07febae2:  out    %al,$0x70
0x07febae4:  mov    $0x26,%al
0x07febae6:  out    %al,$0x71
0x07febae8:  mov    $0x8b,%bl
0x07febaea:  mov    %bl,%al
0x07febaec:  out    %al,$0x70
0x07febaee:  in     $0x71,%al
0x07febaf0:  mov    %al,%dl
0x07febaf2:  mov    %bl,%al
0x07febaf4:  out    %al,$0x70
0x07febaf6:  and    $0x1,%edx
0x07febaf9:  or     $0x2,%edx
0x07febafc:  mov    %dl,%al
0x07febafe:  out    %al,$0x71
0x07febb00:  mov    $0x8c,%al
0x07febb02:  out    %al,$0x70
0x07febb04:  in     $0x71,%al
0x07febb06:  mov    $0x8d,%al
0x07febb08:  out    %al,$0x70
0x07febb0a:  in     $0x71,%al
0x07febb0c:  mov    %cl,%al
0x07febb0e:  out    %al,$0x70
0x07febb10:  in     $0x71,%al
0x07febb12:  test   %al,%al
0x07febb14:  jns    0x7febb42

----------------
IN: 
0x07febb42:  mov    $0x80,%al
0x07febb44:  out    %al,$0x70
0x07febb46:  in     $0x71,%al
0x07febb48:  mov    %al,%dl
0x07febb4a:  mov    $0x82,%al
0x07febb4c:  out    %al,$0x70
0x07febb4e:  in     $0x71,%al
0x07febb50:  mov    %al,%cl
0x07febb52:  mov    $0x84,%al
0x07febb54:  out    %al,$0x70
0x07febb56:  in     $0x71,%al
0x07febb58:  mov    $0xf,%esi
0x07febb5d:  and    %eax,%esi
0x07febb5f:  shr    $0x4,%al
0x07febb62:  movzbl %al,%ebx
0x07febb65:  imul   $0xa,%ebx,%ebx
0x07febb68:  add    %esi,%ebx
0x07febb6a:  imul   $0x3c,%ebx,%ebx
0x07febb6d:  mov    $0xf,%esi
0x07febb72:  and    %ecx,%esi
0x07febb74:  shr    $0x4,%cl
0x07febb77:  movzbl %cl,%eax
0x07febb7a:  imul   $0xa,%eax,%eax
0x07febb7d:  add    %esi,%eax
0x07febb7f:  add    %ebx,%eax
0x07febb81:  imul   $0x3c,%eax,%eax
0x07febb84:  mov    %edx,%ecx
0x07febb86:  and    $0xf,%ecx
0x07febb89:  shr    $0x4,%dl
0x07febb8c:  movzbl %dl,%edx
0x07febb8f:  imul   $0xa,%edx,%edx
0x07febb92:  add    %ecx,%edx
0x07febb94:  add    %eax,%edx
0x07febb96:  mov    $0x1234dc,%eax
0x07febb9b:  mul    %edx
0x07febb9d:  shrd   $0x10,%edx,%eax
0x07febba1:  shr    $0x10,%edx
0x07febba4:  mov    %eax,0x46c
0x07febba9:  mov    $0x1,%eax
0x07febbae:  call   0x7fe0aaf

----------------
IN: 
0x07fe0aaf:  mov    %al,%dl
0x07fe0ab1:  in     $0x21,%al
0x07fe0ab3:  not    %edx
0x07fe0ab5:  and    %edx,%eax
0x07fe0ab7:  out    %al,$0x21
0x07fe0ab9:  ret    

----------------
IN: 
0x07febbb3:  mov    $0xffea5,%eax
0x07febbb8:  mov    %ax,0x20
0x07febbbe:  movw   $0xf000,0x22
0x07febbc7:  mov    $0x1,%eax
0x07febbcc:  call   0x7fe0aba

----------------
IN: 
0x07fe0aba:  mov    %al,%dl
0x07fe0abc:  in     $0xa1,%al
0x07fe0abe:  not    %edx
0x07fe0ac0:  and    %edx,%eax
0x07fe0ac2:  out    %al,$0xa1
0x07fe0ac4:  ret    

----------------
IN: 
0x07febbd1:  mov    $0xfc773,%eax
0x07febbd6:  mov    %ax,0x1c0
0x07febbdc:  movw   $0xf000,0x1c2
0x07febbe5:  orw    $0x2,0x410
0x07febbed:  mov    $0x20,%eax
0x07febbf2:  call   0x7fe0aba

----------------
IN: 
0x07febbf7:  mov    $0xfc785,%eax
0x07febbfc:  mov    %ax,0x1d4
0x07febc02:  movw   $0xf000,0x1d6
0x07febc0b:  cmpl   $0x0,0xf5df4
0x07febc12:  je     0x7febc1e

----------------
IN: 
0x07febc1e:  movl   $0xf555d,(%esp)
0x07febc25:  call   0xf2058

----------------
IN: 
0x07febc2a:  mov    $0xcf8,%edx
0x07febc2f:  mov    $0x80000000,%eax
0x07febc34:  out    %eax,(%dx)
0x07febc35:  in     (%dx),%eax
0x07febc36:  cmp    $0x80000000,%eax
0x07febc3b:  je     0x7fedd40

----------------
IN: 
0x07fedd40:  movb   $0x0,0x9c(%esp)
0x07fedd48:  lea    0x9c(%esp),%edx
0x07fedd4f:  xor    %eax,%eax
0x07fedd51:  call   0x7fe257b

----------------
IN: 
0x07fe257b:  push   %ebp
0x07fe257c:  push   %edi
0x07fe257d:  push   %esi
0x07fe257e:  push   %ebx
0x07fe257f:  sub    $0x18,%esp
0x07fe2582:  mov    %eax,%edi
0x07fe2584:  mov    %edx,%ebx
0x07fe2586:  mov    %eax,0x8(%esp)
0x07fe258a:  movl   $0x7fee3ff,0x4(%esp)
0x07fe2592:  movl   $0xf431e,(%esp)
0x07fe2599:  call   0xf2058

----------------
IN: 
0x000f1ef2:  cmp    $0x73,%al
0x000f1ef4:  jne    0xf2023

----------------
IN: 
0x000f1efa:  jmp    0xf200b

----------------
IN: 
0x000f200b:  lea    0x4(%ebx),%ebp
0x000f200e:  mov    (%ebx),%ebx
0x000f2010:  movsbl (%ebx),%edx
0x000f2013:  test   %dl,%dl
0x000f2015:  je     0xf2033

----------------
IN: 
0x000f2017:  mov    0x4(%esp),%eax
0x000f201b:  call   0xf15a3

----------------
IN: 
0x000f2020:  inc    %ebx
0x000f2021:  jmp    0xf2010

----------------
IN: 
0x000f2010:  movsbl (%ebx),%edx
0x000f2013:  test   %dl,%dl
0x000f2015:  je     0xf2033

----------------
IN: 
0x07fe259e:  mov    %edi,%ebp
0x07fe25a0:  shl    $0x8,%ebp
0x07fe25a3:  and    $0xffff,%ebp
0x07fe25a9:  dec    %ebp
0x07fe25aa:  mov    %ebp,0xc(%esp)
0x07fe25ae:  mov    %edi,%edx
0x07fe25b0:  mov    %ebp,%eax
0x07fe25b2:  jmp    0x7fe25f9

----------------
IN: 
0x07fe25f9:  call   0xf1cd2

----------------
IN: 
0x000f1cd2:  push   %edi
0x000f1cd3:  push   %esi
0x000f1cd4:  push   %ebx
0x000f1cd5:  mov    %eax,%ebx
0x000f1cd7:  mov    %edx,%esi
0x000f1cd9:  test   $0x7,%al
0x000f1cdb:  jne    0xf1cf5

----------------
IN: 
0x000f1cf5:  lea    0x1(%ebx),%ecx
0x000f1cf8:  mov    $0xcf8,%ebx
0x000f1cfd:  mov    $0xcfc,%edi
0x000f1d02:  movzwl %cx,%eax
0x000f1d05:  mov    %eax,%edx
0x000f1d07:  shr    $0x8,%edx
0x000f1d0a:  cmp    %esi,%edx
0x000f1d0c:  jne    0xf1d31

----------------
IN: 
0x000f1d0e:  shl    $0x8,%eax
0x000f1d11:  or     $0x80000000,%eax
0x000f1d16:  mov    %ebx,%edx
0x000f1d18:  out    %eax,(%dx)
0x000f1d19:  mov    %edi,%edx
0x000f1d1b:  in     (%dx),%ax
0x000f1d1d:  dec    %eax
0x000f1d1e:  cmp    $0xfffffffd,%ax
0x000f1d22:  jbe    0xf1d34

----------------
IN: 
0x000f1d34:  mov    %ecx,%eax
0x000f1d36:  pop    %ebx
0x000f1d37:  pop    %esi
0x000f1d38:  pop    %edi
0x000f1d39:  ret    

----------------
IN: 
0x07fe25fe:  mov    %eax,%esi
0x07fe2600:  test   %eax,%eax
0x07fe2602:  jns    0x7fe25b4

----------------
IN: 
0x07fe25b4:  mov    %esi,%ebp
0x07fe25b6:  and    $0xffff,%ebp
0x07fe25bc:  mov    %ebp,%eax
0x07fe25be:  shl    $0x8,%eax
0x07fe25c1:  or     $0x80000008,%eax
0x07fe25c6:  mov    $0xcf8,%edx
0x07fe25cb:  out    %eax,(%dx)
0x07fe25cc:  mov    $0xfe,%dl
0x07fe25ce:  in     (%dx),%ax
0x07fe25d0:  cmp    $0x604,%ax
0x07fe25d4:  jne    0x7fe25f5

----------------
IN: 
0x07fe25f5:  mov    %edi,%edx
0x07fe25f7:  mov    %esi,%eax
0x07fe25f9:  call   0xf1cd2

----------------
IN: 
0x000f1cdd:  and    $0xffff,%eax
0x000f1ce2:  mov    $0xe,%edx
0x000f1ce7:  call   0xf17a8

----------------
IN: 
0x000f17a8:  push   %ebx
0x000f17a9:  mov    %edx,%ebx
0x000f17ab:  mov    %edx,%ecx
0x000f17ad:  and    $0xfc,%ecx
0x000f17b3:  or     $0x80000000,%ecx
0x000f17b9:  shl    $0x8,%eax
0x000f17bc:  or     %eax,%ecx
0x000f17be:  mov    $0xcf8,%edx
0x000f17c3:  mov    %ecx,%eax
0x000f17c5:  out    %eax,(%dx)
0x000f17c6:  and    $0x3,%ebx
0x000f17c9:  lea    0xcfc(%ebx),%edx
0x000f17cf:  in     (%dx),%al
0x000f17d0:  pop    %ebx
0x000f17d1:  ret    

----------------
IN: 
0x000f1cec:  test   %al,%al
0x000f1cee:  js     0xf1cf5

----------------
IN: 
0x000f1cf0:  lea    0x8(%ebx),%ecx
0x000f1cf3:  jmp    0xf1cf8

----------------
IN: 
0x000f1cf8:  mov    $0xcf8,%ebx
0x000f1cfd:  mov    $0xcfc,%edi
0x000f1d02:  movzwl %cx,%eax
0x000f1d05:  mov    %eax,%edx
0x000f1d07:  shr    $0x8,%edx
0x000f1d0a:  cmp    %esi,%edx
0x000f1d0c:  jne    0xf1d31

----------------
IN: 
0x000f1d24:  test   $0x7,%cl
0x000f1d27:  jne    0xf1d2e

----------------
IN: 
0x000f1d2e:  inc    %ecx
0x000f1d2f:  jmp    0xf1d02

----------------
IN: 
0x000f1d02:  movzwl %cx,%eax
0x000f1d05:  mov    %eax,%edx
0x000f1d07:  shr    $0x8,%edx
0x000f1d0a:  cmp    %esi,%edx
0x000f1d0c:  jne    0xf1d31

----------------
IN: 
0x000f1d29:  add    $0x8,%ecx
0x000f1d2c:  jmp    0xf1d02

----------------
IN: 
0x000f1d31:  or     $0xffffffff,%ecx
0x000f1d34:  mov    %ecx,%eax
0x000f1d36:  pop    %ebx
0x000f1d37:  pop    %esi
0x000f1d38:  pop    %edi
0x000f1d39:  ret    

----------------
IN: 
0x07fe2604:  mov    %edi,%edx
0x07fe2606:  mov    0xc(%esp),%eax
0x07fe260a:  call   0xf1cd2

----------------
IN: 
0x07fe260f:  mov    %eax,%esi
0x07fe2611:  mov    %edi,%eax
0x07fe2613:  and    $0xff,%eax
0x07fe2618:  mov    %eax,0x14(%esp)
0x07fe261c:  jmp    0x7fe278f

----------------
IN: 
0x07fe278f:  test   %esi,%esi
0x07fe2791:  jns    0x7fe2621

----------------
IN: 
0x07fe2621:  mov    %esi,%ebp
0x07fe2623:  and    $0xffff,%ebp
0x07fe2629:  mov    %ebp,%eax
0x07fe262b:  shl    $0x8,%eax
0x07fe262e:  or     $0x80000008,%eax
0x07fe2633:  mov    $0xcf8,%edx
0x07fe2638:  out    %eax,(%dx)
0x07fe2639:  mov    $0xfe,%dl
0x07fe263b:  in     (%dx),%ax
0x07fe263d:  cmp    $0x604,%ax
0x07fe2641:  jne    0x7fe2784

----------------
IN: 
0x07fe2784:  mov    %edi,%edx
0x07fe2786:  mov    %esi,%eax
0x07fe2788:  call   0xf1cd2

----------------
IN: 
0x07fe278d:  mov    %eax,%esi
0x07fe278f:  test   %esi,%esi
0x07fe2791:  jns    0x7fe2621

----------------
IN: 
0x07fe2797:  add    $0x18,%esp
0x07fe279a:  pop    %ebx
0x07fe279b:  pop    %esi
0x07fe279c:  pop    %edi
0x07fe279d:  pop    %ebp
0x07fe279e:  ret    

----------------
IN: 
0x07fedd56:  movl   $0xf5a03,(%esp)
0x07fedd5d:  call   0xf2058

----------------
IN: 
0x07fedd62:  call   0x7fe4cb9

----------------
IN: 
0x07fe4cb9:  push   %ebp
0x07fe4cba:  push   %edi
0x07fe4cbb:  push   %esi
0x07fe4cbc:  push   %ebx
0x07fe4cbd:  sub    $0x420,%esp
0x07fe4cc3:  mov    $0x400,%ecx
0x07fe4cc8:  xor    %edx,%edx
0x07fe4cca:  lea    0x20(%esp),%eax
0x07fe4cce:  call   0xf172f

----------------
IN: 
0x07fe4cd3:  xor    %edx,%edx
0x07fe4cd5:  xor    %ecx,%ecx
0x07fe4cd7:  mov    $0xf46a8,%eax
0x07fe4cdc:  call   0xf18fc

----------------
IN: 
0x000f18fc:  push   %ebp
0x000f18fd:  mov    %esp,%ebp
0x000f18ff:  push   %edi
0x000f1900:  push   %esi
0x000f1901:  push   %ebx
0x000f1902:  sub    $0x8,%esp
0x000f1905:  mov    %edx,%esi
0x000f1907:  mov    %ecx,%edi
0x000f1909:  call   0xf18cb

----------------
IN: 
0x000f18cb:  push   %edi
0x000f18cc:  push   %esi
0x000f18cd:  push   %ebx
0x000f18ce:  mov    %eax,%esi
0x000f18d0:  call   0xf16dc

----------------
IN: 
0x000f16dc:  mov    %eax,%edx
0x000f16de:  jmp    0xf16e1

----------------
IN: 
0x000f16e1:  cmpb   $0x0,(%edx)
0x000f16e4:  jne    0xf16e0

----------------
IN: 
0x000f16e0:  inc    %edx
0x000f16e1:  cmpb   $0x0,(%edx)
0x000f16e4:  jne    0xf16e0

----------------
IN: 
0x000f16e6:  sub    %eax,%edx
0x000f16e8:  mov    %edx,%eax
0x000f16ea:  ret    

----------------
IN: 
0x000f18d5:  lea    0x1(%eax),%edi
0x000f18d8:  mov    0xf5e0c,%ebx
0x000f18de:  jmp    0xf18f2

----------------
IN: 
0x000f18f2:  test   %ebx,%ebx
0x000f18f4:  jne    0xf18e0

----------------
IN: 
0x000f18e0:  lea    0x4(%ebx),%edx
0x000f18e3:  mov    %edi,%ecx
0x000f18e5:  mov    %esi,%eax
0x000f18e7:  call   0xf16eb

----------------
IN: 
0x000f16eb:  push   %esi
0x000f16ec:  push   %ebx
0x000f16ed:  push   %ebx
0x000f16ee:  mov    %ecx,%esi
0x000f16f0:  xor    %ebx,%ebx
0x000f16f2:  jmp    0xf1705

----------------
IN: 
0x000f1705:  cmp    %esi,%ebx
0x000f1707:  jne    0xf16f4

----------------
IN: 
0x000f16f4:  mov    (%eax,%ebx,1),%cl
0x000f16f7:  inc    %ebx
0x000f16f8:  cmp    -0x1(%edx,%ebx,1),%cl
0x000f16fc:  je     0xf1705

----------------
IN: 
0x000f16fe:  sbb    %eax,%eax
0x000f1700:  or     $0x1,%eax
0x000f1703:  jmp    0xf170b

----------------
IN: 
0x000f170b:  pop    %edx
0x000f170c:  pop    %ebx
0x000f170d:  pop    %esi
0x000f170e:  ret    

----------------
IN: 
0x000f18ec:  test   %eax,%eax
0x000f18ee:  je     0xf18f6

----------------
IN: 
0x000f18f0:  mov    (%ebx),%ebx
0x000f18f2:  test   %ebx,%ebx
0x000f18f4:  jne    0xf18e0

----------------
IN: 
0x000f18f6:  mov    %ebx,%eax
0x000f18f8:  pop    %ebx
0x000f18f9:  pop    %esi
0x000f18fa:  pop    %edi
0x000f18fb:  ret    

----------------
IN: 
0x000f190e:  mov    %eax,%ebx
0x000f1910:  test   %eax,%eax
0x000f1912:  je     0xf194f

----------------
IN: 
0x000f194f:  mov    %esi,%eax
0x000f1951:  mov    %edi,%edx
0x000f1953:  pop    %ebx
0x000f1954:  pop    %esi
0x000f1955:  pop    %ebx
0x000f1956:  pop    %esi
0x000f1957:  pop    %edi
0x000f1958:  pop    %ebp
0x000f1959:  ret    

----------------
IN: 
0x07fe4ce1:  mov    %eax,0x1c(%esp)
0x07fe4ce5:  movl   $0x0,0x14(%esp)
0x07fe4ced:  xor    %ebp,%ebp
0x07fe4cef:  movl   $0x0,0x10(%esp)
0x07fe4cf7:  or     $0xffffffff,%esi
0x07fe4cfa:  movl   $0xf5df8,0x18(%esp)
0x07fe4d02:  jmp    0x7fe4e36

----------------
IN: 
0x07fe4e36:  cmp    0xfd250,%esi
0x07fe4e3c:  jl     0x7fe4d07

----------------
IN: 
0x07fe4d07:  inc    %esi
0x07fe4d08:  mov    %esi,%eax
0x07fe4d0a:  shl    $0x8,%eax
0x07fe4d0d:  and    $0xffff,%eax
0x07fe4d12:  dec    %eax
0x07fe4d13:  mov    %esi,%edx
0x07fe4d15:  jmp    0x7fe4e1f

----------------
IN: 
0x07fe4e1f:  call   0xf1cd2

----------------
IN: 
0x07fe4e24:  mov    %eax,%edi
0x07fe4e26:  test   %eax,%eax
0x07fe4e28:  jns    0x7fe4d1a

----------------
IN: 
0x07fe4d1a:  mov    $0x1c,%eax
0x07fe4d1f:  call   0x7fe0c38

----------------
IN: 
0x07fe4d24:  mov    %eax,%ebx
0x07fe4d26:  test   %eax,%eax
0x07fe4d28:  jne    0x7fe4d3e

----------------
IN: 
0x07fe4d3e:  mov    $0x1c,%ecx
0x07fe4d43:  xor    %edx,%edx
0x07fe4d45:  call   0xf172f

----------------
IN: 
0x07fe4d4a:  mov    0x18(%esp),%eax
0x07fe4d4e:  mov    %ebx,(%eax)
0x07fe4d50:  lea    0x4(%ebx),%eax
0x07fe4d53:  mov    %eax,0x18(%esp)
0x07fe4d57:  incl   0x14(%esp)
0x07fe4d5b:  mov    0x20(%esp,%esi,4),%edx
0x07fe4d5f:  test   %edx,%edx
0x07fe4d61:  jne    0x7fe4d7e

----------------
IN: 
0x07fe4d63:  xor    %eax,%eax
0x07fe4d65:  cmp    0x10(%esp),%esi
0x07fe4d69:  setne  %al
0x07fe4d6c:  add    %eax,%ebp
0x07fe4d6e:  cmp    0xfd250,%esi
0x07fe4d74:  jle    0x7fe4d84

----------------
IN: 
0x07fe4d84:  mov    %ebp,%eax
0x07fe4d86:  mov    %esi,0x10(%esp)
0x07fe4d8a:  mov    %di,(%ebx)
0x07fe4d8d:  mov    %edx,0x8(%ebx)
0x07fe4d90:  mov    %al,0x2(%ebx)
0x07fe4d93:  mov    %edi,%eax
0x07fe4d95:  and    $0xffff,%eax
0x07fe4d9a:  mov    %eax,0xc(%esp)
0x07fe4d9e:  xor    %edx,%edx
0x07fe4da0:  call   0xf1789

----------------
IN: 
0x000f1789:  mov    %edx,%ecx
0x000f178b:  and    $0xfc,%ecx
0x000f1791:  or     $0x80000000,%ecx
0x000f1797:  shl    $0x8,%eax
0x000f179a:  or     %eax,%ecx
0x000f179c:  mov    $0xcf8,%edx
0x000f17a1:  mov    %ecx,%eax
0x000f17a3:  out    %eax,(%dx)
0x000f17a4:  mov    $0xfc,%dl
0x000f17a6:  in     (%dx),%eax
0x000f17a7:  ret    

----------------
IN: 
0x07fe4da5:  mov    %ax,0xc(%ebx)
0x07fe4da9:  shr    $0x10,%eax
0x07fe4dac:  mov    %ax,0xe(%ebx)
0x07fe4db0:  mov    $0x8,%edx
0x07fe4db5:  mov    0xc(%esp),%eax
0x07fe4db9:  call   0xf1789

----------------
IN: 
0x07fe4dbe:  mov    %eax,%edx
0x07fe4dc0:  shr    $0x10,%edx
0x07fe4dc3:  mov    %dx,0x10(%ebx)
0x07fe4dc7:  mov    %eax,%edx
0x07fe4dc9:  shr    $0x8,%edx
0x07fe4dcc:  mov    %dl,0x12(%ebx)
0x07fe4dcf:  mov    %al,0x13(%ebx)
0x07fe4dd2:  mov    $0xe,%edx
0x07fe4dd7:  mov    0xc(%esp),%eax
0x07fe4ddb:  call   0xf17a8

----------------
IN: 
0x07fe4de0:  mov    %al,0x14(%ebx)
0x07fe4de3:  and    $0x7f,%eax
0x07fe4de6:  dec    %eax
0x07fe4de7:  cmp    $0x1,%al
0x07fe4de9:  ja     0x7fe4e1b

----------------
IN: 
0x07fe4e1b:  mov    %esi,%edx
0x07fe4e1d:  mov    %edi,%eax
0x07fe4e1f:  call   0xf1cd2

----------------
IN: 
0x07fe4e2e:  cmp    $0xff,%esi
0x07fe4e34:  je     0x7fe4e4c

----------------
IN: 
0x07fe4e42:  cmp    0x1c(%esp),%ebp
0x07fe4e46:  jl     0x7fe4d07

----------------
IN: 
0x07fe4e4c:  mov    0xfd250,%eax
0x07fe4e51:  mov    %eax,0x8(%esp)
0x07fe4e55:  mov    0x14(%esp),%eax
0x07fe4e59:  mov    %eax,0x4(%esp)
0x07fe4e5d:  movl   $0xf46bc,(%esp)
0x07fe4e64:  call   0xf2058

----------------
IN: 
0x07fe4e69:  add    $0x420,%esp
0x07fe4e6f:  pop    %ebx
0x07fe4e70:  pop    %esi
0x07fe4e71:  pop    %edi
0x07fe4e72:  pop    %ebp
0x07fe4e73:  ret    

----------------
IN: 
0x07fedd67:  mov    0xfdbf0,%ebx
0x07fedd6d:  mov    %ebx,0x7fefcf7
0x07fedd73:  movl   $0x0,0x7fefcfb
0x07fedd7d:  mov    0xf5df8,%ebx
0x07fedd83:  jmp    0x7febc63

----------------
IN: 
0x07febc63:  test   %ebx,%ebx
0x07febc65:  jne    0x7febc52

----------------
IN: 
0x07febc52:  xor    %ecx,%ecx
0x07febc54:  mov    %ebx,%edx
0x07febc56:  mov    $0x7fee42b,%eax
0x07febc5b:  call   0xf17ef

----------------
IN: 
0x000f17ef:  push   %esi
0x000f17f0:  push   %ebx
0x000f17f1:  mov    %edx,%ebx
0x000f17f3:  mov    %ecx,%edx
0x000f17f5:  jmp    0xf1830

----------------
IN: 
0x000f1830:  mov    (%eax),%esi
0x000f1832:  test   %esi,%esi
0x000f1834:  jne    0xf17f7

----------------
IN: 
0x000f17f7:  cmp    $0xffffffff,%esi
0x000f17fa:  je     0xf1804

----------------
IN: 
0x000f17fc:  movzwl 0xc(%ebx),%ecx
0x000f1800:  cmp    %ecx,%esi
0x000f1802:  jne    0xf182d

----------------
IN: 
0x000f1804:  mov    0x4(%eax),%esi
0x000f1807:  cmp    $0xffffffff,%esi
0x000f180a:  je     0xf1814

----------------
IN: 
0x000f180c:  movzwl 0xe(%ebx),%ecx
0x000f1810:  cmp    %ecx,%esi
0x000f1812:  jne    0xf182d

----------------
IN: 
0x000f1814:  movzwl 0x10(%ebx),%esi
0x000f1818:  xor    0x8(%eax),%esi
0x000f181b:  test   %esi,0xc(%eax)
0x000f181e:  jne    0xf182d

----------------
IN: 
0x000f1820:  mov    0x10(%eax),%esi
0x000f1823:  test   %esi,%esi
0x000f1825:  je     0xf1841

----------------
IN: 
0x000f1827:  mov    %ebx,%eax
0x000f1829:  call   *%esi

----------------
IN: 
0x07fe1137:  mov    0xfdbf0,%eax
0x07fe113c:  cmp    $0x80000000,%eax
0x07fe1141:  ja     0x7fe114f

----------------
IN: 
0x07fe1143:  movl   $0x80000000,0x7fefcf7
0x07fe114d:  jmp    0x7fe1160

----------------
IN: 
0x07fe1160:  movl   $0x0,0x7fefcfb
0x07fe116a:  movl   $0x7fe10a0,0x7fefcff
0x07fe1174:  ret    

----------------
IN: 
0x000f182b:  jmp    0xf1841

----------------
IN: 
0x000f1841:  xor    %eax,%eax
0x000f1843:  pop    %ebx
0x000f1844:  pop    %esi
0x000f1845:  ret    

----------------
IN: 
0x07febc60:  mov    0x4(%ebx),%ebx
0x07febc63:  test   %ebx,%ebx
0x07febc65:  jne    0x7febc52

----------------
IN: 
0x000f182d:  add    $0x14,%eax
0x000f1830:  mov    (%eax),%esi
0x000f1832:  test   %esi,%esi
0x000f1834:  jne    0xf17f7

----------------
IN: 
0x000f1836:  cmpl   $0x0,0xc(%eax)
0x000f183a:  jne    0xf17fc

----------------
IN: 
0x000f183c:  or     $0xffffffff,%eax
0x000f183f:  jmp    0xf1843

----------------
IN: 
0x000f1843:  pop    %ebx
0x000f1844:  pop    %esi
0x000f1845:  ret    

----------------
IN: 
0x07febc67:  movl   $0xf5595,(%esp)
0x07febc6e:  call   0xf2058

----------------
IN: 
0x07febc73:  mov    0xfd250,%eax
0x07febc78:  inc    %eax
0x07febc79:  imul   $0x28,%eax,%eax
0x07febc7c:  call   0x7fe0c38

----------------
IN: 
0x07febc81:  mov    %eax,%ebp
0x07febc83:  test   %eax,%eax
0x07febc85:  jne    0x7febc9b

----------------
IN: 
0x07febc9b:  mov    0xfd250,%ecx
0x07febca1:  inc    %ecx
0x07febca2:  imul   $0x28,%ecx,%ecx
0x07febca5:  xor    %edx,%edx
0x07febca7:  call   0xf172f

----------------
IN: 
0x07febcac:  movl   $0xf55b9,(%esp)
0x07febcb3:  call   0xf2058

----------------
IN: 
0x07febcb8:  mov    0xf5df8,%ebx
0x07febcbe:  jmp    0x7febf05

----------------
IN: 
0x07febf05:  test   %ebx,%ebx
0x07febf07:  jne    0x7febcc3

----------------
IN: 
0x07febcc3:  cmpw   $0x604,0x10(%ebx)
0x07febcc9:  jne    0x7febcd6

----------------
IN: 
0x07febcd6:  mov    (%ebx),%eax
0x07febcd8:  movzbl %ah,%eax
0x07febcdb:  imul   $0x28,%eax,%eax
0x07febcde:  add    %ebp,%eax
0x07febce0:  mov    %eax,0x80(%esp)
0x07febce7:  xor    %edi,%edi
0x07febce9:  lea    0x14(%ebx),%esi
0x07febcec:  mov    %esi,0x84(%esp)
0x07febcf3:  cmpw   $0x604,0x10(%ebx)
0x07febcf9:  jne    0x7febd07

----------------
IN: 
0x07febd07:  cmp    $0x6,%edi
0x07febd0a:  je     0x7febd15

----------------
IN: 
0x07febd0c:  lea    0x10(,%edi,4),%esi
0x07febd13:  jmp    0x7febd23

----------------
IN: 
0x07febd23:  movzwl (%ebx),%eax
0x07febd26:  mov    %eax,0x48(%esp)
0x07febd2a:  mov    %esi,%edx
0x07febd2c:  call   0xf1789

----------------
IN: 
0x07febd31:  mov    %eax,0x68(%esp)
0x07febd35:  cmp    $0x6,%edi
0x07febd38:  jne    0x7febd6c

----------------
IN: 
0x07febd6c:  testb  $0x1,0x68(%esp)
0x07febd71:  jne    0x7febdab

----------------
IN: 
0x07febd73:  mov    0x68(%esp),%eax
0x07febd77:  and    $0x8,%eax
0x07febd7a:  cmp    $0x1,%eax
0x07febd7d:  sbb    %edx,%edx
0x07febd7f:  add    $0x2,%edx
0x07febd82:  mov    %edx,0x58(%esp)
0x07febd86:  mov    0x68(%esp),%eax
0x07febd8a:  and    $0x6,%eax
0x07febd8d:  xor    %ecx,%ecx
0x07febd8f:  cmp    $0x4,%eax
0x07febd92:  sete   %cl
0x07febd95:  mov    %ecx,0x60(%esp)
0x07febd99:  movl   $0xfffffff0,0x6c(%esp)
0x07febda1:  movl   $0x0,0x70(%esp)
0x07febda9:  jmp    0x7febdcb

----------------
IN: 
0x07febdcb:  or     $0xffffffff,%ecx
0x07febdce:  mov    %esi,%edx
0x07febdd0:  mov    0x48(%esp),%eax
0x07febdd4:  call   0xf173a

----------------
IN: 
0x000f173a:  push   %ebx
0x000f173b:  mov    %edx,%ebx
0x000f173d:  and    $0xfc,%ebx
0x000f1743:  or     $0x80000000,%ebx
0x000f1749:  shl    $0x8,%eax
0x000f174c:  or     %eax,%ebx
0x000f174e:  mov    $0xcf8,%edx
0x000f1753:  mov    %ebx,%eax
0x000f1755:  out    %eax,(%dx)
0x000f1756:  mov    $0xfc,%dl
0x000f1758:  mov    %ecx,%eax
0x000f175a:  out    %eax,(%dx)
0x000f175b:  pop    %ebx
0x000f175c:  ret    

----------------
IN: 
0x07febdd9:  mov    %esi,%edx
0x07febddb:  mov    0x48(%esp),%eax
0x07febddf:  call   0xf1789

----------------
IN: 
0x07febde4:  mov    %eax,0x74(%esp)
0x07febde8:  mov    0x68(%esp),%ecx
0x07febdec:  mov    %esi,%edx
0x07febdee:  mov    0x48(%esp),%eax
0x07febdf2:  call   0xf173a

----------------
IN: 
0x07febdf7:  cmpl   $0x0,0x60(%esp)
0x07febdfc:  je     0x7febe69

----------------
IN: 
0x07febe69:  mov    0x74(%esp),%eax
0x07febe6d:  and    0x6c(%esp),%eax
0x07febe71:  neg    %eax
0x07febe73:  mov    %eax,0x50(%esp)
0x07febe77:  movl   $0x0,0x54(%esp)
0x07febe7f:  mov    0x54(%esp),%ecx
0x07febe83:  or     0x50(%esp),%ecx
0x07febe87:  je     0x7febef8

----------------
IN: 
0x07febef8:  inc    %edi
0x07febef9:  cmp    $0x6,%edi
0x07febefc:  jle    0x7febcf3

----------------
IN: 
0x07febcf3:  cmpw   $0x604,0x10(%ebx)
0x07febcf9:  jne    0x7febd07

----------------
IN: 
0x07febd15:  mov    0x84(%esp),%eax
0x07febd1c:  call   0x7fe15d1

----------------
IN: 
0x07fe15d1:  mov    (%eax),%al
0x07fe15d3:  and    $0x7f,%eax
0x07fe15d6:  dec    %al
0x07fe15d8:  sete   %al
0x07fe15db:  movzbl %al,%eax
0x07fe15de:  lea    0x30(,%eax,8),%eax
0x07fe15e5:  ret    

----------------
IN: 
0x07febd21:  mov    %eax,%esi
0x07febd23:  movzwl (%ebx),%eax
0x07febd26:  mov    %eax,0x48(%esp)
0x07febd2a:  mov    %esi,%edx
0x07febd2c:  call   0xf1789

----------------
IN: 
0x07febd3a:  mov    $0xfffff800,%ecx
0x07febd3f:  mov    %esi,%edx
0x07febd41:  mov    0x48(%esp),%eax
0x07febd45:  call   0xf173a

----------------
IN: 
0x07febd4a:  movl   $0xfffff800,0x6c(%esp)
0x07febd52:  movl   $0x0,0x70(%esp)
0x07febd5a:  movl   $0x1,0x58(%esp)
0x07febd62:  movl   $0x0,0x60(%esp)
0x07febd6a:  jmp    0x7febdd9

----------------
IN: 
0x07febf02:  mov    0x4(%ebx),%ebx
0x07febf05:  test   %ebx,%ebx
0x07febf07:  jne    0x7febcc3

----------------
IN: 
0x07febdab:  movl   $0xfffffffc,0x6c(%esp)
0x07febdb3:  movl   $0x0,0x70(%esp)
0x07febdbb:  movl   $0x0,0x58(%esp)
0x07febdc3:  movl   $0x0,0x60(%esp)
0x07febdcb:  or     $0xffffffff,%ecx
0x07febdce:  mov    %esi,%edx
0x07febdd0:  mov    0x48(%esp),%eax
0x07febdd4:  call   0xf173a

----------------
IN: 
0x07febe89:  cmpl   $0x0,0x58(%esp)
0x07febe8e:  je     0x7febeb1

----------------
IN: 
0x07febeb1:  mov    0x60(%esp),%eax
0x07febeb5:  mov    %eax,0x14(%esp)
0x07febeb9:  mov    0x58(%esp),%esi
0x07febebd:  mov    %esi,0x10(%esp)
0x07febec1:  mov    0x50(%esp),%eax
0x07febec5:  mov    0x54(%esp),%edx
0x07febec9:  mov    %eax,0x8(%esp)
0x07febecd:  mov    %edx,0xc(%esp)
0x07febed1:  mov    %eax,(%esp)
0x07febed4:  mov    %edx,0x4(%esp)
0x07febed8:  mov    %edi,%ecx
0x07febeda:  mov    %ebx,%edx
0x07febedc:  mov    0x80(%esp),%eax
0x07febee3:  call   0x7fe3096

----------------
IN: 
0x07fe3096:  push   %ebp
0x07fe3097:  push   %edi
0x07fe3098:  push   %esi
0x07fe3099:  push   %ebx
0x07fe309a:  sub    $0x10,%esp
0x07fe309d:  mov    %eax,%esi
0x07fe309f:  mov    %edx,0x8(%esp)
0x07fe30a3:  mov    %ecx,0xc(%esp)
0x07fe30a7:  mov    0x24(%esp),%edi
0x07fe30ab:  mov    0x28(%esp),%ebp
0x07fe30af:  mov    0x2c(%esp),%eax
0x07fe30b3:  mov    %eax,(%esp)
0x07fe30b6:  mov    0x30(%esp),%eax
0x07fe30ba:  mov    %eax,0x4(%esp)
0x07fe30be:  mov    $0x24,%eax
0x07fe30c3:  call   0x7fe0c38

----------------
IN: 
0x07fe30c8:  mov    %eax,%ebx
0x07fe30ca:  test   %eax,%eax
0x07fe30cc:  jne    0x7fe30df

----------------
IN: 
0x07fe30df:  mov    $0x24,%ecx
0x07fe30e4:  xor    %edx,%edx
0x07fe30e6:  call   0xf172f

----------------
IN: 
0x07fe30eb:  mov    0x8(%esp),%eax
0x07fe30ef:  mov    %eax,(%ebx)
0x07fe30f1:  mov    0xc(%esp),%eax
0x07fe30f5:  mov    %eax,0x4(%ebx)
0x07fe30f8:  mov    %edi,0x8(%ebx)
0x07fe30fb:  mov    %ebp,0xc(%ebx)
0x07fe30fe:  mov    (%esp),%eax
0x07fe3101:  mov    %eax,0x10(%ebx)
0x07fe3104:  mov    0x4(%esp),%eax
0x07fe3108:  mov    %eax,0x14(%ebx)
0x07fe310b:  mov    0x38(%esp),%eax
0x07fe310f:  mov    %eax,0x18(%ebx)
0x07fe3112:  mov    0x34(%esp),%eax
0x07fe3116:  mov    %eax,0x1c(%ebx)
0x07fe3119:  imul   $0xc,%eax,%eax
0x07fe311c:  lea    0x8(%esi,%eax,1),%edx
0x07fe3120:  jmp    0x7fe314f

----------------
IN: 
0x07fe314f:  mov    (%edx),%eax
0x07fe3151:  test   %eax,%eax
0x07fe3153:  jne    0x7fe3122

----------------
IN: 
0x07fe3155:  mov    %eax,0x20(%ebx)
0x07fe3158:  mov    %ebx,(%edx)
0x07fe315a:  mov    %ebx,%eax
0x07fe315c:  add    $0x10,%esp
0x07fe315f:  pop    %ebx
0x07fe3160:  pop    %esi
0x07fe3161:  pop    %edi
0x07fe3162:  pop    %ebp
0x07fe3163:  ret    

----------------
IN: 
0x07febee8:  test   %eax,%eax
0x07febeea:  je     0x7fec335

----------------
IN: 
0x07febef0:  cmpl   $0x1,0x60(%esp)
0x07febef5:  sbb    $0xffffffff,%edi
0x07febef8:  inc    %edi
0x07febef9:  cmp    $0x6,%edi
0x07febefc:  jle    0x7febcf3

----------------
IN: 
0x07febe90:  cmpl   $0x0,0x54(%esp)
0x07febe95:  ja     0x7febeb1

----------------
IN: 
0x07febe97:  cmpl   $0xfff,0x50(%esp)
0x07febe9f:  ja     0x7febeb1

----------------
IN: 
0x07fe3122:  mov    0x10(%eax),%ecx
0x07fe3125:  mov    0x14(%eax),%esi
0x07fe3128:  cmp    0x4(%esp),%esi
0x07fe312c:  jb     0x7fe3155

----------------
IN: 
0x07fe312e:  ja     0x7fe3135

----------------
IN: 
0x07fe3130:  cmp    (%esp),%ecx
0x07fe3133:  jb     0x7fe3155

----------------
IN: 
0x07febf0d:  mov    0xfd250,%ebx
0x07febf13:  mov    %ebx,0x58(%esp)
0x07febf17:  imul   $0x28,%ebx,%eax
0x07febf1a:  add    %ebp,%eax
0x07febf1c:  mov    %eax,0x50(%esp)
0x07febf20:  jmp    0x7fec0c0

----------------
IN: 
0x07fec0c0:  cmpl   $0x0,0x58(%esp)
0x07fec0c5:  jg     0x7febf25

----------------
IN: 
0x07fec0cb:  jmp    0x7fedd88

----------------
IN: 
0x07fedd88:  movl   $0xf5a1f,(%esp)
0x07fedd8f:  call   0xf2058

----------------
IN: 
0x07fedd94:  mov    %ebp,%eax
0x07fedd96:  call   0x7fe1600

----------------
IN: 
0x07fe1600:  push   %ebp
0x07fe1601:  push   %edi
0x07fe1602:  push   %esi
0x07fe1603:  push   %ebx
0x07fe1604:  sub    $0x10,%esp
0x07fe1607:  movl   $0xc000,(%eax)
0x07fe160d:  movl   $0x0,0x4(%eax)
0x07fe1614:  lea    0x18(%eax),%edi
0x07fe1617:  lea    0xc(%eax),%esi
0x07fe161a:  mov    0x14(%eax),%edx
0x07fe161d:  test   %edx,%edx
0x07fe161f:  je     0x7fe1629

----------------
IN: 
0x07fe1621:  mov    0x10(%edx),%ecx
0x07fe1624:  mov    0x14(%edx),%ebx
0x07fe1627:  jmp    0x7fe1630

----------------
IN: 
0x07fe1630:  mov    0x20(%eax),%eax
0x07fe1633:  test   %eax,%eax
0x07fe1635:  je     0x7fe1643

----------------
IN: 
0x07fe1637:  mov    0x14(%eax),%edx
0x07fe163a:  mov    0x10(%eax),%eax
0x07fe163d:  cmp    %edx,%ebx
0x07fe163f:  jb     0x7fe1652

----------------
IN: 
0x07fe1641:  jmp    0x7fe164a

----------------
IN: 
0x07fe164a:  cmp    %edx,%ebx
0x07fe164c:  ja     0x7fe1658

----------------
IN: 
0x07fe164e:  cmp    %eax,%ecx
0x07fe1650:  jae    0x7fe1658

----------------
IN: 
0x07fe1652:  mov    %edi,%eax
0x07fe1654:  mov    %esi,%edi
0x07fe1656:  mov    %eax,%esi
0x07fe1658:  mov    0x8(%edi),%ebp
0x07fe165b:  mov    %ebp,%eax
0x07fe165d:  call   0x7fe15e6

----------------
IN: 
0x07fe15e6:  push   %ebp
0x07fe15e7:  mov    %esp,%ebp
0x07fe15e9:  mov    %eax,%ecx
0x07fe15eb:  xor    %eax,%eax
0x07fe15ed:  xor    %edx,%edx
0x07fe15ef:  jmp    0x7fe15fa

----------------
IN: 
0x07fe15fa:  test   %ecx,%ecx
0x07fe15fc:  jne    0x7fe15f1

----------------
IN: 
0x07fe15f1:  add    0x8(%ecx),%eax
0x07fe15f4:  adc    0xc(%ecx),%edx
0x07fe15f7:  mov    0x20(%ecx),%ecx
0x07fe15fa:  test   %ecx,%ecx
0x07fe15fc:  jne    0x7fe15f1

----------------
IN: 
0x07fe15fe:  pop    %ebp
0x07fe15ff:  ret    

----------------
IN: 
0x07fe1662:  test   %ebp,%ebp
0x07fe1664:  je     0x7fe1675

----------------
IN: 
0x07fe1666:  mov    0x10(%ebp),%ecx
0x07fe1669:  mov    0x14(%ebp),%ebx
0x07fe166c:  mov    %ecx,(%esp)
0x07fe166f:  mov    %ebx,0x4(%esp)
0x07fe1673:  jmp    0x7fe1684

----------------
IN: 
0x07fe1684:  mov    (%esp),%ecx
0x07fe1687:  mov    0x4(%esp),%ebx
0x07fe168b:  neg    %ecx
0x07fe168d:  adc    $0x0,%ebx
0x07fe1690:  neg    %ebx
0x07fe1692:  mov    %ecx,0x8(%esp)
0x07fe1696:  mov    %ebx,0xc(%esp)
0x07fe169a:  mov    $0xfec00000,%ecx
0x07fe169f:  xor    %ebx,%ebx
0x07fe16a1:  sub    %eax,%ecx
0x07fe16a3:  sbb    %edx,%ebx
0x07fe16a5:  mov    0x8(%esp),%ebp
0x07fe16a9:  and    %ecx,%ebp
0x07fe16ab:  mov    %ebp,(%esp)
0x07fe16ae:  mov    0xc(%esp),%eax
0x07fe16b2:  and    %ebx,%eax
0x07fe16b4:  mov    %eax,0x4(%esp)
0x07fe16b8:  mov    (%esp),%ecx
0x07fe16bb:  mov    0x4(%esp),%ebx
0x07fe16bf:  mov    %ecx,(%edi)
0x07fe16c1:  mov    %ebx,0x4(%edi)
0x07fe16c4:  mov    0x8(%esi),%ebx
0x07fe16c7:  mov    %ebx,%eax
0x07fe16c9:  call   0x7fe15e6

----------------
IN: 
0x07fe16ce:  test   %ebx,%ebx
0x07fe16d0:  je     0x7fe16da

----------------
IN: 
0x07fe16d2:  mov    0x10(%ebx),%ecx
0x07fe16d5:  mov    0x14(%ebx),%ebx
0x07fe16d8:  jmp    0x7fe16e1

----------------
IN: 
0x07fe16e1:  neg    %ecx
0x07fe16e3:  adc    $0x0,%ebx
0x07fe16e6:  neg    %ebx
0x07fe16e8:  mov    (%esp),%edi
0x07fe16eb:  mov    0x4(%esp),%ebp
0x07fe16ef:  sub    %eax,%edi
0x07fe16f1:  sbb    %edx,%ebp
0x07fe16f3:  mov    %edi,%eax
0x07fe16f5:  mov    %ebp,%edx
0x07fe16f7:  and    %ecx,%eax
0x07fe16f9:  and    %ebx,%edx
0x07fe16fb:  mov    %eax,(%esi)
0x07fe16fd:  mov    %edx,0x4(%esi)
0x07fe1700:  cmp    0x7fefcfb,%edx
0x07fe1706:  ja     0x7fe1717

----------------
IN: 
0x07fe1708:  jb     0x7fe1712

----------------
IN: 
0x07fe170a:  cmp    0x7fefcf7,%eax
0x07fe1710:  jae    0x7fe1717

----------------
IN: 
0x07fe1717:  cmp    $0x0,%edx
0x07fe171a:  ja     0x7fe1712

----------------
IN: 
0x07fe171c:  cmp    $0xfec00000,%eax
0x07fe1721:  ja     0x7fe1712

----------------
IN: 
0x07fe1723:  xor    %eax,%eax
0x07fe1725:  add    $0x10,%esp
0x07fe1728:  pop    %ebx
0x07fe1729:  pop    %esi
0x07fe172a:  pop    %edi
0x07fe172b:  pop    %ebp
0x07fe172c:  ret    

----------------
IN: 
0x07fedd9b:  test   %eax,%eax
0x07fedd9d:  je     0x7fec255

----------------
IN: 
0x07fec255:  movl   $0x0,0x7fefd07
0x07fec25f:  movl   $0x0,0x7fefd0b
0x07fec269:  jmp    0x7fec24f

----------------
IN: 
0x07fec24f:  mov    %ebp,%ebx
0x07fec251:  xor    %esi,%esi
0x07fec253:  jmp    0x7fec26b

----------------
IN: 
0x07fec26b:  cmp    0xfd250,%esi
0x07fec271:  jg     0x7fec296

----------------
IN: 
0x07fec273:  mov    %ebx,%edx
0x07fec275:  mov    %ebp,%eax
0x07fec277:  call   0x7fe279f

----------------
IN: 
0x07fe279f:  push   %ebp
0x07fe27a0:  push   %edi
0x07fe27a1:  push   %esi
0x07fe27a2:  push   %ebx
0x07fe27a3:  sub    $0x50,%esp
0x07fe27a6:  mov    %eax,0x4c(%esp)
0x07fe27aa:  mov    %edx,0x48(%esp)
0x07fe27ae:  mov    0x8(%edx),%ebp
0x07fe27b1:  jmp    0x7fe2a19

----------------
IN: 
0x07fe2a19:  test   %ebp,%ebp
0x07fe2a1b:  jne    0x7fe27b6

----------------
IN: 
0x07fe27b6:  mov    0x48(%esp),%esi
0x07fe27ba:  mov    (%esi),%ebx
0x07fe27bc:  mov    0x4(%esi),%esi
0x07fe27bf:  mov    %ebx,0x38(%esp)
0x07fe27c3:  mov    %esi,0x3c(%esp)
0x07fe27c7:  mov    0x8(%ebp),%eax
0x07fe27ca:  mov    0xc(%ebp),%edx
0x07fe27cd:  mov    %eax,0x30(%esp)
0x07fe27d1:  mov    %edx,0x34(%esp)
0x07fe27d5:  mov    %ebx,%eax
0x07fe27d7:  mov    %esi,%edx
0x07fe27d9:  add    0x30(%esp),%eax
0x07fe27dd:  adc    0x34(%esp),%edx
0x07fe27e1:  mov    0x48(%esp),%ecx
0x07fe27e5:  mov    %eax,(%ecx)
0x07fe27e7:  mov    %edx,0x4(%ecx)
0x07fe27ea:  mov    0x4(%ebp),%ebx
0x07fe27ed:  mov    %ebx,0x28(%esp)
0x07fe27f1:  inc    %ebx
0x07fe27f2:  jne    0x7fe281f

----------------
IN: 
0x07fe281f:  mov    0x0(%ebp),%ebx
0x07fe2822:  mov    (%ebx),%ebx
0x07fe2824:  cmpl   $0x0,0x28(%esp)
0x07fe2829:  js     0x7fe28d4

----------------
IN: 
0x07fe282f:  mov    0x1c(%ebp),%eax
0x07fe2832:  mov    0x7fee46b(,%eax,4),%eax
0x07fe2839:  mov    %eax,0x24(%esp)
0x07fe283d:  mov    0x30(%esp),%esi
0x07fe2841:  mov    0x34(%esp),%edi
0x07fe2845:  mov    %esi,0x1c(%esp)
0x07fe2849:  mov    %edi,0x20(%esp)
0x07fe284d:  mov    0x38(%esp),%esi
0x07fe2851:  mov    0x3c(%esp),%edi
0x07fe2855:  mov    %esi,0x14(%esp)
0x07fe2859:  mov    %edi,0x18(%esp)
0x07fe285d:  mov    0x28(%esp),%edi
0x07fe2861:  mov    %edi,0x10(%esp)
0x07fe2865:  mov    %ebx,%eax
0x07fe2867:  and    $0x7,%eax
0x07fe286a:  mov    %eax,0xc(%esp)
0x07fe286e:  mov    %ebx,%eax
0x07fe2870:  shr    $0x3,%ax
0x07fe2874:  and    $0x1f,%eax
0x07fe2877:  mov    %eax,0x8(%esp)
0x07fe287b:  movzbl %bh,%ebx
0x07fe287e:  mov    %ebx,0x4(%esp)
0x07fe2882:  movl   $0xf4400,(%esp)
0x07fe2889:  call   0xf2058

----------------
IN: 
0x07fe288e:  mov    0x18(%ebp),%edi
0x07fe2891:  mov    0x4(%ebp),%eax
0x07fe2894:  mov    0x0(%ebp),%ebx
0x07fe2897:  cmp    $0x6,%eax
0x07fe289a:  je     0x7fe28a5

----------------
IN: 
0x07fe289c:  lea    0x10(,%eax,4),%esi
0x07fe28a3:  jmp    0x7fe28af

----------------
IN: 
0x07fe28af:  movzwl (%ebx),%eax
0x07fe28b2:  mov    0x38(%esp),%ecx
0x07fe28b6:  mov    %esi,%edx
0x07fe28b8:  call   0xf173a

----------------
IN: 
0x07fe28bd:  test   %edi,%edi
0x07fe28bf:  je     0x7fe2a0d

----------------
IN: 
0x07fe2a0d:  mov    0x20(%ebp),%ebx
0x07fe2a10:  mov    %ebp,%eax
0x07fe2a12:  call   0x7fe0ca5

----------------
IN: 
0x07fe0ca5:  push   %ebx
0x07fe0ca6:  xor    %edx,%edx
0x07fe0ca8:  mov    0x7fee3af(,%edx,4),%ecx
0x07fe0caf:  mov    (%ecx),%ebx
0x07fe0cb1:  jmp    0x7fe0cba

----------------
IN: 
0x07fe0cba:  test   %ebx,%ebx
0x07fe0cbc:  jne    0x7fe0cb3

----------------
IN: 
0x07fe0cb3:  cmp    %eax,0x8(%ebx)
0x07fe0cb6:  je     0x7fe0cc4

----------------
IN: 
0x07fe0cb8:  mov    (%ebx),%ebx
0x07fe0cba:  test   %ebx,%ebx
0x07fe0cbc:  jne    0x7fe0cb3

----------------
IN: 
0x07fe0cbe:  inc    %edx
0x07fe0cbf:  cmp    $0x5,%edx
0x07fe0cc2:  jne    0x7fe0ca8

----------------
IN: 
0x07fe0ca8:  mov    0x7fee3af(,%edx,4),%ecx
0x07fe0caf:  mov    (%ecx),%ebx
0x07fe0cb1:  jmp    0x7fe0cba

----------------
IN: 
0x07fe0cc4:  cmp    %ebx,%eax
0x07fe0cc6:  je     0x7fe0ce4

----------------
IN: 
0x07fe0cc8:  test   %ebx,%ebx
0x07fe0cca:  je     0x7fe0ce4

----------------
IN: 
0x07fe0ccc:  cmp    0xc(%ebx),%eax
0x07fe0ccf:  je     0x7fe0ce4

----------------
IN: 
0x07fe0cd1:  mov    %ebx,%eax
0x07fe0cd3:  call   0x7fe0b13

----------------
IN: 
0x07fe0b13:  mov    (%eax),%edx
0x07fe0b15:  mov    0x4(%eax),%ecx
0x07fe0b18:  mov    %edx,(%ecx)
0x07fe0b1a:  test   %edx,%edx
0x07fe0b1c:  je     0x7fe0b31

----------------
IN: 
0x07fe0b1e:  push   %ebx
0x07fe0b1f:  mov    0x8(%eax),%ebx
0x07fe0b22:  cmp    %ebx,0x10(%edx)
0x07fe0b25:  jne    0x7fe0b2d

----------------
IN: 
0x07fe0b27:  mov    0x10(%eax),%eax
0x07fe0b2a:  mov    %eax,0x10(%edx)
0x07fe0b2d:  mov    %ecx,0x4(%edx)
0x07fe0b30:  pop    %ebx
0x07fe0b31:  ret    

----------------
IN: 
0x07fe0cd8:  lea    -0x14(%ebx),%eax
0x07fe0cdb:  call   0x7fe0b13

----------------
IN: 
0x07fe0ce0:  xor    %eax,%eax
0x07fe0ce2:  jmp    0x7fe0ce7

----------------
IN: 
0x07fe0ce7:  pop    %ebx
0x07fe0ce8:  ret    

----------------
IN: 
0x07fe2a17:  mov    %ebx,%ebp
0x07fe2a19:  test   %ebp,%ebp
0x07fe2a1b:  jne    0x7fe27b6

----------------
IN: 
0x07fe2a21:  add    $0x50,%esp
0x07fe2a24:  pop    %ebx
0x07fe2a25:  pop    %esi
0x07fe2a26:  pop    %edi
0x07fe2a27:  pop    %ebp
0x07fe2a28:  ret    

----------------
IN: 
0x07fec27c:  lea    0xc(%ebx),%edx
0x07fec27f:  mov    %ebp,%eax
0x07fec281:  call   0x7fe279f

----------------
IN: 
0x07fe28a5:  lea    0x14(%ebx),%eax
0x07fe28a8:  call   0x7fe15d1

----------------
IN: 
0x07fe28ad:  mov    %eax,%esi
0x07fe28af:  movzwl (%ebx),%eax
0x07fe28b2:  mov    0x38(%esp),%ecx
0x07fe28b6:  mov    %esi,%edx
0x07fe28b8:  call   0xf173a

----------------
IN: 
0x07fec286:  lea    0x18(%ebx),%edx
0x07fec289:  mov    %ebp,%eax
0x07fec28b:  call   0x7fe279f

----------------
IN: 
0x07fec290:  inc    %esi
0x07fec291:  add    $0x28,%ebx
0x07fec294:  jmp    0x7fec26b

----------------
IN: 
0x07fec296:  mov    0xf5df8,%ebx
0x07fec29c:  jmp    0x7fec326

----------------
IN: 
0x07fec326:  test   %ebx,%ebx
0x07fec328:  jne    0x7fec2a1

----------------
IN: 
0x07fec2a1:  movzwl (%ebx),%esi
0x07fec2a4:  movzwl 0xe(%ebx),%eax
0x07fec2a8:  mov    %eax,0x14(%esp)
0x07fec2ac:  movzwl 0xc(%ebx),%eax
0x07fec2b0:  mov    %eax,0x10(%esp)
0x07fec2b4:  mov    %esi,%eax
0x07fec2b6:  and    $0x7,%eax
0x07fec2b9:  mov    %eax,0xc(%esp)
0x07fec2bd:  mov    %esi,%eax
0x07fec2bf:  shr    $0x3,%ax
0x07fec2c3:  and    $0x1f,%eax
0x07fec2c6:  mov    %eax,0x8(%esp)
0x07fec2ca:  mov    %esi,%edx
0x07fec2cc:  movzbl %dh,%eax
0x07fec2cf:  mov    %eax,0x4(%esp)
0x07fec2d3:  movl   $0xf5619,(%esp)
0x07fec2da:  call   0xf2058

----------------
IN: 
0x07fec2df:  mov    $0x3d,%edx
0x07fec2e4:  mov    %esi,%eax
0x07fec2e6:  call   0xf17a8

----------------
IN: 
0x07fec2eb:  movzbl %al,%edx
0x07fec2ee:  test   %edx,%edx
0x07fec2f0:  je     0x7fec309

----------------
IN: 
0x07fec309:  xor    %ecx,%ecx
0x07fec30b:  mov    %ebx,%edx
0x07fec30d:  mov    $0x7fee48f,%eax
0x07fec312:  call   0xf17ef

----------------
IN: 
0x07fec317:  mov    $0x103,%edx
0x07fec31c:  mov    %esi,%eax
0x07fec31e:  call   0x7fe1f26

----------------
IN: 
0x07fe1f26:  push   %esi
0x07fe1f27:  push   %ebx
0x07fe1f28:  mov    %eax,%ecx
0x07fe1f2a:  mov    %edx,%esi
0x07fe1f2c:  shl    $0x8,%ecx
0x07fe1f2f:  or     $0x80000004,%ecx
0x07fe1f35:  mov    $0xcf8,%edx
0x07fe1f3a:  mov    %ecx,%eax
0x07fe1f3c:  out    %eax,(%dx)
0x07fe1f3d:  mov    $0xfc,%dl
0x07fe1f3f:  in     (%dx),%ax
0x07fe1f41:  mov    %eax,%ebx
0x07fe1f43:  mov    $0xf8,%dl
0x07fe1f45:  mov    %ecx,%eax
0x07fe1f47:  out    %eax,(%dx)
0x07fe1f48:  or     %esi,%ebx
0x07fe1f4a:  mov    $0xfc,%dl
0x07fe1f4c:  mov    %ebx,%eax
0x07fe1f4e:  out    %ax,(%dx)
0x07fe1f50:  pop    %ebx
0x07fe1f51:  pop    %esi
0x07fe1f52:  ret    

----------------
IN: 
0x07fec323:  mov    0x4(%ebx),%ebx
0x07fec326:  test   %ebx,%ebx
0x07fec328:  jne    0x7fec2a1

----------------
IN: 
0x07fe2a29:  push   %edi
0x07fe2a2a:  push   %esi
0x07fe2a2b:  push   %ebx
0x07fe2a2c:  sub    $0x10,%esp
0x07fe2a2f:  mov    %eax,%esi
0x07fe2a31:  movb   $0x0,0xe(%esp)
0x07fe2a36:  movb   $0x0,0xf(%esp)
0x07fe2a3b:  mov    $0x60,%ebx
0x07fe2a40:  mov    0x7fee407(%ebx),%dl
0x07fe2a46:  movzbl %dl,%edi
0x07fe2a49:  mov    %edi,%eax
0x07fe2a4b:  sar    $0x3,%eax
0x07fe2a4e:  mov    %dl,%cl
0x07fe2a50:  and    $0x7,%ecx
0x07fe2a53:  mov    $0x1,%edx
0x07fe2a58:  shl    %cl,%edx
0x07fe2a5a:  or     %dl,0xe(%esp,%eax,1)
0x07fe2a5e:  movzwl (%esi),%eax
0x07fe2a61:  mov    %edi,%ecx
0x07fe2a63:  mov    %ebx,%edx
0x07fe2a65:  call   0xf175d

----------------
IN: 
0x000f175d:  push   %edi
0x000f175e:  push   %esi
0x000f175f:  mov    %eax,%esi
0x000f1761:  mov    %edx,%edi
0x000f1763:  mov    %edx,%eax
0x000f1765:  and    $0xfc,%eax
0x000f176a:  or     $0x80000000,%eax
0x000f176f:  shl    $0x8,%esi
0x000f1772:  or     %esi,%eax
0x000f1774:  mov    $0xcf8,%edx
0x000f1779:  out    %eax,(%dx)
0x000f177a:  and    $0x3,%edi
0x000f177d:  lea    0xcfc(%edi),%edx
0x000f1783:  mov    %cl,%al
0x000f1785:  out    %al,(%dx)
0x000f1786:  pop    %esi
0x000f1787:  pop    %edi
0x000f1788:  ret    

----------------
IN: 
0x07fe2a6a:  inc    %ebx
0x07fe2a6b:  cmp    $0x64,%ebx
0x07fe2a6e:  jne    0x7fe2a40

----------------
IN: 
0x07fe2a40:  mov    0x7fee407(%ebx),%dl
0x07fe2a46:  movzbl %dl,%edi
0x07fe2a49:  mov    %edi,%eax
0x07fe2a4b:  sar    $0x3,%eax
0x07fe2a4e:  mov    %dl,%cl
0x07fe2a50:  and    $0x7,%ecx
0x07fe2a53:  mov    $0x1,%edx
0x07fe2a58:  shl    %cl,%edx
0x07fe2a5a:  or     %dl,0xe(%esp,%eax,1)
0x07fe2a5e:  movzwl (%esi),%eax
0x07fe2a61:  mov    %edi,%ecx
0x07fe2a63:  mov    %ebx,%edx
0x07fe2a65:  call   0xf175d

----------------
IN: 
0x07fe2a70:  mov    $0x4d0,%edx
0x07fe2a75:  mov    0xe(%esp),%al
0x07fe2a79:  out    %al,(%dx)
0x07fe2a7a:  movzbl 0xf(%esp),%eax
0x07fe2a7f:  mov    $0xd1,%dl
0x07fe2a81:  out    %al,(%dx)
0x07fe2a82:  mov    %eax,0x8(%esp)
0x07fe2a86:  movzbl 0xe(%esp),%eax
0x07fe2a8b:  mov    %eax,0x4(%esp)
0x07fe2a8f:  movl   $0xf4449,(%esp)
0x07fe2a96:  call   0xf2058

----------------
IN: 
0x07fe2a9b:  add    $0x10,%esp
0x07fe2a9e:  pop    %ebx
0x07fe2a9f:  pop    %esi
0x07fe2aa0:  pop    %edi
0x07fe2aa1:  ret    

----------------
IN: 
0x07fe1efa:  movzwl (%eax),%ecx
0x07fe1efd:  shl    $0x8,%ecx
0x07fe1f00:  or     $0x80000040,%ecx
0x07fe1f06:  mov    $0xcf8,%edx
0x07fe1f0b:  mov    %ecx,%eax
0x07fe1f0d:  out    %eax,(%dx)
0x07fe1f0e:  mov    $0xfc,%dl
0x07fe1f10:  mov    $0xffff8000,%eax
0x07fe1f15:  out    %ax,(%dx)
0x07fe1f17:  mov    $0xf8,%dl
0x07fe1f19:  mov    %ecx,%eax
0x07fe1f1b:  out    %eax,(%dx)
0x07fe1f1c:  mov    $0xfe,%dl
0x07fe1f1e:  mov    $0xffff8000,%eax
0x07fe1f23:  out    %ax,(%dx)
0x07fe1f25:  ret    

----------------
IN: 
0x07fec2f2:  mov    %ebx,%eax
0x07fec2f4:  call   *0x7fefcff

----------------
IN: 
0x07fe10a0:  push   %ebx
0x07fe10a1:  xor    %ecx,%ecx
0x07fe10a3:  jmp    0x7fe10a9

----------------
IN: 
0x07fe10a9:  mov    0x8(%eax),%ebx
0x07fe10ac:  mov    (%eax),%eax
0x07fe10ae:  shr    $0x3,%ax
0x07fe10b2:  and    $0x1f,%eax
0x07fe10b5:  test   %ebx,%ebx
0x07fe10b7:  jne    0x7fe10a5

----------------
IN: 
0x07fe10b9:  lea    -0x1(%ecx,%eax,1),%eax
0x07fe10bd:  lea    -0x1(%edx,%eax,1),%eax
0x07fe10c1:  and    $0x3,%eax
0x07fe10c4:  movzbl 0x7fee467(%eax),%eax
0x07fe10cb:  pop    %ebx
0x07fe10cc:  ret    

----------------
IN: 
0x07fec2fa:  movzbl %al,%ecx
0x07fec2fd:  mov    $0x3c,%edx
0x07fec302:  mov    %esi,%eax
0x07fec304:  call   0xf175d

----------------
IN: 
0x07fe4ea1:  push   %ebx
0x07fe4ea2:  sub    $0xc,%esp
0x07fe4ea5:  movzwl (%eax),%ebx
0x07fe4ea8:  mov    $0x9,%ecx
0x07fe4ead:  mov    $0x3c,%edx
0x07fe4eb2:  mov    %ebx,%eax
0x07fe4eb4:  call   0xf175d

----------------
IN: 
0x07fe4eb9:  mov    $0xb001,%ecx
0x07fe4ebe:  mov    $0x40,%edx
0x07fe4ec3:  mov    %ebx,%eax
0x07fe4ec5:  call   0xf173a

----------------
IN: 
0x07fe4eca:  mov    $0x1,%ecx
0x07fe4ecf:  mov    $0x80,%edx
0x07fe4ed4:  mov    %ebx,%eax
0x07fe4ed6:  call   0xf175d

----------------
IN: 
0x07fe4edb:  mov    $0xb101,%ecx
0x07fe4ee0:  mov    $0x90,%edx
0x07fe4ee5:  mov    %ebx,%eax
0x07fe4ee7:  call   0xf173a

----------------
IN: 
0x07fe4eec:  mov    $0x9,%ecx
0x07fe4ef1:  mov    $0xd2,%edx
0x07fe4ef6:  mov    %ebx,%eax
0x07fe4ef8:  call   0xf175d

----------------
IN: 
0x07fe4efd:  movl   $0xdfb,0x8(%esp)
0x07fe4f05:  movl   $0xb008,0x4(%esp)
0x07fe4f0d:  movl   $0xf46ff,(%esp)
0x07fe4f14:  call   0xf2058

----------------
IN: 
0x07fe4f19:  movw   $0xb008,0xfd248
0x07fe4f22:  movl   $0xdfb,0xfd24c
0x07fe4f2c:  add    $0xc,%esp
0x07fe4f2f:  pop    %ebx
0x07fe4f30:  ret    

----------------
IN: 
0x07fec32e:  mov    %ebp,%eax
0x07fec330:  call   0x7fe0ca5

----------------
IN: 
0x07fec335:  cmpl   $0x0,0xf5df4
0x07fec33c:  jne    0x7fec348

----------------
IN: 
0x07fec33e:  mov    $0xf5c78,%eax
0x07fec343:  call   0xf1cab

----------------
IN: 
0x000f1cab:  push   %esi
0x000f1cac:  push   %ebx
0x000f1cad:  mov    %eax,%esi
0x000f1caf:  mov    0xf5df8,%ebx
0x000f1cb5:  jmp    0xf1cc9

----------------
IN: 
0x000f1cc9:  test   %ebx,%ebx
0x000f1ccb:  jne    0xf1cb7

----------------
IN: 
0x000f1cb7:  xor    %ecx,%ecx
0x000f1cb9:  mov    %ebx,%edx
0x000f1cbb:  mov    %esi,%eax
0x000f1cbd:  call   0xf17ef

----------------
IN: 
0x000f1cc2:  test   %eax,%eax
0x000f1cc4:  je     0xf1ccd

----------------
IN: 
0x000f1cc6:  mov    0x4(%ebx),%ebx
0x000f1cc9:  test   %ebx,%ebx
0x000f1ccb:  jne    0xf1cb7

----------------
IN: 
0x000f19c6:  push   %edi
0x000f19c7:  push   %esi
0x000f19c8:  push   %ebx
0x000f19c9:  mov    %eax,%esi
0x000f19cb:  mov    $0x1237,%edx
0x000f19d0:  mov    $0x8086,%eax
0x000f19d5:  call   0xf17d2

----------------
IN: 
0x000f17d2:  mov    %eax,%ecx
0x000f17d4:  mov    0xf5df8,%eax
0x000f17d9:  jmp    0xf17ea

----------------
IN: 
0x000f17ea:  test   %eax,%eax
0x000f17ec:  jne    0xf17db

----------------
IN: 
0x000f17db:  cmp    %cx,0xc(%eax)
0x000f17df:  jne    0xf17e7

----------------
IN: 
0x000f17e1:  cmp    %dx,0xe(%eax)
0x000f17e5:  je     0xf17ee

----------------
IN: 
0x000f17ee:  ret    

----------------
IN: 
0x000f19da:  mov    %eax,%ebx
0x000f19dc:  test   %eax,%eax
0x000f19de:  je     0xf1a3c

----------------
IN: 
0x000f19e0:  movzwl (%esi),%eax
0x000f19e3:  mov    $0x58,%edx
0x000f19e8:  call   0xf1789

----------------
IN: 
0x000f19ed:  mov    %eax,%edi
0x000f19ef:  test   $0x2000000,%eax
0x000f19f4:  jne    0xf1a3c

----------------
IN: 
0x000f19f6:  movzwl (%ebx),%eax
0x000f19f9:  mov    $0x4a,%ecx
0x000f19fe:  mov    $0x72,%edx
0x000f1a03:  call   0xf175d

----------------
IN: 
0x000f1a08:  call   0xf195a

----------------
IN: 
0x000f195a:  push   %edi
0x000f195b:  push   %esi
0x000f195c:  mov    $0xa8000,%edx
0x000f1961:  mov    $0x38000,%eax
0x000f1966:  mov    $0x2000,%ecx
0x000f196b:  mov    %edx,%edi
0x000f196d:  mov    %eax,%esi
0x000f196f:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f196f:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f1971:  mov    $0xf155d,%ecx
0x000f1976:  sub    $0xf1530,%ecx
0x000f197c:  mov    $0xf1530,%esi
0x000f1981:  mov    %eax,%edi
0x000f1983:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f1983:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f1985:  pop    %esi
0x000f1986:  pop    %edi
0x000f1987:  ret    

----------------
IN: 
0x000f1a0d:  mov    %edi,%ecx
0x000f1a0f:  or     $0x2000000,%ecx
0x000f1a15:  movzwl (%esi),%eax
0x000f1a18:  mov    $0x58,%edx
0x000f1a1d:  call   0xf173a

----------------
IN: 
0x000f1a22:  call   0xf1988

----------------
IN: 
0x000f1988:  mov    $0x1,%al
0x000f198a:  out    %al,$0xb3
0x000f198c:  xor    %eax,%eax
0x000f198e:  out    %al,$0xb2
0x000f1990:  in     $0xb3,%al
0x000f1992:  test   %al,%al
0x000f1994:  jne    0xf1990

----------------
IN: 
0x00038000:  mov    $0x3fefc,%ebx
0x00038006:  addr32 mov (%ebx),%al
0x00038009:  cmp    $0x64,%al
0x0003800b:  je     0x38015

----------------
IN: 
0x0003800d:  mov    $0x3fef8,%ebx
0x00038013:  jmp    0x3801b

----------------
IN: 
0x0003801b:  mov    $0xa0000,%eax
0x00038021:  addr32 mov %eax,(%ebx)
0x00038025:  mov    $0x0,%al
0x00038027:  mov    $0xb3,%dx
0x0003802a:  out    %al,(%dx)
0x0003802b:  rsm    

----------------
IN: 
0x000f1990:  in     $0xb3,%al
0x000f1992:  test   %al,%al
0x000f1994:  jne    0xf1990

----------------
IN: 
0x000f1996:  push   %edi
0x000f1997:  push   %esi
0x000f1998:  mov    $0x38000,%edx
0x000f199d:  mov    $0xa8000,%eax
0x000f19a2:  mov    $0x2000,%ecx
0x000f19a7:  mov    %edx,%edi
0x000f19a9:  mov    %eax,%esi
0x000f19ab:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f19ab:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f19ad:  mov    $0xf157d,%ecx
0x000f19b2:  sub    $0xf155d,%ecx
0x000f19b8:  mov    $0xf155d,%esi
0x000f19bd:  mov    %eax,%edi
0x000f19bf:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f19bf:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f19c1:  wbinvd 
0x000f19c3:  pop    %esi
0x000f19c4:  pop    %edi
0x000f19c5:  ret    

----------------
IN: 
0x000f1a27:  movzwl (%ebx),%eax
0x000f1a2a:  mov    $0xa,%ecx
0x000f1a2f:  mov    $0x72,%edx
0x000f1a34:  pop    %ebx
0x000f1a35:  pop    %esi
0x000f1a36:  pop    %edi
0x000f1a37:  jmp    0xf175d

----------------
IN: 
0x000f1ccd:  mov    %ebx,%eax
0x000f1ccf:  pop    %ebx
0x000f1cd0:  pop    %esi
0x000f1cd1:  ret    

----------------
IN: 
0x07fec348:  cmpl   $0x0,0xf5df4
0x07fec34f:  jne    0x7fec5c2

----------------
IN: 
0x07fec355:  lea    0x9c(%esp),%eax
0x07fec35c:  mov    %eax,0x4(%esp)
0x07fec360:  lea    0x94(%esp),%eax
0x07fec367:  mov    %eax,(%esp)
0x07fec36a:  lea    0x90(%esp),%ecx
0x07fec371:  lea    0x8c(%esp),%edx
0x07fec378:  mov    $0x1,%eax
0x07fec37d:  call   0xf1683

----------------
IN: 
0x07fec382:  mov    0x9c(%esp),%eax
0x07fec389:  test   $0x10,%ah
0x07fec38c:  je     0x7fec5c2

----------------
IN: 
0x07fec5c2:  mov    0xf5df4,%eax
0x07fec5c7:  test   %eax,%eax
0x07fec5c9:  je     0x7fec6cb

----------------
IN: 
0x07fec6cb:  mov    $0xb8,%al
0x07fec6cd:  out    %al,$0x70
0x07fec6cf:  in     $0x71,%al
0x07fec6d1:  test   $0x1,%al
0x07fec6d3:  je     0x7fec6df

----------------
IN: 
0x07fec6df:  mov    $0xbd,%al
0x07fec6e1:  out    %al,$0x70
0x07fec6e3:  in     $0x71,%al
0x07fec6e5:  movzbl %al,%edx
0x07fec6e8:  mov    $0xb8,%al
0x07fec6ea:  out    %al,$0x70
0x07fec6ec:  in     $0x71,%al
0x07fec6ee:  mov    %eax,%ecx
0x07fec6f0:  and    $0xf0,%ecx
0x07fec6f6:  shl    $0x4,%ecx
0x07fec6f9:  or     %edx,%ecx
0x07fec6fb:  mov    $0x270f,%edi
0x07fec700:  mov    $0x270f,%esi
0x07fec705:  mov    $0x270f,%ebx
0x07fec70a:  mov    $0x270f,%ebp
0x07fec70f:  mov    $0x65,%edx
0x07fec714:  mov    %ecx,%eax
0x07fec716:  and    $0xf,%eax
0x07fec719:  shr    $0x4,%ecx
0x07fec71c:  cmp    $0x2,%eax
0x07fec71f:  je     0x7fec738

----------------
IN: 
0x07fec738:  mov    %edx,%edi
0x07fec73a:  jmp    0x7fec742

----------------
IN: 
0x07fec742:  inc    %edx
0x07fec743:  cmp    $0x68,%edx
0x07fec746:  jne    0x7fec714

----------------
IN: 
0x07fec714:  mov    %ecx,%eax
0x07fec716:  and    $0xf,%eax
0x07fec719:  shr    $0x4,%ecx
0x07fec71c:  cmp    $0x2,%eax
0x07fec71f:  je     0x7fec738

----------------
IN: 
0x07fec721:  ja     0x7fec728

----------------
IN: 
0x07fec723:  dec    %eax
0x07fec724:  jne    0x7fec742

----------------
IN: 
0x07fec726:  jmp    0x7fec734

----------------
IN: 
0x07fec734:  mov    %edx,%ebp
0x07fec736:  jmp    0x7fec742

----------------
IN: 
0x07fec728:  cmp    $0x3,%eax
0x07fec72b:  je     0x7fec73c

----------------
IN: 
0x07fec73c:  mov    %edx,%esi
0x07fec73e:  jmp    0x7fec742

----------------
IN: 
0x07fec748:  mov    %ebp,0x7fefd23
0x07fec74e:  mov    %edi,0x7fefd1b
0x07fec754:  mov    %esi,0x7fefd1f
0x07fec75a:  mov    %ebx,0x7fefd17
0x07fec760:  xor    %dl,%dl
0x07fec762:  mov    $0xf56a5,%eax
0x07fec767:  call   0x7fe2e3b

----------------
IN: 
0x07fe2e3b:  push   %ebp
0x07fe2e3c:  push   %edi
0x07fe2e3d:  push   %esi
0x07fe2e3e:  push   %ebx
0x07fe2e3f:  mov    %edx,%ebp
0x07fe2e41:  call   0xf18cb

----------------
IN: 
0x000f1709:  xor    %eax,%eax
0x000f170b:  pop    %edx
0x000f170c:  pop    %ebx
0x000f170d:  pop    %esi
0x000f170e:  ret    

----------------
IN: 
0x07fe2e46:  mov    %eax,%edi
0x07fe2e48:  test   %eax,%eax
0x07fe2e4a:  je     0x7fe2e9b

----------------
IN: 
0x07fe2e4c:  mov    0x84(%eax),%esi
0x07fe2e52:  test   %esi,%esi
0x07fe2e54:  je     0x7fe2e9b

----------------
IN: 
0x07fe2e9b:  xor    %ebx,%ebx
0x07fe2e9d:  mov    %ebx,%eax
0x07fe2e9f:  pop    %ebx
0x07fe2ea0:  pop    %esi
0x07fe2ea1:  pop    %edi
0x07fe2ea2:  pop    %ebp
0x07fe2ea3:  ret    

----------------
IN: 
0x07fec76c:  mov    %eax,%ebx
0x07fec76e:  mov    %eax,%edx
0x07fec770:  mov    $0x1,%eax
0x07fec775:  test   %ebx,%ebx
0x07fec777:  jne    0x7fec787

----------------
IN: 
0x07fec779:  jmp    0x7fec7f0

----------------
IN: 
0x07fec7f0:  lea    0x9c(%esp),%eax
0x07fec7f7:  mov    %eax,0x4(%esp)
0x07fec7fb:  lea    0x98(%esp),%eax
0x07fec802:  mov    %eax,(%esp)
0x07fec805:  lea    0x94(%esp),%ecx
0x07fec80c:  lea    0x90(%esp),%edx
0x07fec813:  mov    $0x1,%eax
0x07fec818:  call   0xf1683

----------------
IN: 
0x07fec81d:  cmpl   $0x0,0x90(%esp)
0x07fec825:  je     0x7fec831

----------------
IN: 
0x07fec827:  testb  $0x2,0x9d(%esp)
0x07fec82f:  jne    0x7fec856

----------------
IN: 
0x07fec856:  movzbl 0x97(%esp),%ecx
0x07fec85e:  mov    %ecx,%edx
0x07fec860:  shr    $0x5,%edx
0x07fec863:  mov    $0x1,%eax
0x07fec868:  shl    %cl,%eax
0x07fec86a:  or     %eax,0xfd098(,%edx,4)
0x07fec871:  movl   $0x1,0xfd0bc
0x07fec87b:  mov    0x10000,%esi
0x07fec881:  mov    0x10004,%edi
0x07fec887:  mov    $0x6450,%eax
0x07fec88c:  shl    $0x8,%eax
0x07fec88f:  or     $0xea,%al
0x07fec891:  mov    %eax,0x10000
0x07fec896:  movl   $0xf0,0x10004
0x07fec8a0:  mov    0xfee000f0,%eax
0x07fec8a5:  or     $0x1,%ah
0x07fec8a8:  mov    %eax,0xfee000f0
0x07fec8ad:  movl   $0x8700,0xfee00350
0x07fec8b7:  movl   $0x8400,0xfee00360
0x07fec8c1:  movl   $0xc4500,0xfee00300
0x07fec8cb:  movl   $0xc4610,0xfee00300
0x07fec8d5:  mov    $0xdf,%al
0x07fec8d7:  out    %al,$0x70
0x07fec8d9:  in     $0x71,%al
0x07fec8db:  movzbl %al,%ebx
0x07fec8de:  inc    %ebx
0x07fec8df:  jmp    0x7fec8e6

----------------
IN: 
0x07fec8e6:  mov    0xfd0bc,%eax
0x07fec8eb:  cmp    %eax,%ebx
0x07fec8ed:  jne    0x7fec8e1

----------------
IN: 
0x07fec8ef:  mov    %esi,0x10000
0x07fec8f5:  mov    %edi,0x10004
0x07fec8fb:  xor    %eax,%eax
0x07fec8fd:  cmpl   $0x0,0x7fefe7b
0x07fec904:  je     0x7fec927

----------------
IN: 
0x07fec906:  mov    $0x510,%edx
0x07fec90b:  mov    $0xf,%al
0x07fec90d:  out    %ax,(%dx)
0x07fec90f:  mov    $0x2,%ecx
0x07fec914:  lea    0x8a(%esp),%edi
0x07fec91b:  mov    $0x11,%dl
0x07fec91d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fec91d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fec91f:  movzwl 0x8a(%esp),%eax
0x07fec927:  mov    %eax,0xfd0b8
0x07fec92c:  test   %eax,%eax
0x07fec92e:  je     0x7fec938

----------------
IN: 
0x07fec930:  cmp    0xfd0bc,%eax
0x07fec936:  jae    0x7fec942

----------------
IN: 
0x07fec942:  mov    0xfd0bc,%eax
0x07fec947:  mov    0xfd0b8,%edx
0x07fec94d:  mov    %edx,0x8(%esp)
0x07fec951:  mov    %eax,0x4(%esp)
0x07fec955:  movl   $0xf56d8,(%esp)
0x07fec95c:  call   0xf2058

----------------
IN: 
0x07fec961:  movl   $0xfec3a,0xfcfc4
0x07fec96b:  mov    0xfcfca,%bl
0x07fec971:  mov    $0x10,%edx
0x07fec976:  mov    $0xfcfc0,%eax
0x07fec97b:  call   0xf1a9c

----------------
IN: 
0x000f1a9c:  push   %ebx
0x000f1a9d:  xor    %ebx,%ebx
0x000f1a9f:  xor    %ecx,%ecx
0x000f1aa1:  jmp    0xf1aa7

----------------
IN: 
0x000f1aa7:  cmp    %edx,%ecx
0x000f1aa9:  jne    0xf1aa3

----------------
IN: 
0x000f1aa3:  add    (%eax,%ecx,1),%bl
0x000f1aa6:  inc    %ecx
0x000f1aa7:  cmp    %edx,%ecx
0x000f1aa9:  jne    0xf1aa3

----------------
IN: 
0x000f1aab:  mov    %bl,%al
0x000f1aad:  pop    %ebx
0x000f1aae:  ret    

----------------
IN: 
0x07fec980:  sub    %eax,%ebx
0x07fec982:  mov    %bl,0xfcfca
0x07fec988:  movl   $0x4d4d5024,0xfd390
0x07fec992:  mov    $0xfc5d3,%eax
0x07fec997:  mov    %ax,0xfd397
0x07fec99d:  mov    0xfd396,%bl
0x07fec9a3:  mov    $0x10,%edx
0x07fec9a8:  mov    $0xfd390,%eax
0x07fec9ad:  call   0xf1a9c

----------------
IN: 
0x07fec9b2:  sub    %eax,%ebx
0x07fec9b4:  mov    %bl,0xfd396
0x07fec9ba:  mov    $0xfc620,%eax
0x07fec9bf:  mov    %ax,0xfd07d
0x07fec9c5:  mov    $0xfc61c,%eax
0x07fec9ca:  mov    %ax,0xfd081
0x07fec9d0:  mov    0xfd078,%bl
0x07fec9d6:  mov    $0x21,%edx
0x07fec9db:  mov    $0xfd070,%eax
0x07fec9e0:  call   0xf1a9c

----------------
IN: 
0x07fec9e5:  sub    %eax,%ebx
0x07fec9e7:  mov    %bl,0xfd078
0x07fec9ed:  movb   $0x10,0x496
0x07fec9f4:  movw   $0x1e,0x41a
0x07fec9fd:  movw   $0x1e,0x41c
0x07feca06:  movw   $0x1e,0x480
0x07feca0f:  movw   $0x3e,0x482
0x07feca18:  orw    $0x4,0x410
0x07feca20:  cmpl   $0x0,0xf5df4
0x07feca27:  je     0x7feccb7

----------------
IN: 
0x07feccb7:  movl   $0x52495024,0xfcfe0
0x07feccc1:  mov    0xfcfff,%bl
0x07feccc7:  mov    $0x80,%edx
0x07fecccc:  mov    $0xfcfe0,%eax
0x07feccd1:  call   0xf1a9c

----------------
IN: 
0x07feccd6:  sub    %eax,%ebx
0x07feccd8:  mov    %bl,0xfcfff
0x07feccde:  movl   $0xfcfe0,0xfd060
0x07fecce8:  mov    $0x8000,%eax
0x07fecced:  call   0x7fe0c38

----------------
IN: 
0x07feccf2:  mov    %eax,%ebp
0x07feccf4:  test   %eax,%eax
0x07feccf6:  jne    0x7fecd0c

----------------
IN: 
0x07fecd0c:  mov    $0x2c,%ecx
0x07fecd11:  xor    %edx,%edx
0x07fecd13:  call   0xf172f

----------------
IN: 
0x07fecd18:  movl   $0x504d4350,0x0(%ebp)
0x07fecd1f:  movb   $0x4,0x6(%ebp)
0x07fecd23:  movl   $0x48434f42,0x8(%ebp)
0x07fecd2a:  movl   $0x55504353,0xc(%ebp)
0x07fecd31:  lea    0x10(%ebp),%eax
0x07fecd34:  mov    $0xf57ae,%esi
0x07fecd39:  mov    $0x3,%ecx
0x07fecd3e:  mov    %eax,%edi
0x07fecd40:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fecd40:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fecd42:  movl   $0xfee00000,0x24(%ebp)
0x07fecd49:  lea    0x9c(%esp),%eax
0x07fecd50:  mov    %eax,0x4(%esp)
0x07fecd54:  lea    0x98(%esp),%eax
0x07fecd5b:  mov    %eax,(%esp)
0x07fecd5e:  lea    0x94(%esp),%ecx
0x07fecd65:  lea    0x90(%esp),%edx
0x07fecd6c:  mov    $0x1,%eax
0x07fecd71:  call   0xf1683

----------------
IN: 
0x07fecd76:  cmpl   $0x0,0x90(%esp)
0x07fecd7e:  jne    0x7fecd96

----------------
IN: 
0x07fecd96:  mov    $0x1,%edi
0x07fecd9b:  testb  $0x10,0x9f(%esp)
0x07fecda3:  je     0x7fecdb4

----------------
IN: 
0x07fecdb4:  mov    0xfee00030,%eax
0x07fecdb9:  mov    %al,0x50(%esp)
0x07fecdbd:  lea    0x2c(%ebp),%esi
0x07fecdc0:  mov    %esi,0x48(%esp)
0x07fecdc4:  mov    %esi,%ebx
0x07fecdc6:  xor    %esi,%esi
0x07fecdc8:  jmp    0x7fece1e

----------------
IN: 
0x07fece1e:  cmp    0xfd0b8,%esi
0x07fece24:  jb     0x7fecdca

----------------
IN: 
0x07fecdca:  mov    $0x14,%ecx
0x07fecdcf:  xor    %edx,%edx
0x07fecdd1:  mov    %ebx,%eax
0x07fecdd3:  call   0xf172f

----------------
IN: 
0x07fecdd8:  movb   $0x0,(%ebx)
0x07fecddb:  mov    %esi,%eax
0x07fecddd:  mov    %al,0x1(%ebx)
0x07fecde0:  mov    0x50(%esp),%dl
0x07fecde4:  mov    %dl,0x2(%ebx)
0x07fecde7:  mov    %esi,%eax
0x07fecde9:  and    $0xff,%eax
0x07fecdee:  call   0x7fe0d8a

----------------
IN: 
0x07fe0d8a:  mov    %eax,%edx
0x07fe0d8c:  shr    $0x5,%edx
0x07fe0d8f:  mov    %al,%cl
0x07fe0d91:  and    $0x1f,%ecx
0x07fe0d94:  mov    0xfd098(,%edx,4),%eax
0x07fe0d9b:  shr    %cl,%eax
0x07fe0d9d:  and    $0x1,%eax
0x07fe0da0:  ret    

----------------
IN: 
0x07fecdf3:  test   %eax,%eax
0x07fecdf5:  setne  %dl
0x07fecdf8:  cmp    $0x1,%esi
0x07fecdfb:  sbb    %eax,%eax
0x07fecdfd:  and    $0x2,%eax
0x07fece00:  or     %edx,%eax
0x07fece02:  mov    %al,0x3(%ebx)
0x07fece05:  mov    0x90(%esp),%eax
0x07fece0c:  mov    %eax,0x4(%ebx)
0x07fece0f:  mov    0x9c(%esp),%eax
0x07fece16:  mov    %eax,0x8(%ebx)
0x07fece19:  add    $0x14,%ebx
0x07fece1c:  add    %edi,%esi
0x07fece1e:  cmp    0xfd0b8,%esi
0x07fece24:  jb     0x7fecdca

----------------
IN: 
0x07fece26:  mov    %ebx,0x58(%esp)
0x07fece2a:  mov    %ebx,%eax
0x07fece2c:  sub    0x48(%esp),%eax
0x07fece30:  sar    $0x2,%eax
0x07fece33:  imul   $0xcccccccd,%eax,%eax
0x07fece39:  mov    %eax,0x60(%esp)
0x07fece3d:  mov    0xf5df8,%esi
0x07fece43:  or     $0xffffffff,%edi
0x07fece46:  jmp    0x7fece8d

----------------
IN: 
0x07fece8d:  test   %esi,%esi
0x07fece8f:  jne    0x7fece48

----------------
IN: 
0x07fece48:  mov    (%esi),%ecx
0x07fece4a:  shr    $0x8,%cx
0x07fece4e:  mov    %cx,0x48(%esp)
0x07fece53:  movzbl %cl,%eax
0x07fece56:  mov    %eax,0x50(%esp)
0x07fece5a:  cmp    %edi,%eax
0x07fece5c:  je     0x7fece86

----------------
IN: 
0x07fece5e:  mov    $0x8,%ecx
0x07fece63:  xor    %edx,%edx
0x07fece65:  mov    %ebx,%eax
0x07fece67:  call   0xf172f

----------------
IN: 
0x07fece6c:  movb   $0x1,(%ebx)
0x07fece6f:  mov    0x48(%esp),%dl
0x07fece73:  mov    %dl,0x1(%ebx)
0x07fece76:  movl   $0x20494350,0x2(%ebx)
0x07fece7d:  movw   $0x2020,0x6(%ebx)
0x07fece83:  add    $0x8,%ebx
0x07fece86:  mov    0x4(%esi),%esi
0x07fece89:  mov    0x50(%esp),%edi
0x07fece8d:  test   %esi,%esi
0x07fece8f:  jne    0x7fece48

----------------
IN: 
0x07fece86:  mov    0x4(%esi),%esi
0x07fece89:  mov    0x50(%esp),%edi
0x07fece8d:  test   %esi,%esi
0x07fece8f:  jne    0x7fece48

----------------
IN: 
0x07fece91:  mov    $0x8,%ecx
0x07fece96:  xor    %edx,%edx
0x07fece98:  mov    %ebx,%eax
0x07fece9a:  call   0xf172f

----------------
IN: 
0x07fece9f:  movb   $0x1,(%ebx)
0x07fecea2:  lea    0x1(%edi),%ecx
0x07fecea5:  mov    %cl,0x50(%esp)
0x07fecea9:  mov    %cl,0x1(%ebx)
0x07feceac:  movl   $0x20415349,0x2(%ebx)
0x07feceb3:  movw   $0x2020,0x6(%ebx)
0x07feceb9:  lea    0x8(%ebx),%eax
0x07fecebc:  mov    %eax,%esi
0x07fecebe:  sub    0x58(%esp),%esi
0x07fecec2:  sar    $0x3,%esi
0x07fecec5:  add    0x60(%esp),%esi
0x07fecec9:  mov    $0x8,%ecx
0x07fecece:  xor    %edx,%edx
0x07feced0:  call   0xf172f

----------------
IN: 
0x07feced5:  movb   $0x2,0x8(%ebx)
0x07feced9:  movb   $0x0,0x9(%ebx)
0x07fecedd:  movb   $0x11,0xa(%ebx)
0x07fecee1:  movb   $0x1,0xb(%ebx)
0x07fecee5:  movl   $0xfec00000,0xc(%ebx)
0x07feceec:  inc    %esi
0x07feceed:  mov    %esi,0x78(%esp)
0x07fecef1:  add    $0x10,%ebx
0x07fecef4:  mov    %ebx,0x6c(%esp)
0x07fecef8:  mov    0xf5df8,%esi
0x07fecefe:  movw   $0x0,0x48(%esp)
0x07fecf05:  movw   $0x0,0x68(%esp)
0x07fecf0c:  or     $0xffffffff,%ecx
0x07fecf0f:  jmp    0x7fecfee

----------------
IN: 
0x07fecfee:  test   %esi,%esi
0x07fecff0:  jne    0x7fecf14

----------------
IN: 
0x07fecf14:  movzwl (%esi),%edi
0x07fecf17:  mov    %di,0x58(%esp)
0x07fecf1c:  mov    $0x3d,%edx
0x07fecf21:  mov    %edi,%eax
0x07fecf23:  mov    %ecx,0x44(%esp)
0x07fecf27:  call   0xf17a8

----------------
IN: 
0x07fecf2c:  mov    %al,0x60(%esp)
0x07fecf30:  movzbl %al,%eax
0x07fecf33:  mov    %eax,0x80(%esp)
0x07fecf3a:  mov    $0x3c,%edx
0x07fecf3f:  mov    %edi,%eax
0x07fecf41:  call   0xf17a8

----------------
IN: 
0x07fecf46:  mov    %al,0x74(%esp)
0x07fecf4a:  mov    0x44(%esp),%ecx
0x07fecf4e:  mov    %ecx,%edi
0x07fecf50:  cmpl   $0x0,0x80(%esp)
0x07fecf58:  je     0x7fecfe9

----------------
IN: 
0x07fecfe9:  mov    0x4(%esi),%esi
0x07fecfec:  mov    %edi,%ecx
0x07fecfee:  test   %esi,%esi
0x07fecff0:  jne    0x7fecf14

----------------
IN: 
0x07fecf5e:  mov    0x58(%esp),%edi
0x07fecf62:  and    $0xfff8,%edi
0x07fecf68:  xor    %eax,%eax
0x07fecf6a:  cmp    %edi,%ecx
0x07fecf6c:  sete   %al
0x07fecf6f:  neg    %eax
0x07fecf71:  and    %ax,0x48(%esp)
0x07fecf76:  movzwl 0x48(%esp),%eax
0x07fecf7b:  mov    0x60(%esp),%cl
0x07fecf7f:  bt     %ecx,%eax
0x07fecf82:  jb     0x7fecfe9

----------------
IN: 
0x07fecf84:  mov    $0x1,%eax
0x07fecf89:  mov    %eax,%edx
0x07fecf8b:  shl    %cl,%edx
0x07fecf8d:  or     %dx,0x48(%esp)
0x07fecf92:  mov    0x74(%esp),%cl
0x07fecf96:  shl    %cl,%eax
0x07fecf98:  or     %ax,0x68(%esp)
0x07fecf9d:  mov    $0x8,%ecx
0x07fecfa2:  xor    %edx,%edx
0x07fecfa4:  mov    %ebx,%eax
0x07fecfa6:  call   0xf172f

----------------
IN: 
0x07fecfab:  movb   $0x3,(%ebx)
0x07fecfae:  movb   $0x0,0x1(%ebx)
0x07fecfb2:  movw   $0x1,0x2(%ebx)
0x07fecfb8:  mov    0x58(%esp),%eax
0x07fecfbc:  shr    $0x8,%ax
0x07fecfc0:  mov    %al,0x4(%ebx)
0x07fecfc3:  mov    0x60(%esp),%al
0x07fecfc7:  dec    %eax
0x07fecfc8:  mov    0x58(%esp),%edx
0x07fecfcc:  shr    $0x3,%dx
0x07fecfd0:  and    $0x1f,%edx
0x07fecfd3:  shl    $0x2,%edx
0x07fecfd6:  or     %edx,%eax
0x07fecfd8:  mov    %al,0x5(%ebx)
0x07fecfdb:  movb   $0x0,0x6(%ebx)
0x07fecfdf:  mov    0x74(%esp),%cl
0x07fecfe3:  mov    %cl,0x7(%ebx)
0x07fecfe6:  add    $0x8,%ebx
0x07fecfe9:  mov    0x4(%esi),%esi
0x07fecfec:  mov    %edi,%ecx
0x07fecfee:  test   %esi,%esi
0x07fecff0:  jne    0x7fecf14

----------------
IN: 
0x07fecff6:  movzwl 0x68(%esp),%edi
0x07fecffb:  mov    %edi,0x48(%esp)
0x07fecfff:  mov    $0x8,%ecx
0x07fed004:  xor    %edx,%edx
0x07fed006:  mov    %ebx,%eax
0x07fed008:  call   0xf172f

----------------
IN: 
0x07fed00d:  mov    0x48(%esp),%eax
0x07fed011:  bt     %esi,%eax
0x07fed014:  jb     0x7fed07a

----------------
IN: 
0x07fed016:  movb   $0x3,(%ebx)
0x07fed019:  movb   $0x0,0x1(%ebx)
0x07fed01d:  movw   $0x0,0x2(%ebx)
0x07fed023:  mov    0x50(%esp),%dl
0x07fed027:  mov    %dl,0x4(%ebx)
0x07fed02a:  mov    %esi,%ecx
0x07fed02c:  mov    %cl,0x5(%ebx)
0x07fed02f:  movb   $0x0,0x6(%ebx)
0x07fed033:  mov    %cl,0x7(%ebx)
0x07fed036:  cmpl   $0x0,0x7fefe7b
0x07fed03d:  je     0x7fed077

----------------
IN: 
0x07fed03f:  mov    $0x510,%edx
0x07fed044:  mov    $0xffff8002,%eax
0x07fed049:  out    %ax,(%dx)
0x07fed04b:  mov    $0x1,%ecx
0x07fed050:  lea    0x8c(%esp),%edi
0x07fed057:  mov    $0x11,%dl
0x07fed059:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fed059:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fed05b:  cmpb   $0x0,0x8c(%esp)
0x07fed063:  je     0x7fed077

----------------
IN: 
0x07fed065:  test   %esi,%esi
0x07fed067:  jne    0x7fed06f

----------------
IN: 
0x07fed069:  movb   $0x2,0x7(%ebx)
0x07fed06d:  jmp    0x7fed077

----------------
IN: 
0x07fed077:  add    $0x8,%ebx
0x07fed07a:  inc    %esi
0x07fed07b:  cmp    $0x10,%esi
0x07fed07e:  jne    0x7fecfff

----------------
IN: 
0x07fecfff:  mov    $0x8,%ecx
0x07fed004:  xor    %edx,%edx
0x07fed006:  mov    %ebx,%eax
0x07fed008:  call   0xf172f

----------------
IN: 
0x07fed06f:  cmp    $0x2,%esi
0x07fed072:  jne    0x7fed077

----------------
IN: 
0x07fed074:  sub    $0x8,%ebx
0x07fed077:  add    $0x8,%ebx
0x07fed07a:  inc    %esi
0x07fed07b:  cmp    $0x10,%esi
0x07fed07e:  jne    0x7fecfff

----------------
IN: 
0x07fed07a:  inc    %esi
0x07fed07b:  cmp    $0x10,%esi
0x07fed07e:  jne    0x7fecfff

----------------
IN: 
0x07fed084:  movb   $0x4,(%ebx)
0x07fed087:  movb   $0x3,0x1(%ebx)
0x07fed08b:  movw   $0x0,0x2(%ebx)
0x07fed091:  mov    0x50(%esp),%al
0x07fed095:  mov    %al,0x4(%ebx)
0x07fed098:  movb   $0x0,0x5(%ebx)
0x07fed09c:  movb   $0x0,0x6(%ebx)
0x07fed0a0:  movb   $0x0,0x7(%ebx)
0x07fed0a4:  movb   $0x4,0x8(%ebx)
0x07fed0a8:  movb   $0x1,0x9(%ebx)
0x07fed0ac:  movw   $0x0,0xa(%ebx)
0x07fed0b2:  mov    %al,0xc(%ebx)
0x07fed0b5:  movb   $0x0,0xd(%ebx)
0x07fed0b9:  movb   $0xff,0xe(%ebx)
0x07fed0bd:  movb   $0x1,0xf(%ebx)
0x07fed0c1:  add    $0x10,%ebx
0x07fed0c4:  mov    %ebx,%ecx
0x07fed0c6:  sub    %ebp,%ecx
0x07fed0c8:  mov    %ecx,0x48(%esp)
0x07fed0cc:  sub    0x6c(%esp),%ebx
0x07fed0d0:  sar    $0x3,%ebx
0x07fed0d3:  add    0x78(%esp),%ebx
0x07fed0d7:  mov    %bx,0x22(%ebp)
0x07fed0db:  mov    %cx,0x4(%ebp)
0x07fed0df:  mov    %ecx,%edx
0x07fed0e1:  mov    %ebp,%eax
0x07fed0e3:  call   0xf1a9c

----------------
IN: 
0x07fed0e8:  sub    %al,0x7(%ebp)
0x07fed0eb:  mov    0x48(%esp),%eax
0x07fed0ef:  call   0x7fe0c1f

----------------
IN: 
0x07fe0c1f:  push   %ecx
0x07fe0c20:  movl   $0x10,(%esp)
0x07fe0c27:  mov    %eax,%ecx
0x07fe0c29:  or     $0xffffffff,%edx
0x07fe0c2c:  mov    $0x7fefe77,%eax
0x07fe0c31:  call   0x7fe0b6f

----------------
IN: 
0x07fe0c36:  pop    %edx
0x07fe0c37:  ret    

----------------
IN: 
0x07fed0f4:  mov    %eax,0x50(%esp)
0x07fed0f8:  mov    $0x10,%eax
0x07fed0fd:  call   0x7fe0c1f

----------------
IN: 
0x07fed102:  mov    %eax,%ebx
0x07fed104:  test   %eax,%eax
0x07fed106:  je     0x7fed10f

----------------
IN: 
0x07fed108:  cmpl   $0x0,0x50(%esp)
0x07fed10d:  jne    0x7fed137

----------------
IN: 
0x07fed137:  mov    0x50(%esp),%edi
0x07fed13b:  mov    %ebp,%esi
0x07fed13d:  mov    0x48(%esp),%ecx
0x07fed141:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fed141:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fed143:  mov    %ebp,%eax
0x07fed145:  call   0x7fe0ca5

----------------
IN: 
0x07fed14a:  mov    $0x10,%ecx
0x07fed14f:  xor    %edx,%edx
0x07fed151:  mov    %ebx,%eax
0x07fed153:  call   0xf172f

----------------
IN: 
0x07fed158:  movl   $0x5f504d5f,(%ebx)
0x07fed15e:  mov    0x50(%esp),%eax
0x07fed162:  mov    %eax,0x4(%ebx)
0x07fed165:  movb   $0x1,0x8(%ebx)
0x07fed169:  movb   $0x4,0x9(%ebx)
0x07fed16d:  mov    $0x10,%edx
0x07fed172:  mov    %ebx,%eax
0x07fed174:  call   0xf1a9c

----------------
IN: 
0x07fed179:  sub    %al,0xa(%ebx)
0x07fed17c:  mov    0x48(%esp),%ecx
0x07fed180:  mov    %ecx,0xc(%esp)
0x07fed184:  mov    0x50(%esp),%eax
0x07fed188:  mov    %eax,0x8(%esp)
0x07fed18c:  mov    %ebx,0x4(%esp)
0x07fed190:  movl   $0xf57bb,(%esp)
0x07fed197:  call   0xf2058

----------------
IN: 
0x07fed19c:  call   0x7fe3714

----------------
IN: 
0x07fe3714:  push   %ebp
0x07fe3715:  mov    %esp,%ebp
0x07fe3717:  push   %edi
0x07fe3718:  push   %esi
0x07fe3719:  push   %ebx
0x07fe371a:  and    $0xfffffff8,%esp
0x07fe371d:  sub    $0x38,%esp
0x07fe3720:  mov    $0x8000,%eax
0x07fe3725:  call   0x7fe0bf1

----------------
IN: 
0x07fe372a:  mov    %eax,0x1c(%esp)
0x07fe372e:  test   %eax,%eax
0x07fe3730:  jne    0x7fe3745

----------------
IN: 
0x07fe3745:  movl   $0x0,0x2c(%esp)
0x07fe374d:  movl   $0x0,0x30(%esp)
0x07fe3755:  mov    0x1c(%esp),%eax
0x07fe3759:  mov    %eax,0x34(%esp)
0x07fe375d:  add    $0x7ffc,%eax
0x07fe3762:  mov    %eax,0x24(%esp)
0x07fe3766:  mov    %eax,0x4(%esp)
0x07fe376a:  lea    0x30(%esp),%eax
0x07fe376e:  mov    %eax,(%esp)
0x07fe3771:  lea    0x2c(%esp),%ecx
0x07fe3775:  lea    0x34(%esp),%edx
0x07fe3779:  xor    %eax,%eax
0x07fe377b:  call   0x7fe2ea4

----------------
IN: 
0x07fe2ea4:  push   %ebp
0x07fe2ea5:  mov    %esp,%ebp
0x07fe2ea7:  push   %edi
0x07fe2ea8:  push   %esi
0x07fe2ea9:  push   %ebx
0x07fe2eaa:  and    $0xfffffff8,%esp
0x07fe2ead:  sub    $0x20,%esp
0x07fe2eb0:  mov    %eax,0x14(%esp)
0x07fe2eb4:  mov    %edx,%ebx
0x07fe2eb6:  mov    %ecx,0x4(%esp)
0x07fe2eba:  mov    (%edx),%eax
0x07fe2ebc:  mov    %eax,(%esp)
0x07fe2ebf:  mov    0x14(%esp),%esi
0x07fe2ec3:  sar    $0x6,%esi
0x07fe2ec6:  and    $0x3,%esi
0x07fe2ec9:  mov    0x14(%esp),%edx
0x07fe2ecd:  and    $0x3f,%edx
0x07fe2ed0:  mov    %edx,0x8(%esp)
0x07fe2ed4:  mov    0x7fefe97(,%esi,8),%eax
0x07fe2edb:  mov    0x7fefe9b(,%esi,8),%edx
0x07fe2ee2:  mov    0x8(%esp),%cl
0x07fe2ee6:  shrd   %cl,%edx,%eax
0x07fe2ee9:  shr    %cl,%edx
0x07fe2eeb:  test   $0x20,%cl
0x07fe2eee:  je     0x7fe2ef4

----------------
IN: 
0x07fe2ef4:  and    $0x1,%eax
0x07fe2ef7:  test   %eax,%eax
0x07fe2ef9:  jne    0x7fe3042

----------------
IN: 
0x07fe2eff:  cmpl   $0x7f,0x14(%esp)
0x07fe2f04:  jne    0x7fe2f0d

----------------
IN: 
0x07fe2f0d:  call   0x7fe1c62

----------------
IN: 
0x07fe1c62:  xor    %eax,%eax
0x07fe1c64:  cmpl   $0x0,0x7fefe7b
0x07fe1c6b:  je     0x7fe1c8f

----------------
IN: 
0x07fe1c6d:  push   %edi
0x07fe1c6e:  push   %edi
0x07fe1c6f:  mov    $0x510,%edx
0x07fe1c74:  mov    $0xffff8001,%eax
0x07fe1c79:  out    %ax,(%dx)
0x07fe1c7b:  mov    $0x2,%ecx
0x07fe1c80:  lea    0x2(%esp),%edi
0x07fe1c84:  mov    $0x11,%dl
0x07fe1c86:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe1c86:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe1c88:  mov    0x2(%esp),%ax
0x07fe1c8d:  pop    %edx
0x07fe1c8e:  pop    %edi
0x07fe1c8f:  ret    

----------------
IN: 
0x07fe2f12:  movzwl %ax,%eax
0x07fe2f15:  mov    %eax,0x10(%esp)
0x07fe2f19:  jmp    0x7fe3009

----------------
IN: 
0x07fe3009:  cmpl   $0x0,0x10(%esp)
0x07fe300e:  jne    0x7fe2f1e

----------------
IN: 
0x07fe3014:  mov    (%esp),%eax
0x07fe3017:  cmp    (%ebx),%eax
0x07fe3019:  je     0x7fe2f06

----------------
IN: 
0x07fe2f06:  xor    %eax,%eax
0x07fe2f08:  jmp    0x7fe3047

----------------
IN: 
0x07fe3047:  lea    -0xc(%ebp),%esp
0x07fe304a:  pop    %ebx
0x07fe304b:  pop    %esi
0x07fe304c:  pop    %edi
0x07fe304d:  pop    %ebp
0x07fe304e:  ret    

----------------
IN: 
0x07fe3780:  test   %eax,%eax
0x07fe3782:  jne    0x7fe38f0

----------------
IN: 
0x07fe3788:  mov    0x34(%esp),%ebx
0x07fe378c:  lea    0x18(%ebx),%esi
0x07fe378f:  movb   $0x0,(%ebx)
0x07fe3792:  movb   $0x18,0x1(%ebx)
0x07fe3796:  movw   $0x0,0x2(%ebx)
0x07fe379c:  mov    %esi,%ecx
0x07fe379e:  mov    $0x4,%edx
0x07fe37a3:  call   0x7fe1c90

----------------
IN: 
0x07fe1c90:  push   %ebp
0x07fe1c91:  push   %edi
0x07fe1c92:  push   %esi
0x07fe1c93:  push   %ebx
0x07fe1c94:  sub    $0x10,%esp
0x07fe1c97:  mov    %eax,(%esp)
0x07fe1c9a:  mov    %edx,0x4(%esp)
0x07fe1c9e:  mov    %ecx,%ebp
0x07fe1ca0:  call   0x7fe1c62

----------------
IN: 
0x07fe1ca5:  movzwl %ax,%ebx
0x07fe1ca8:  jmp    0x7fe1d15

----------------
IN: 
0x07fe1d15:  test   %ebx,%ebx
0x07fe1d17:  jne    0x7fe1caa

----------------
IN: 
0x07fe1d19:  xor    %eax,%eax
0x07fe1d1b:  add    $0x10,%esp
0x07fe1d1e:  pop    %ebx
0x07fe1d1f:  pop    %esi
0x07fe1d20:  pop    %edi
0x07fe1d21:  pop    %ebp
0x07fe1d22:  ret    

----------------
IN: 
0x07fe37a8:  test   %eax,%eax
0x07fe37aa:  je     0x7fe37b0

----------------
IN: 
0x07fe37b0:  movl   $0x68636f42,0x18(%ebx)
0x07fe37b7:  movw   $0x73,0x4(%esi)
0x07fe37bd:  lea    0x1e(%ebx),%esi
0x07fe37c0:  movb   $0x1,0x4(%ebx)
0x07fe37c4:  mov    %esi,%ecx
0x07fe37c6:  mov    $0x5,%edx
0x07fe37cb:  xor    %eax,%eax
0x07fe37cd:  call   0x7fe1c90

----------------
IN: 
0x07fe37d2:  test   %eax,%eax
0x07fe37d4:  je     0x7fe37de

----------------
IN: 
0x07fe37de:  movl   $0x68636f42,(%esi)
0x07fe37e4:  movw   $0x73,0x4(%esi)
0x07fe37ea:  add    $0x6,%esi
0x07fe37ed:  mov    %esi,0x28(%esp)
0x07fe37f1:  movb   $0x2,0x5(%ebx)
0x07fe37f5:  movw   $0xe800,0x6(%ebx)
0x07fe37fb:  mov    0x28(%esp),%ecx
0x07fe37ff:  mov    $0x8,%edx
0x07fe3804:  xor    %eax,%eax
0x07fe3806:  call   0x7fe1c90

----------------
IN: 
0x07fe380b:  test   %eax,%eax
0x07fe380d:  je     0x7fe3817

----------------
IN: 
0x07fe3817:  mov    $0xf45b9,%esi
0x07fe381c:  mov    $0xb,%ecx
0x07fe3821:  mov    0x28(%esp),%edi
0x07fe3825:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe3825:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe3827:  mov    0x28(%esp),%esi
0x07fe382b:  add    $0xb,%esi
0x07fe382e:  movb   $0x3,0x8(%ebx)
0x07fe3832:  movb   $0x0,0x9(%ebx)
0x07fe3836:  lea    0xa(%ebx),%edi
0x07fe3839:  mov    %edi,%ecx
0x07fe383b:  mov    $0xa,%edx
0x07fe3840:  xor    %eax,%eax
0x07fe3842:  call   0x7fe1c90

----------------
IN: 
0x07fe3847:  test   %eax,%eax
0x07fe3849:  jne    0x7fe385d

----------------
IN: 
0x07fe384b:  mov    $0x8,%ecx
0x07fe3850:  xor    %edx,%edx
0x07fe3852:  mov    %edi,%eax
0x07fe3854:  call   0xf172f

----------------
IN: 
0x07fe3859:  movb   $0x8,0xa(%ebx)
0x07fe385d:  lea    0x12(%ebx),%ecx
0x07fe3860:  mov    $0x12,%edx
0x07fe3865:  xor    %eax,%eax
0x07fe3867:  call   0x7fe1c90

----------------
IN: 
0x07fe386c:  test   %eax,%eax
0x07fe386e:  jne    0x7fe3878

----------------
IN: 
0x07fe3870:  movb   $0x0,0x12(%ebx)
0x07fe3874:  movb   $0x4,0x13(%ebx)
0x07fe3878:  lea    0x14(%ebx),%ecx
0x07fe387b:  mov    $0x14,%edx
0x07fe3880:  xor    %eax,%eax
0x07fe3882:  call   0x7fe1c90

----------------
IN: 
0x07fe3887:  test   %eax,%eax
0x07fe3889:  jne    0x7fe388f

----------------
IN: 
0x07fe388b:  movb   $0x1,0x14(%ebx)
0x07fe388f:  lea    0x15(%ebx),%ecx
0x07fe3892:  mov    $0x15,%edx
0x07fe3897:  xor    %eax,%eax
0x07fe3899:  call   0x7fe1c90

----------------
IN: 
0x07fe389e:  test   %eax,%eax
0x07fe38a0:  jne    0x7fe38a6

----------------
IN: 
0x07fe38a2:  movb   $0x0,0x15(%ebx)
0x07fe38a6:  lea    0x16(%ebx),%ecx
0x07fe38a9:  mov    $0x16,%edx
0x07fe38ae:  xor    %eax,%eax
0x07fe38b0:  call   0x7fe1c90

----------------
IN: 
0x07fe38b5:  test   %eax,%eax
0x07fe38b7:  jne    0x7fe38bd

----------------
IN: 
0x07fe38b9:  movb   $0xff,0x16(%ebx)
0x07fe38bd:  lea    0x17(%ebx),%ecx
0x07fe38c0:  mov    $0x17,%edx
0x07fe38c5:  xor    %eax,%eax
0x07fe38c7:  call   0x7fe1c90

----------------
IN: 
0x07fe38cc:  test   %eax,%eax
0x07fe38ce:  jne    0x7fe38d4

----------------
IN: 
0x07fe38d0:  movb   $0xff,0x17(%ebx)
0x07fe38d4:  movb   $0x0,(%esi)
0x07fe38d7:  inc    %esi
0x07fe38d8:  incl   0x2c(%esp)
0x07fe38dc:  mov    %esi,%eax
0x07fe38de:  sub    0x34(%esp),%eax
0x07fe38e2:  cmp    0x30(%esp),%eax
0x07fe38e6:  jbe    0x7fe38ec

----------------
IN: 
0x07fe38e8:  mov    %eax,0x30(%esp)
0x07fe38ec:  mov    %esi,0x34(%esp)
0x07fe38f0:  mov    0x24(%esp),%esi
0x07fe38f4:  mov    %esi,0x4(%esp)
0x07fe38f8:  lea    0x30(%esp),%eax
0x07fe38fc:  mov    %eax,(%esp)
0x07fe38ff:  lea    0x2c(%esp),%ecx
0x07fe3903:  lea    0x34(%esp),%edx
0x07fe3907:  mov    $0x1,%eax
0x07fe390c:  call   0x7fe2ea4

----------------
IN: 
0x07fe3911:  test   %eax,%eax
0x07fe3913:  jne    0x7fe3a79

----------------
IN: 
0x07fe3919:  mov    0x34(%esp),%ebx
0x07fe391d:  lea    0x1b(%ebx),%esi
0x07fe3920:  movb   $0x1,(%ebx)
0x07fe3923:  movb   $0x1b,0x1(%ebx)
0x07fe3927:  movw   $0x100,0x2(%ebx)
0x07fe392d:  mov    %esi,%ecx
0x07fe392f:  mov    $0x4,%edx
0x07fe3934:  mov    $0x1,%al
0x07fe3936:  call   0x7fe1c90

----------------
IN: 
0x07fe393b:  test   %eax,%eax
0x07fe393d:  je     0x7fe3943

----------------
IN: 
0x07fe3943:  movl   $0x68636f42,0x1b(%ebx)
0x07fe394a:  movw   $0x73,0x4(%esi)
0x07fe3950:  lea    0x21(%ebx),%esi
0x07fe3953:  movb   $0x1,0x4(%ebx)
0x07fe3957:  mov    %esi,%ecx
0x07fe3959:  mov    $0x5,%edx
0x07fe395e:  mov    $0x1,%eax
0x07fe3963:  call   0x7fe1c90

----------------
IN: 
0x07fe3968:  test   %eax,%eax
0x07fe396a:  je     0x7fe3970

----------------
IN: 
0x07fe3970:  movl   $0x68636f42,(%esi)
0x07fe3976:  movw   $0x73,0x4(%esi)
0x07fe397c:  add    $0x6,%esi
0x07fe397f:  movb   $0x2,0x5(%ebx)
0x07fe3983:  mov    %esi,%ecx
0x07fe3985:  mov    $0x6,%edx
0x07fe398a:  mov    $0x1,%eax
0x07fe398f:  call   0x7fe1c90

----------------
IN: 
0x07fe3994:  test   %eax,%eax
0x07fe3996:  je     0x7fe39a5

----------------
IN: 
0x07fe39a5:  movb   $0x0,0x6(%ebx)
0x07fe39a9:  mov    $0x2,%edi
0x07fe39ae:  mov    %esi,%ecx
0x07fe39b0:  mov    $0x7,%edx
0x07fe39b5:  mov    $0x1,%eax
0x07fe39ba:  call   0x7fe1c90

----------------
IN: 
0x07fe39bf:  test   %eax,%eax
0x07fe39c1:  je     0x7fe39cd

----------------
IN: 
0x07fe39cd:  movb   $0x0,0x7(%ebx)
0x07fe39d1:  lea    0x8(%ebx),%eax
0x07fe39d4:  mov    %eax,0x28(%esp)
0x07fe39d8:  mov    %eax,%ecx
0x07fe39da:  mov    $0x8,%edx
0x07fe39df:  mov    $0x1,%eax
0x07fe39e4:  call   0x7fe1c90

----------------
IN: 
0x07fe39e9:  test   %eax,%eax
0x07fe39eb:  jne    0x7fe39fd

----------------
IN: 
0x07fe39ed:  mov    $0x10,%ecx
0x07fe39f2:  xor    %edx,%edx
0x07fe39f4:  mov    0x28(%esp),%eax
0x07fe39f8:  call   0xf172f

----------------
IN: 
0x07fe39fd:  lea    0x18(%ebx),%ecx
0x07fe3a00:  mov    $0x18,%edx
0x07fe3a05:  mov    $0x1,%eax
0x07fe3a0a:  call   0x7fe1c90

----------------
IN: 
0x07fe3a0f:  test   %eax,%eax
0x07fe3a11:  jne    0x7fe3a17

----------------
IN: 
0x07fe3a13:  movb   $0x6,0x18(%ebx)
0x07fe3a17:  mov    %esi,%ecx
0x07fe3a19:  mov    $0x19,%edx
0x07fe3a1e:  mov    $0x1,%eax
0x07fe3a23:  call   0x7fe1c90

----------------
IN: 
0x07fe3a28:  test   %eax,%eax
0x07fe3a2a:  je     0x7fe3a36

----------------
IN: 
0x07fe3a36:  movb   $0x0,0x19(%ebx)
0x07fe3a3a:  mov    %esi,%ecx
0x07fe3a3c:  mov    $0x1a,%edx
0x07fe3a41:  mov    $0x1,%eax
0x07fe3a46:  call   0x7fe1c90

----------------
IN: 
0x07fe3a4b:  test   %eax,%eax
0x07fe3a4d:  je     0x7fe3a59

----------------
IN: 
0x07fe3a59:  movb   $0x0,0x1a(%ebx)
0x07fe3a5d:  movb   $0x0,(%esi)
0x07fe3a60:  inc    %esi
0x07fe3a61:  incl   0x2c(%esp)
0x07fe3a65:  mov    %esi,%eax
0x07fe3a67:  sub    0x34(%esp),%eax
0x07fe3a6b:  cmp    0x30(%esp),%eax
0x07fe3a6f:  jbe    0x7fe3a75

----------------
IN: 
0x07fe3a75:  mov    %esi,0x34(%esp)
0x07fe3a79:  mov    0x24(%esp),%esi
0x07fe3a7d:  mov    %esi,0x4(%esp)
0x07fe3a81:  lea    0x30(%esp),%eax
0x07fe3a85:  mov    %eax,(%esp)
0x07fe3a88:  lea    0x2c(%esp),%ecx
0x07fe3a8c:  lea    0x34(%esp),%edx
0x07fe3a90:  mov    $0x3,%eax
0x07fe3a95:  call   0x7fe2ea4

----------------
IN: 
0x07fe3a9a:  test   %eax,%eax
0x07fe3a9c:  jne    0x7fe3c5a

----------------
IN: 
0x07fe3aa2:  mov    0x34(%esp),%ebx
0x07fe3aa6:  lea    0x14(%ebx),%esi
0x07fe3aa9:  movb   $0x3,(%ebx)
0x07fe3aac:  movb   $0x14,0x1(%ebx)
0x07fe3ab0:  movw   $0x300,0x2(%ebx)
0x07fe3ab6:  mov    %esi,%ecx
0x07fe3ab8:  mov    $0x4,%edx
0x07fe3abd:  mov    $0x3,%al
0x07fe3abf:  call   0x7fe1c90

----------------
IN: 
0x07fe3ac4:  test   %eax,%eax
0x07fe3ac6:  je     0x7fe3acc

----------------
IN: 
0x07fe3acc:  movl   $0x68636f42,0x14(%ebx)
0x07fe3ad3:  movw   $0x73,0x4(%esi)
0x07fe3ad9:  lea    0x1a(%ebx),%esi
0x07fe3adc:  movb   $0x1,0x4(%ebx)
0x07fe3ae0:  lea    0x5(%ebx),%ecx
0x07fe3ae3:  mov    $0x5,%edx
0x07fe3ae8:  mov    $0x3,%eax
0x07fe3aed:  call   0x7fe1c90

----------------
IN: 
0x07fe3af2:  test   %eax,%eax
0x07fe3af4:  jne    0x7fe3afa

----------------
IN: 
0x07fe3af6:  movb   $0x1,0x5(%ebx)
0x07fe3afa:  mov    %esi,%ecx
0x07fe3afc:  mov    $0x6,%edx
0x07fe3b01:  mov    $0x3,%eax
0x07fe3b06:  call   0x7fe1c90

----------------
IN: 
0x07fe3b0b:  test   %eax,%eax
0x07fe3b0d:  je     0x7fe3b1c

----------------
IN: 
0x07fe3b1c:  movb   $0x0,0x6(%ebx)
0x07fe3b20:  mov    $0x1,%edi
0x07fe3b25:  mov    %esi,%ecx
0x07fe3b27:  mov    $0x7,%edx
0x07fe3b2c:  mov    $0x3,%eax
0x07fe3b31:  call   0x7fe1c90

----------------
IN: 
0x07fe3b36:  test   %eax,%eax
0x07fe3b38:  je     0x7fe3b44

----------------
IN: 
0x07fe3b44:  movb   $0x0,0x7(%ebx)
0x07fe3b48:  mov    %esi,%ecx
0x07fe3b4a:  mov    $0x8,%edx
0x07fe3b4f:  mov    $0x3,%eax
0x07fe3b54:  call   0x7fe1c90

----------------
IN: 
0x07fe3b59:  test   %eax,%eax
0x07fe3b5b:  je     0x7fe3b67

----------------
IN: 
0x07fe3b67:  movb   $0x0,0x8(%ebx)
0x07fe3b6b:  lea    0x9(%ebx),%ecx
0x07fe3b6e:  mov    $0x9,%edx
0x07fe3b73:  mov    $0x3,%eax
0x07fe3b78:  call   0x7fe1c90

----------------
IN: 
0x07fe3b7d:  test   %eax,%eax
0x07fe3b7f:  jne    0x7fe3b85

----------------
IN: 
0x07fe3b81:  movb   $0x3,0x9(%ebx)
0x07fe3b85:  lea    0xa(%ebx),%ecx
0x07fe3b88:  mov    $0xa,%edx
0x07fe3b8d:  mov    $0x3,%eax
0x07fe3b92:  call   0x7fe1c90

----------------
IN: 
0x07fe3b97:  test   %eax,%eax
0x07fe3b99:  jne    0x7fe3b9f

----------------
IN: 
0x07fe3b9b:  movb   $0x3,0xa(%ebx)
0x07fe3b9f:  lea    0xb(%ebx),%ecx
0x07fe3ba2:  mov    $0xb,%edx
0x07fe3ba7:  mov    $0x3,%eax
0x07fe3bac:  call   0x7fe1c90

----------------
IN: 
0x07fe3bb1:  test   %eax,%eax
0x07fe3bb3:  jne    0x7fe3bb9

----------------
IN: 
0x07fe3bb5:  movb   $0x3,0xb(%ebx)
0x07fe3bb9:  lea    0xc(%ebx),%ecx
0x07fe3bbc:  mov    $0xc,%edx
0x07fe3bc1:  mov    $0x3,%eax
0x07fe3bc6:  call   0x7fe1c90

----------------
IN: 
0x07fe3bcb:  test   %eax,%eax
0x07fe3bcd:  jne    0x7fe3bd3

----------------
IN: 
0x07fe3bcf:  movb   $0x2,0xc(%ebx)
0x07fe3bd3:  lea    0xd(%ebx),%ecx
0x07fe3bd6:  mov    $0xd,%edx
0x07fe3bdb:  mov    $0x3,%eax
0x07fe3be0:  call   0x7fe1c90

----------------
IN: 
0x07fe3be5:  test   %eax,%eax
0x07fe3be7:  jne    0x7fe3bf0

----------------
IN: 
0x07fe3be9:  movl   $0x0,0xd(%ebx)
0x07fe3bf0:  lea    0x11(%ebx),%ecx
0x07fe3bf3:  mov    $0x11,%edx
0x07fe3bf8:  mov    $0x3,%eax
0x07fe3bfd:  call   0x7fe1c90

----------------
IN: 
0x07fe3c02:  test   %eax,%eax
0x07fe3c04:  jne    0x7fe3c0a

----------------
IN: 
0x07fe3c06:  movb   $0x0,0x11(%ebx)
0x07fe3c0a:  lea    0x12(%ebx),%ecx
0x07fe3c0d:  mov    $0x12,%edx
0x07fe3c12:  mov    $0x3,%eax
0x07fe3c17:  call   0x7fe1c90

----------------
IN: 
0x07fe3c1c:  test   %eax,%eax
0x07fe3c1e:  jne    0x7fe3c24

----------------
IN: 
0x07fe3c20:  movb   $0x0,0x12(%ebx)
0x07fe3c24:  lea    0x13(%ebx),%ecx
0x07fe3c27:  mov    $0x13,%edx
0x07fe3c2c:  mov    $0x3,%eax
0x07fe3c31:  call   0x7fe1c90

----------------
IN: 
0x07fe3c36:  test   %eax,%eax
0x07fe3c38:  jne    0x7fe3c3e

----------------
IN: 
0x07fe3c3a:  movb   $0x0,0x13(%ebx)
0x07fe3c3e:  movb   $0x0,(%esi)
0x07fe3c41:  inc    %esi
0x07fe3c42:  incl   0x2c(%esp)
0x07fe3c46:  mov    %esi,%eax
0x07fe3c48:  sub    0x34(%esp),%eax
0x07fe3c4c:  cmp    0x30(%esp),%eax
0x07fe3c50:  jbe    0x7fe3c56

----------------
IN: 
0x07fe3c56:  mov    %esi,0x34(%esp)
0x07fe3c5a:  mov    $0x1,%ebx
0x07fe3c5f:  jmp    0x7fe3caa

----------------
IN: 
0x07fe3caa:  cmp    0xfd0b8,%ebx
0x07fe3cb0:  jbe    0x7fe3c61

----------------
IN: 
0x07fe3c61:  mov    0x24(%esp),%esi
0x07fe3c65:  mov    %esi,0x4(%esp)
0x07fe3c69:  lea    0x30(%esp),%eax
0x07fe3c6d:  mov    %eax,(%esp)
0x07fe3c70:  lea    0x2c(%esp),%ecx
0x07fe3c74:  lea    0x34(%esp),%edx
0x07fe3c78:  mov    $0x4,%eax
0x07fe3c7d:  call   0x7fe2ea4

----------------
IN: 
0x07fe3c82:  test   %eax,%eax
0x07fe3c84:  jne    0x7fe3ca9

----------------
IN: 
0x07fe3c86:  mov    %ebx,%edx
0x07fe3c88:  mov    0x34(%esp),%eax
0x07fe3c8c:  call   0x7fe20c4

----------------
IN: 
0x07fe20c4:  push   %ebp
0x07fe20c5:  push   %edi
0x07fe20c6:  push   %esi
0x07fe20c7:  push   %ebx
0x07fe20c8:  sub    $0x424,%esp
0x07fe20ce:  mov    %eax,%ebx
0x07fe20d0:  mov    %edx,%edi
0x07fe20d2:  lea    0x20(%eax),%eax
0x07fe20d5:  mov    %eax,0x10(%esp)
0x07fe20d9:  movb   $0x4,(%ebx)
0x07fe20dc:  movb   $0x20,0x1(%ebx)
0x07fe20e0:  lea    0x400(%edx),%eax
0x07fe20e6:  mov    %ax,0x2(%ebx)
0x07fe20ea:  lea    0x24(%esp),%esi
0x07fe20ee:  mov    %esi,%ecx
0x07fe20f0:  mov    $0x4,%edx
0x07fe20f5:  mov    $0x4,%eax
0x07fe20fa:  call   0x7fe1c90

----------------
IN: 
0x07fe20ff:  mov    %edi,0xc(%esp)
0x07fe2103:  test   %eax,%eax
0x07fe2105:  je     0x7fe2123

----------------
IN: 
0x07fe2123:  movl   $0xf429f,0x8(%esp)
0x07fe212b:  movl   $0x400,0x4(%esp)
0x07fe2133:  mov    %esi,(%esp)
0x07fe2136:  call   0x7fe2079

----------------
IN: 
0x07fe2079:  push   %ebx
0x07fe207a:  sub    $0xc,%esp
0x07fe207d:  mov    0x14(%esp),%ebx
0x07fe2081:  mov    0x18(%esp),%edx
0x07fe2085:  xor    %eax,%eax
0x07fe2087:  test   %edx,%edx
0x07fe2089:  je     0x7fe20bf

----------------
IN: 
0x07fe208b:  movl   $0x7fe0d20,(%esp)
0x07fe2092:  mov    %ebx,0x4(%esp)
0x07fe2096:  add    %ebx,%edx
0x07fe2098:  mov    %edx,0x8(%esp)
0x07fe209c:  lea    0x20(%esp),%ecx
0x07fe20a0:  mov    0x1c(%esp),%edx
0x07fe20a4:  mov    %esp,%eax
0x07fe20a6:  call   0xf1e46

----------------
IN: 
0x07fe0d20:  mov    0x4(%eax),%ecx
0x07fe0d23:  cmp    0x8(%eax),%ecx
0x07fe0d26:  jae    0x7fe0d2d

----------------
IN: 
0x07fe0d28:  mov    %dl,(%ecx)
0x07fe0d2a:  incl   0x4(%eax)
0x07fe0d2d:  ret    

----------------
IN: 
0x07fe20ab:  mov    0x4(%esp),%eax
0x07fe20af:  mov    0x8(%esp),%edx
0x07fe20b3:  cmp    %edx,%eax
0x07fe20b5:  jb     0x7fe20ba

----------------
IN: 
0x07fe20ba:  movb   $0x0,(%eax)
0x07fe20bd:  sub    %ebx,%eax
0x07fe20bf:  add    $0xc,%esp
0x07fe20c2:  pop    %ebx
0x07fe20c3:  ret    

----------------
IN: 
0x07fe213b:  lea    0x24(%esp),%ebp
0x07fe213f:  mov    %ebp,%eax
0x07fe2141:  call   0xf16dc

----------------
IN: 
0x07fe2146:  lea    0x1(%eax),%ecx
0x07fe2149:  mov    0x10(%esp),%edi
0x07fe214d:  mov    %ebp,%esi
0x07fe214f:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe214f:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe2151:  mov    %ebp,%eax
0x07fe2153:  call   0xf16dc

----------------
IN: 
0x07fe2158:  mov    0x10(%esp),%edx
0x07fe215c:  lea    0x1(%edx,%eax,1),%esi
0x07fe2160:  movb   $0x1,0x4(%ebx)
0x07fe2164:  lea    0x5(%ebx),%ecx
0x07fe2167:  mov    $0x5,%edx
0x07fe216c:  mov    $0x4,%eax
0x07fe2171:  call   0x7fe1c90

----------------
IN: 
0x07fe2176:  test   %eax,%eax
0x07fe2178:  jne    0x7fe217e

----------------
IN: 
0x07fe217a:  movb   $0x3,0x5(%ebx)
0x07fe217e:  lea    0x6(%ebx),%ecx
0x07fe2181:  mov    $0x6,%edx
0x07fe2186:  mov    $0x4,%eax
0x07fe218b:  call   0x7fe1c90

----------------
IN: 
0x07fe2190:  test   %eax,%eax
0x07fe2192:  jne    0x7fe2198

----------------
IN: 
0x07fe2194:  movb   $0x1,0x6(%ebx)
0x07fe2198:  mov    %esi,%ecx
0x07fe219a:  mov    $0x7,%edx
0x07fe219f:  mov    $0x4,%eax
0x07fe21a4:  call   0x7fe1c90

----------------
IN: 
0x07fe21a9:  test   %eax,%eax
0x07fe21ab:  je     0x7fe21b1

----------------
IN: 
0x07fe21b1:  movl   $0x68636f42,(%esi)
0x07fe21b7:  movw   $0x73,0x4(%esi)
0x07fe21bd:  add    $0x6,%esi
0x07fe21c0:  movb   $0x2,0x7(%ebx)
0x07fe21c4:  lea    0x8(%ebx),%ecx
0x07fe21c7:  mov    $0x8,%edx
0x07fe21cc:  mov    $0x4,%eax
0x07fe21d1:  call   0x7fe1c90

----------------
IN: 
0x07fe21d6:  test   %eax,%eax
0x07fe21d8:  jne    0x7fe2209

----------------
IN: 
0x07fe21da:  lea    0x20(%esp),%eax
0x07fe21de:  mov    %eax,0x4(%esp)
0x07fe21e2:  lea    0x1c(%esp),%eax
0x07fe21e6:  mov    %eax,(%esp)
0x07fe21e9:  lea    0x18(%esp),%ecx
0x07fe21ed:  lea    0x14(%esp),%edx
0x07fe21f1:  mov    $0x1,%eax
0x07fe21f6:  call   0xf1683

----------------
IN: 
0x07fe21fb:  mov    0x14(%esp),%eax
0x07fe21ff:  mov    %eax,0x8(%ebx)
0x07fe2202:  mov    0x20(%esp),%eax
0x07fe2206:  mov    %eax,0xc(%ebx)
0x07fe2209:  mov    %esi,%ecx
0x07fe220b:  mov    $0x10,%edx
0x07fe2210:  mov    $0x4,%eax
0x07fe2215:  call   0x7fe1c90

----------------
IN: 
0x07fe221a:  test   %eax,%eax
0x07fe221c:  je     0x7fe2226

----------------
IN: 
0x07fe2226:  movb   $0x0,0x10(%ebx)
0x07fe222a:  lea    0x11(%ebx),%ecx
0x07fe222d:  mov    $0x11,%edx
0x07fe2232:  mov    $0x4,%eax
0x07fe2237:  call   0x7fe1c90

----------------
IN: 
0x07fe223c:  test   %eax,%eax
0x07fe223e:  jne    0x7fe2244

----------------
IN: 
0x07fe2240:  movb   $0x0,0x11(%ebx)
0x07fe2244:  lea    0x12(%ebx),%ecx
0x07fe2247:  mov    $0x12,%edx
0x07fe224c:  mov    $0x4,%eax
0x07fe2251:  call   0x7fe1c90

----------------
IN: 
0x07fe2256:  test   %eax,%eax
0x07fe2258:  jne    0x7fe2260

----------------
IN: 
0x07fe225a:  movw   $0x0,0x12(%ebx)
0x07fe2260:  lea    0x14(%ebx),%ecx
0x07fe2263:  mov    $0x14,%edx
0x07fe2268:  mov    $0x4,%eax
0x07fe226d:  call   0x7fe1c90

----------------
IN: 
0x07fe2272:  test   %eax,%eax
0x07fe2274:  jne    0x7fe227c

----------------
IN: 
0x07fe2276:  movw   $0x7d0,0x14(%ebx)
0x07fe227c:  lea    0x16(%ebx),%ecx
0x07fe227f:  mov    $0x16,%edx
0x07fe2284:  mov    $0x4,%eax
0x07fe2289:  call   0x7fe1c90

----------------
IN: 
0x07fe228e:  test   %eax,%eax
0x07fe2290:  jne    0x7fe2298

----------------
IN: 
0x07fe2292:  movw   $0x7d0,0x16(%ebx)
0x07fe2298:  lea    0x18(%ebx),%ecx
0x07fe229b:  mov    $0x18,%edx
0x07fe22a0:  mov    $0x4,%eax
0x07fe22a5:  call   0x7fe1c90

----------------
IN: 
0x07fe22aa:  test   %eax,%eax
0x07fe22ac:  jne    0x7fe22b2

----------------
IN: 
0x07fe22ae:  movb   $0x41,0x18(%ebx)
0x07fe22b2:  lea    0x19(%ebx),%ecx
0x07fe22b5:  mov    $0x19,%edx
0x07fe22ba:  mov    $0x4,%eax
0x07fe22bf:  call   0x7fe1c90

----------------
IN: 
0x07fe22c4:  test   %eax,%eax
0x07fe22c6:  jne    0x7fe22cc

----------------
IN: 
0x07fe22c8:  movb   $0x1,0x19(%ebx)
0x07fe22cc:  movw   $0xffff,0x1a(%ebx)
0x07fe22d2:  movw   $0xffff,0x1c(%ebx)
0x07fe22d8:  movw   $0xffff,0x1e(%ebx)
0x07fe22de:  movb   $0x0,(%esi)
0x07fe22e1:  lea    0x1(%esi),%eax
0x07fe22e4:  add    $0x424,%esp
0x07fe22ea:  pop    %ebx
0x07fe22eb:  pop    %esi
0x07fe22ec:  pop    %edi
0x07fe22ed:  pop    %ebp
0x07fe22ee:  ret    

----------------
IN: 
0x07fe3c91:  incl   0x2c(%esp)
0x07fe3c95:  mov    %eax,%edx
0x07fe3c97:  sub    0x34(%esp),%edx
0x07fe3c9b:  cmp    0x30(%esp),%edx
0x07fe3c9f:  jbe    0x7fe3ca5

----------------
IN: 
0x07fe3ca5:  mov    %eax,0x34(%esp)
0x07fe3ca9:  inc    %ebx
0x07fe3caa:  cmp    0xfd0b8,%ebx
0x07fe3cb0:  jbe    0x7fe3c61

----------------
IN: 
0x07fe3cb2:  mov    0xfdbf0,%esi
0x07fe3cb8:  xor    %edi,%edi
0x07fe3cba:  add    0x7fefe7f,%esi
0x07fe3cc0:  adc    0x7fefe83,%edi
0x07fe3cc6:  shrd   $0x14,%edi,%esi
0x07fe3cca:  shr    $0x14,%edi
0x07fe3ccd:  mov    %esi,0x20(%esp)
0x07fe3cd1:  mov    %esi,%eax
0x07fe3cd3:  add    $0x3fff,%eax
0x07fe3cd8:  sar    $0xe,%eax
0x07fe3cdb:  mov    %eax,0x28(%esp)
0x07fe3cdf:  mov    0x24(%esp),%eax
0x07fe3ce3:  mov    %eax,0x4(%esp)
0x07fe3ce7:  lea    0x30(%esp),%eax
0x07fe3ceb:  mov    %eax,(%esp)
0x07fe3cee:  lea    0x2c(%esp),%ecx
0x07fe3cf2:  lea    0x34(%esp),%edx
0x07fe3cf6:  mov    $0x10,%eax
0x07fe3cfb:  call   0x7fe2ea4

----------------
IN: 
0x07fe3d00:  test   %eax,%eax
0x07fe3d02:  jne    0x7fe3da8

----------------
IN: 
0x07fe3d08:  mov    0x34(%esp),%ebx
0x07fe3d0c:  movb   $0x10,(%ebx)
0x07fe3d0f:  movb   $0xf,0x1(%ebx)
0x07fe3d13:  movw   $0x1000,0x2(%ebx)
0x07fe3d19:  lea    0x4(%ebx),%ecx
0x07fe3d1c:  mov    $0x4,%edx
0x07fe3d21:  mov    $0x10,%al
0x07fe3d23:  call   0x7fe1c90

----------------
IN: 
0x07fe3d28:  test   %eax,%eax
0x07fe3d2a:  jne    0x7fe3d30

----------------
IN: 
0x07fe3d2c:  movb   $0x1,0x4(%ebx)
0x07fe3d30:  lea    0x5(%ebx),%ecx
0x07fe3d33:  mov    $0x5,%edx
0x07fe3d38:  mov    $0x10,%eax
0x07fe3d3d:  call   0x7fe1c90

----------------
IN: 
0x07fe3d42:  test   %eax,%eax
0x07fe3d44:  jne    0x7fe3d4a

----------------
IN: 
0x07fe3d46:  movb   $0x3,0x5(%ebx)
0x07fe3d4a:  lea    0x6(%ebx),%ecx
0x07fe3d4d:  mov    $0x6,%edx
0x07fe3d52:  mov    $0x10,%eax
0x07fe3d57:  call   0x7fe1c90

----------------
IN: 
0x07fe3d5c:  test   %eax,%eax
0x07fe3d5e:  jne    0x7fe3d64

----------------
IN: 
0x07fe3d60:  movb   $0x6,0x6(%ebx)
0x07fe3d64:  mov    $0x80000000,%eax
0x07fe3d69:  cmp    $0x1fffff,%esi
0x07fe3d6f:  ja     0x7fe3d76

----------------
IN: 
0x07fe3d71:  mov    %esi,%eax
0x07fe3d73:  shl    $0xa,%eax
0x07fe3d76:  mov    %eax,0x7(%ebx)
0x07fe3d79:  movw   $0xfffe,0xb(%ebx)
0x07fe3d7f:  mov    0x28(%esp),%esi
0x07fe3d83:  mov    %si,0xd(%ebx)
0x07fe3d87:  movw   $0x0,0xf(%ebx)
0x07fe3d8d:  add    $0x11,%ebx
0x07fe3d90:  incl   0x2c(%esp)
0x07fe3d94:  mov    %ebx,%eax
0x07fe3d96:  sub    0x34(%esp),%eax
0x07fe3d9a:  cmp    0x30(%esp),%eax
0x07fe3d9e:  jbe    0x7fe3da4

----------------
IN: 
0x07fe3da4:  mov    %ebx,0x34(%esp)
0x07fe3da8:  xor    %ebx,%ebx
0x07fe3daa:  mov    0x20(%esp),%esi
0x07fe3dae:  dec    %esi
0x07fe3daf:  and    $0x3fff,%esi
0x07fe3db5:  jmp    0x7fe3e13

----------------
IN: 
0x07fe3e13:  cmp    0x28(%esp),%ebx
0x07fe3e17:  jl     0x7fe3db7

----------------
IN: 
0x07fe3db7:  mov    0x28(%esp),%eax
0x07fe3dbb:  dec    %eax
0x07fe3dbc:  mov    $0x4000,%edi
0x07fe3dc1:  cmp    %eax,%ebx
0x07fe3dc3:  jne    0x7fe3dc8

----------------
IN: 
0x07fe3dc5:  lea    0x1(%esi),%edi
0x07fe3dc8:  mov    0x24(%esp),%eax
0x07fe3dcc:  mov    %eax,0x4(%esp)
0x07fe3dd0:  lea    0x30(%esp),%eax
0x07fe3dd4:  mov    %eax,(%esp)
0x07fe3dd7:  lea    0x2c(%esp),%ecx
0x07fe3ddb:  lea    0x34(%esp),%edx
0x07fe3ddf:  mov    $0x11,%eax
0x07fe3de4:  call   0x7fe2ea4

----------------
IN: 
0x07fe3de9:  test   %eax,%eax
0x07fe3deb:  jne    0x7fe3e12

----------------
IN: 
0x07fe3ded:  mov    %ebx,%ecx
0x07fe3def:  mov    %edi,%edx
0x07fe3df1:  mov    0x34(%esp),%eax
0x07fe3df5:  call   0x7fe22ef

----------------
IN: 
0x07fe22ef:  push   %ebp
0x07fe22f0:  push   %edi
0x07fe22f1:  push   %esi
0x07fe22f2:  push   %ebx
0x07fe22f3:  sub    $0x414,%esp
0x07fe22f9:  mov    %eax,%ebx
0x07fe22fb:  mov    %edx,%esi
0x07fe22fd:  mov    %ecx,%edi
0x07fe22ff:  lea    0x15(%eax),%eax
0x07fe2302:  mov    %eax,0x10(%esp)
0x07fe2306:  movb   $0x11,(%ebx)
0x07fe2309:  movb   $0x15,0x1(%ebx)
0x07fe230d:  lea    0x1100(%ecx),%eax
0x07fe2313:  mov    %ax,0x2(%ebx)
0x07fe2317:  movw   $0x1000,0x4(%ebx)
0x07fe231d:  lea    0x8(%ebx),%ecx
0x07fe2320:  mov    $0x8,%edx
0x07fe2325:  mov    $0x11,%eax
0x07fe232a:  call   0x7fe1c90

----------------
IN: 
0x07fe232f:  test   %eax,%eax
0x07fe2331:  jne    0x7fe2339

----------------
IN: 
0x07fe2333:  movw   $0x40,0x8(%ebx)
0x07fe2339:  lea    0xa(%ebx),%ecx
0x07fe233c:  mov    $0xa,%edx
0x07fe2341:  mov    $0x11,%eax
0x07fe2346:  call   0x7fe1c90

----------------
IN: 
0x07fe234b:  test   %eax,%eax
0x07fe234d:  jne    0x7fe2355

----------------
IN: 
0x07fe234f:  movw   $0x40,0xa(%ebx)
0x07fe2355:  mov    %si,0xc(%ebx)
0x07fe2359:  lea    0xe(%ebx),%ecx
0x07fe235c:  mov    $0xe,%edx
0x07fe2361:  mov    $0x11,%eax
0x07fe2366:  call   0x7fe1c90

----------------
IN: 
0x07fe236b:  test   %eax,%eax
0x07fe236d:  jne    0x7fe2373

----------------
IN: 
0x07fe236f:  movb   $0x9,0xe(%ebx)
0x07fe2373:  movb   $0x0,0xf(%ebx)
0x07fe2377:  lea    0x14(%esp),%esi
0x07fe237b:  mov    %esi,%ecx
0x07fe237d:  mov    $0x10,%edx
0x07fe2382:  mov    $0x11,%eax
0x07fe2387:  call   0x7fe1c90

----------------
IN: 
0x07fe238c:  mov    %edi,0xc(%esp)
0x07fe2390:  test   %eax,%eax
0x07fe2392:  je     0x7fe23b0

----------------
IN: 
0x07fe23b0:  movl   $0xf42a6,0x8(%esp)
0x07fe23b8:  movl   $0x400,0x4(%esp)
0x07fe23c0:  mov    %esi,(%esp)
0x07fe23c3:  call   0x7fe2079

----------------
IN: 
0x07fe23c8:  lea    0x14(%esp),%ebp
0x07fe23cc:  mov    %ebp,%eax
0x07fe23ce:  call   0xf16dc

----------------
IN: 
0x07fe23d3:  lea    0x1(%eax),%ecx
0x07fe23d6:  mov    0x10(%esp),%edi
0x07fe23da:  mov    %ebp,%esi
0x07fe23dc:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe23dc:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe23de:  mov    %ebp,%eax
0x07fe23e0:  call   0xf16dc

----------------
IN: 
0x07fe23e5:  mov    0x10(%esp),%edx
0x07fe23e9:  lea    0x1(%edx,%eax,1),%esi
0x07fe23ed:  movb   $0x1,0x10(%ebx)
0x07fe23f1:  mov    %esi,%ecx
0x07fe23f3:  mov    $0x11,%edx
0x07fe23f8:  mov    $0x11,%eax
0x07fe23fd:  call   0x7fe1c90

----------------
IN: 
0x07fe2402:  test   %eax,%eax
0x07fe2404:  je     0x7fe240e

----------------
IN: 
0x07fe240e:  movb   $0x0,0x11(%ebx)
0x07fe2412:  lea    0x12(%ebx),%ecx
0x07fe2415:  mov    $0x12,%edx
0x07fe241a:  mov    $0x11,%eax
0x07fe241f:  call   0x7fe1c90

----------------
IN: 
0x07fe2424:  test   %eax,%eax
0x07fe2426:  jne    0x7fe242c

----------------
IN: 
0x07fe2428:  movb   $0x7,0x12(%ebx)
0x07fe242c:  lea    0x13(%ebx),%ecx
0x07fe242f:  mov    $0x13,%edx
0x07fe2434:  mov    $0x11,%eax
0x07fe2439:  call   0x7fe1c90

----------------
IN: 
0x07fe243e:  test   %eax,%eax
0x07fe2440:  jne    0x7fe2448

----------------
IN: 
0x07fe2442:  movw   $0x0,0x13(%ebx)
0x07fe2448:  movb   $0x0,(%esi)
0x07fe244b:  lea    0x1(%esi),%eax
0x07fe244e:  add    $0x414,%esp
0x07fe2454:  pop    %ebx
0x07fe2455:  pop    %esi
0x07fe2456:  pop    %edi
0x07fe2457:  pop    %ebp
0x07fe2458:  ret    

----------------
IN: 
0x07fe3dfa:  incl   0x2c(%esp)
0x07fe3dfe:  mov    %eax,%edx
0x07fe3e00:  sub    0x34(%esp),%edx
0x07fe3e04:  cmp    0x30(%esp),%edx
0x07fe3e08:  jbe    0x7fe3e0e

----------------
IN: 
0x07fe3e0e:  mov    %eax,0x34(%esp)
0x07fe3e12:  inc    %ebx
0x07fe3e13:  cmp    0x28(%esp),%ebx
0x07fe3e17:  jl     0x7fe3db7

----------------
IN: 
0x07fe3e19:  mov    0x24(%esp),%esi
0x07fe3e1d:  mov    %esi,0x4(%esp)
0x07fe3e21:  lea    0x30(%esp),%eax
0x07fe3e25:  mov    %eax,(%esp)
0x07fe3e28:  lea    0x2c(%esp),%ecx
0x07fe3e2c:  lea    0x34(%esp),%edx
0x07fe3e30:  mov    $0x13,%eax
0x07fe3e35:  call   0x7fe2ea4

----------------
IN: 
0x07fe3e3a:  test   %eax,%eax
0x07fe3e3c:  jne    0x7fe3e90

----------------
IN: 
0x07fe3e3e:  mov    0xfdbf0,%edx
0x07fe3e44:  shr    $0x14,%edx
0x07fe3e47:  mov    0x34(%esp),%eax
0x07fe3e4b:  movb   $0x13,(%eax)
0x07fe3e4e:  movb   $0xf,0x1(%eax)
0x07fe3e52:  movw   $0x1300,0x2(%eax)
0x07fe3e58:  movl   $0x0,0x4(%eax)
0x07fe3e5f:  shl    $0xa,%edx
0x07fe3e62:  dec    %edx
0x07fe3e63:  mov    %edx,0x8(%eax)
0x07fe3e66:  movw   $0x1000,0xc(%eax)
0x07fe3e6c:  movb   $0x1,0xe(%eax)
0x07fe3e70:  movw   $0x0,0xf(%eax)
0x07fe3e76:  add    $0x11,%eax
0x07fe3e79:  incl   0x2c(%esp)
0x07fe3e7d:  cmpl   $0x10,0x30(%esp)
0x07fe3e82:  ja     0x7fe3e8c

----------------
IN: 
0x07fe3e8c:  mov    %eax,0x34(%esp)
0x07fe3e90:  mov    0x7fefe83,%eax
0x07fe3e95:  or     0x7fefe7f,%eax
0x07fe3e9b:  je     0x7fe3f25

----------------
IN: 
0x07fe3f25:  mov    0x24(%esp),%esi
0x07fe3f29:  mov    %esi,0x4(%esp)
0x07fe3f2d:  lea    0x30(%esp),%eax
0x07fe3f31:  mov    %eax,(%esp)
0x07fe3f34:  lea    0x2c(%esp),%ecx
0x07fe3f38:  lea    0x34(%esp),%edx
0x07fe3f3c:  mov    $0x14,%eax
0x07fe3f41:  call   0x7fe2ea4

----------------
IN: 
0x07fe3f46:  test   %eax,%eax
0x07fe3f48:  jne    0x7fe3faa

----------------
IN: 
0x07fe3f4a:  mov    0xfdbf0,%edx
0x07fe3f50:  shr    $0x14,%edx
0x07fe3f53:  mov    0x34(%esp),%eax
0x07fe3f57:  movb   $0x14,(%eax)
0x07fe3f5a:  movb   $0x13,0x1(%eax)
0x07fe3f5e:  movw   $0x1400,0x2(%eax)
0x07fe3f64:  movl   $0x0,0x4(%eax)
0x07fe3f6b:  shl    $0xa,%edx
0x07fe3f6e:  dec    %edx
0x07fe3f6f:  mov    %edx,0x8(%eax)
0x07fe3f72:  movw   $0x1100,0xc(%eax)
0x07fe3f78:  movw   $0x1300,0xe(%eax)
0x07fe3f7e:  movb   $0x1,0x10(%eax)
0x07fe3f82:  movb   $0x0,0x11(%eax)
0x07fe3f86:  movb   $0x0,0x12(%eax)
0x07fe3f8a:  movw   $0x0,0x13(%eax)
0x07fe3f90:  add    $0x15,%eax
0x07fe3f93:  incl   0x2c(%esp)
0x07fe3f97:  cmpl   $0x14,0x30(%esp)
0x07fe3f9c:  ja     0x7fe3fa6

----------------
IN: 
0x07fe3fa6:  mov    %eax,0x34(%esp)
0x07fe3faa:  mov    0x7fefe83,%eax
0x07fe3faf:  or     0x7fefe7f,%eax
0x07fe3fb5:  jne    0x7fe409e

----------------
IN: 
0x07fe3fbb:  mov    0x24(%esp),%eax
0x07fe3fbf:  mov    %eax,0x4(%esp)
0x07fe3fc3:  lea    0x30(%esp),%eax
0x07fe3fc7:  mov    %eax,(%esp)
0x07fe3fca:  lea    0x2c(%esp),%ecx
0x07fe3fce:  lea    0x34(%esp),%edx
0x07fe3fd2:  mov    $0x20,%eax
0x07fe3fd7:  call   0x7fe2ea4

----------------
IN: 
0x07fe2ef0:  mov    %edx,%eax
0x07fe2ef2:  xor    %edx,%edx
0x07fe2ef4:  and    $0x1,%eax
0x07fe2ef7:  test   %eax,%eax
0x07fe2ef9:  jne    0x7fe3042

----------------
IN: 
0x07fe3fdc:  test   %eax,%eax
0x07fe3fde:  jne    0x7fe4121

----------------
IN: 
0x07fe3fe4:  jmp    0x7fe40c6

----------------
IN: 
0x07fe40c6:  mov    0x34(%esp),%ebx
0x07fe40ca:  movb   $0x20,(%ebx)
0x07fe40cd:  movb   $0xb,0x1(%ebx)
0x07fe40d1:  movw   $0x2000,0x2(%ebx)
0x07fe40d7:  lea    0x4(%ebx),%eax
0x07fe40da:  mov    $0x6,%ecx
0x07fe40df:  xor    %edx,%edx
0x07fe40e1:  call   0xf172f

----------------
IN: 
0x07fe40e6:  lea    0xa(%ebx),%ecx
0x07fe40e9:  mov    $0xa,%edx
0x07fe40ee:  mov    $0x20,%eax
0x07fe40f3:  call   0x7fe1c90

----------------
IN: 
0x07fe40f8:  test   %eax,%eax
0x07fe40fa:  jne    0x7fe4100

----------------
IN: 
0x07fe40fc:  movb   $0x0,0xa(%ebx)
0x07fe4100:  movw   $0x0,0xb(%ebx)
0x07fe4106:  add    $0xd,%ebx
0x07fe4109:  incl   0x2c(%esp)
0x07fe410d:  mov    %ebx,%eax
0x07fe410f:  sub    0x34(%esp),%eax
0x07fe4113:  cmp    0x30(%esp),%eax
0x07fe4117:  jbe    0x7fe411d

----------------
IN: 
0x07fe411d:  mov    %ebx,0x34(%esp)
0x07fe4121:  xor    %ebx,%ebx
0x07fe4123:  mov    0x24(%esp),%eax
0x07fe4127:  mov    %eax,0x4(%esp)
0x07fe412b:  lea    0x30(%esp),%eax
0x07fe412f:  mov    %eax,(%esp)
0x07fe4132:  lea    0x2c(%esp),%ecx
0x07fe4136:  lea    0x34(%esp),%edx
0x07fe413a:  mov    %ebx,%eax
0x07fe413c:  call   0x7fe2ea4

----------------
IN: 
0x07fe4141:  inc    %ebx
0x07fe4142:  cmp    $0x100,%ebx
0x07fe4148:  jne    0x7fe4123

----------------
IN: 
0x07fe4123:  mov    0x24(%esp),%eax
0x07fe4127:  mov    %eax,0x4(%esp)
0x07fe412b:  lea    0x30(%esp),%eax
0x07fe412f:  mov    %eax,(%esp)
0x07fe4132:  lea    0x2c(%esp),%ecx
0x07fe4136:  lea    0x34(%esp),%edx
0x07fe413a:  mov    %ebx,%eax
0x07fe413c:  call   0x7fe2ea4

----------------
IN: 
0x07fe414a:  cmpl   $0x0,0x7fefea3
0x07fe4151:  jns    0x7fe4297

----------------
IN: 
0x07fe4297:  mov    0x34(%esp),%eax
0x07fe429b:  movb   $0x7f,(%eax)
0x07fe429e:  movb   $0x4,0x1(%eax)
0x07fe42a2:  movw   $0x7f00,0x2(%eax)
0x07fe42a8:  movw   $0x0,0x4(%eax)
0x07fe42ae:  add    $0x6,%eax
0x07fe42b1:  incl   0x2c(%esp)
0x07fe42b5:  cmpl   $0x5,0x30(%esp)
0x07fe42ba:  jbe    0x7fe4159

----------------
IN: 
0x07fe42c0:  jmp    0x7fe4161

----------------
IN: 
0x07fe4161:  mov    %eax,0x34(%esp)
0x07fe4165:  mov    0x2c(%esp),%esi
0x07fe4169:  mov    %esi,0x18(%esp)
0x07fe416d:  mov    0x34(%esp),%eax
0x07fe4171:  sub    0x1c(%esp),%eax
0x07fe4175:  and    $0xffff,%eax
0x07fe417a:  mov    %eax,0x24(%esp)
0x07fe417e:  mov    0x30(%esp),%eax
0x07fe4182:  mov    %eax,0x14(%esp)
0x07fe4186:  mov    0x24(%esp),%esi
0x07fe418a:  mov    %si,0x20(%esp)
0x07fe418f:  mov    $0x1f,%eax
0x07fe4194:  call   0x7fe0c1f

----------------
IN: 
0x07fe4199:  mov    %eax,%ebx
0x07fe419b:  mov    0x24(%esp),%eax
0x07fe419f:  cmp    $0x258,%si
0x07fe41a4:  ja     0x7fe41ad

----------------
IN: 
0x07fe41a6:  call   0x7fe0c1f

----------------
IN: 
0x07fe41ab:  jmp    0x7fe41b2

----------------
IN: 
0x07fe41b2:  mov    %eax,0x28(%esp)
0x07fe41b6:  cmpl   $0x0,0x28(%esp)
0x07fe41bb:  je     0x7fe41c1

----------------
IN: 
0x07fe41bd:  test   %ebx,%ebx
0x07fe41bf:  jne    0x7fe41e5

----------------
IN: 
0x07fe41e5:  mov    0x28(%esp),%edi
0x07fe41e9:  mov    0x1c(%esp),%esi
0x07fe41ed:  mov    0x24(%esp),%ecx
0x07fe41f1:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe41f1:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe41f3:  movl   $0x5f4d535f,(%ebx)
0x07fe41f9:  movb   $0x1f,0x5(%ebx)
0x07fe41fd:  movb   $0x2,0x6(%ebx)
0x07fe4201:  movb   $0x4,0x7(%ebx)
0x07fe4205:  mov    0x14(%esp),%eax
0x07fe4209:  mov    %ax,0x8(%ebx)
0x07fe420d:  movb   $0x0,0xa(%ebx)
0x07fe4211:  lea    0xb(%ebx),%eax
0x07fe4214:  mov    $0x5,%cl
0x07fe4216:  xor    %edx,%edx
0x07fe4218:  call   0xf172f

----------------
IN: 
0x07fe421d:  lea    0x10(%ebx),%esi
0x07fe4220:  movl   $0x494d445f,0x10(%ebx)
0x07fe4227:  movb   $0x5f,0x14(%ebx)
0x07fe422b:  mov    0x20(%esp),%eax
0x07fe422f:  mov    %ax,0x16(%ebx)
0x07fe4233:  mov    0x28(%esp),%eax
0x07fe4237:  mov    %eax,0x18(%ebx)
0x07fe423a:  mov    0x18(%esp),%eax
0x07fe423e:  mov    %ax,0x1c(%ebx)
0x07fe4242:  movb   $0x24,0x1e(%ebx)
0x07fe4246:  mov    $0x10,%edx
0x07fe424b:  mov    %ebx,%eax
0x07fe424d:  call   0xf1a9c

----------------
IN: 
0x07fe4252:  sub    %al,0x4(%ebx)
0x07fe4255:  movzbl 0x5(%ebx),%edx
0x07fe4259:  sub    $0x10,%edx
0x07fe425c:  mov    %esi,%eax
0x07fe425e:  call   0xf1a9c

----------------
IN: 
0x07fe4263:  sub    %al,0x15(%ebx)
0x07fe4266:  mov    %ebx,0x7fefe93
0x07fe426c:  mov    0x24(%esp),%esi
0x07fe4270:  mov    %esi,0xc(%esp)
0x07fe4274:  mov    0x28(%esp),%eax
0x07fe4278:  mov    %eax,0x8(%esp)
0x07fe427c:  mov    %ebx,0x4(%esp)
0x07fe4280:  movl   $0xf45c4,(%esp)
0x07fe4287:  call   0xf2058

----------------
IN: 
0x07fe428c:  mov    0x1c(%esp),%eax
0x07fe4290:  call   0x7fe0ca5

----------------
IN: 
0x07fe4295:  jmp    0x7fe42c5

----------------
IN: 
0x07fe42c5:  lea    -0xc(%ebp),%esp
0x07fe42c8:  pop    %ebx
0x07fe42c9:  pop    %esi
0x07fe42ca:  pop    %edi
0x07fe42cb:  pop    %ebp
0x07fe42cc:  ret    

----------------
IN: 
0x07fed1a1:  call   0x7fe50a0

----------------
IN: 
0x07fe50a0:  push   %ebp
0x07fe50a1:  push   %edi
0x07fe50a2:  push   %esi
0x07fe50a3:  push   %ebx
0x07fe50a4:  sub    $0xa8,%esp
0x07fe50aa:  mov    $0x7fee64f,%eax
0x07fe50af:  call   0xf1cab

----------------
IN: 
0x07fe50b4:  mov    %eax,0x38(%esp)
0x07fe50b8:  test   %eax,%eax
0x07fe50ba:  je     0x7fe5c9e

----------------
IN: 
0x07fe50c0:  mov    $0x74,%eax
0x07fe50c5:  call   0x7fe0c5e

----------------
IN: 
0x07fe0c5e:  push   %edx
0x07fe0c5f:  movl   $0x10,(%esp)
0x07fe0c66:  mov    %eax,%ecx
0x07fe0c68:  or     $0xffffffff,%edx
0x07fe0c6b:  mov    $0x7fefe73,%eax
0x07fe0c70:  call   0x7fe0b6f

----------------
IN: 
0x07fe0c75:  pop    %ecx
0x07fe0c76:  ret    

----------------
IN: 
0x07fe50ca:  mov    %eax,0x24(%esp)
0x07fe50ce:  mov    $0x40,%edx
0x07fe50d3:  mov    $0x40,%eax
0x07fe50d8:  call   0x7fe0c0a

----------------
IN: 
0x07fe0c0a:  push   %ecx
0x07fe0c0b:  mov    %eax,(%esp)
0x07fe0c0e:  mov    %edx,%ecx
0x07fe0c10:  or     $0xffffffff,%edx
0x07fe0c13:  mov    $0x7fefe73,%eax
0x07fe0c18:  call   0x7fe0b6f

----------------
IN: 
0x07fe0c1d:  pop    %edx
0x07fe0c1e:  ret    

----------------
IN: 
0x07fe50dd:  mov    %eax,%ebx
0x07fe50df:  test   %eax,%eax
0x07fe50e1:  je     0x7fe50ea

----------------
IN: 
0x07fe50e3:  cmpl   $0x0,0x24(%esp)
0x07fe50e8:  jne    0x7fe5103

----------------
IN: 
0x07fe5103:  mov    $0x40,%ecx
0x07fe5108:  xor    %edx,%edx
0x07fe510a:  call   0xf172f

----------------
IN: 
0x07fe510f:  movl   $0x53434146,(%ebx)
0x07fe5115:  movl   $0x40,0x4(%ebx)
0x07fe511c:  mov    $0x74,%ecx
0x07fe5121:  xor    %edx,%edx
0x07fe5123:  mov    0x24(%esp),%eax
0x07fe5127:  call   0xf172f

----------------
IN: 
0x07fe512c:  mov    0x24(%esp),%eax
0x07fe5130:  mov    %ebx,0x24(%eax)
0x07fe5133:  movl   $0x0,0x28(%eax)
0x07fe513a:  mov    %eax,%ecx
0x07fe513c:  mov    0x38(%esp),%edx
0x07fe5140:  mov    $0x7fef853,%eax
0x07fe5145:  call   0xf17ef

----------------
IN: 
0x07fe0fd6:  movb   $0x1,0x2c(%edx)
0x07fe0fda:  movb   $0x0,0x2d(%edx)
0x07fe0fde:  movw   $0x9,0x2e(%edx)
0x07fe0fe4:  movl   $0xb2,0x30(%edx)
0x07fe0feb:  movb   $0xf1,0x34(%edx)
0x07fe0fef:  movb   $0xf0,0x35(%edx)
0x07fe0ff3:  movl   $0xb000,0x38(%edx)
0x07fe0ffa:  movl   $0xb004,0x40(%edx)
0x07fe1001:  movl   $0xb008,0x4c(%edx)
0x07fe1008:  movl   $0xafe0,0x50(%edx)
0x07fe100f:  movb   $0x4,0x58(%edx)
0x07fe1013:  movb   $0x2,0x59(%edx)
0x07fe1017:  movb   $0x4,0x5b(%edx)
0x07fe101b:  movb   $0x4,0x5c(%edx)
0x07fe101f:  movw   $0xfff,0x60(%edx)
0x07fe1025:  movw   $0xfff,0x62(%edx)
0x07fe102b:  movl   $0x80a5,0x70(%edx)
0x07fe1032:  ret    

----------------
IN: 
0x07fe514a:  mov    $0x74,%ecx
0x07fe514f:  mov    $0x50434146,%edx
0x07fe5154:  mov    0x24(%esp),%eax
0x07fe5158:  call   0x7fe1d5e

----------------
IN: 
0x07fe1d5e:  push   %ebx
0x07fe1d5f:  mov    %eax,%ebx
0x07fe1d61:  mov    %edx,%eax
0x07fe1d63:  mov    %ecx,%edx
0x07fe1d65:  mov    %eax,(%ebx)
0x07fe1d67:  mov    %ecx,0x4(%ebx)
0x07fe1d6a:  movb   $0x1,0x8(%ebx)
0x07fe1d6e:  movl   $0x48434f42,0xa(%ebx)
0x07fe1d75:  movw   $0x2053,0xe(%ebx)
0x07fe1d7b:  movl   $0x43505842,0x10(%ebx)
0x07fe1d82:  mov    %eax,0x14(%ebx)
0x07fe1d85:  movl   $0x1,0x18(%ebx)
0x07fe1d8c:  movl   $0x43505842,0x1c(%ebx)
0x07fe1d93:  movl   $0x1,0x20(%ebx)
0x07fe1d9a:  mov    %ebx,%eax
0x07fe1d9c:  call   0xf1a9c

----------------
IN: 
0x07fe1da1:  sub    %al,0x9(%ebx)
0x07fe1da4:  pop    %ebx
0x07fe1da5:  ret    

----------------
IN: 
0x07fe515d:  mov    0x24(%esp),%eax
0x07fe5161:  mov    %eax,0x58(%esp)
0x07fe5165:  xor    %edx,%edx
0x07fe5167:  test   %eax,%eax
0x07fe5169:  setne  %dl
0x07fe516c:  mov    %edx,0x28(%esp)
0x07fe5170:  mov    %edx,0x1c(%esp)
0x07fe5174:  mov    0xfd0b8,%ecx
0x07fe517a:  mov    %ecx,0x10(%esp)
0x07fe517e:  cmp    $0xff,%ecx
0x07fe5184:  jbe    0x7fe518e

----------------
IN: 
0x07fe518e:  imul   $0x61,0x10(%esp),%eax
0x07fe5193:  add    $0x6d4,%eax
0x07fe5198:  mov    %eax,0x14(%esp)
0x07fe519c:  call   0x7fe0c5e

----------------
IN: 
0x07fe51a1:  mov    %eax,%ebp
0x07fe51a3:  test   %eax,%eax
0x07fe51a5:  jne    0x7fe51bb

----------------
IN: 
0x07fe51bb:  lea    0x44(%esp),%edx
0x07fe51bf:  mov    $0xf4757,%eax
0x07fe51c4:  call   0x7fe2e3b

----------------
IN: 
0x07fe2e56:  lea    0x1(%esi),%eax
0x07fe2e59:  call   0x7fe0bf1

----------------
IN: 
0x07fe2e5e:  mov    %eax,%ebx
0x07fe2e60:  test   %eax,%eax
0x07fe2e62:  jne    0x7fe2e75

----------------
IN: 
0x07fe2e75:  mov    %esi,%ecx
0x07fe2e77:  mov    %eax,%edx
0x07fe2e79:  mov    %edi,%eax
0x07fe2e7b:  call   *0x88(%edi)

----------------
IN: 
0x07fe1518:  push   %edi
0x07fe1519:  push   %esi
0x07fe151a:  push   %ebx
0x07fe151b:  mov    %eax,%ebx
0x07fe151d:  mov    0x84(%eax),%esi
0x07fe1523:  cmp    %ecx,%esi
0x07fe1525:  ja     0x7fe1545

----------------
IN: 
0x07fe1527:  mov    %edx,%edi
0x07fe1529:  movzwl 0x8c(%eax),%eax
0x07fe1530:  mov    $0x510,%edx
0x07fe1535:  out    %ax,(%dx)
0x07fe1537:  mov    %esi,%ecx
0x07fe1539:  mov    $0x11,%dl
0x07fe153b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe153b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe153d:  mov    0x84(%ebx),%eax
0x07fe1543:  jmp    0x7fe1548

----------------
IN: 
0x07fe1548:  pop    %ebx
0x07fe1549:  pop    %esi
0x07fe154a:  pop    %edi
0x07fe154b:  ret    

----------------
IN: 
0x07fe2e81:  test   %eax,%eax
0x07fe2e83:  jns    0x7fe2e8e

----------------
IN: 
0x07fe2e8e:  test   %ebp,%ebp
0x07fe2e90:  je     0x7fe2e95

----------------
IN: 
0x07fe2e92:  mov    %esi,0x0(%ebp)
0x07fe2e95:  movb   $0x0,(%ebx,%esi,1)
0x07fe2e99:  jmp    0x7fe2e9d

----------------
IN: 
0x07fe2e9d:  mov    %ebx,%eax
0x07fe2e9f:  pop    %ebx
0x07fe2ea0:  pop    %esi
0x07fe2ea1:  pop    %edi
0x07fe2ea2:  pop    %ebp
0x07fe2ea3:  ret    

----------------
IN: 
0x07fe51c9:  test   %eax,%eax
0x07fe51cb:  je     0x7fe51d4

----------------
IN: 
0x07fe51cd:  cmpl   $0x6,0x44(%esp)
0x07fe51d2:  je     0x7fe51f6

----------------
IN: 
0x07fe51f6:  mov    $0x7fef89b,%esi
0x07fe51fb:  mov    $0x4e,%ecx
0x07fe5200:  mov    %ebp,%edi
0x07fe5202:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5202:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5204:  cmpb   $0x0,0x3(%eax)
0x07fe5208:  js     0x7fe520e

----------------
IN: 
0x07fe520e:  mov    0x4(%eax),%al
0x07fe5211:  test   %al,%al
0x07fe5213:  js     0x7fe521b

----------------
IN: 
0x07fe521b:  and    $0x7f,%eax
0x07fe521e:  mov    %al,0x3f(%ebp)
0x07fe5221:  mov    %al,0x3d(%ebp)
0x07fe5224:  movb   $0x10,0x4e(%ebp)
0x07fe5228:  mov    0x14(%esp),%eax
0x07fe522c:  sub    $0x4f,%eax
0x07fe522f:  mov    %eax,%edx
0x07fe5231:  sar    $0xc,%edx
0x07fe5234:  mov    %dl,0x51(%ebp)
0x07fe5237:  mov    %eax,%edx
0x07fe5239:  sar    $0x4,%edx
0x07fe523c:  mov    %dl,0x50(%ebp)
0x07fe523f:  and    $0xf,%eax
0x07fe5242:  or     $0xffffff80,%eax
0x07fe5245:  mov    %al,0x4f(%ebp)
0x07fe5248:  movb   $0x5f,0x52(%ebp)
0x07fe524c:  movb   $0x53,0x53(%ebp)
0x07fe5250:  movb   $0x42,0x54(%ebp)
0x07fe5254:  movb   $0x5f,0x55(%ebp)
0x07fe5258:  lea    0x56(%ebp),%edx
0x07fe525b:  mov    %edx,0x20(%esp)
0x07fe525f:  mov    %edx,%ebx
0x07fe5261:  xor    %edx,%edx
0x07fe5263:  jmp    0x7fe52a0

----------------
IN: 
0x07fe52a0:  cmp    0x10(%esp),%edx
0x07fe52a4:  jl     0x7fe5265

----------------
IN: 
0x07fe5265:  mov    %ebx,%edi
0x07fe5267:  mov    $0x7fefd4b,%esi
0x07fe526c:  mov    $0x15,%ecx
0x07fe5271:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5271:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5273:  mov    %edx,%eax
0x07fe5275:  sar    $0x4,%eax
0x07fe5278:  mov    %edx,0xc(%esp)
0x07fe527c:  call   0x7fe1090

----------------
IN: 
0x07fe1090:  and    $0xf,%eax
0x07fe1093:  cmp    $0x9,%eax
0x07fe1096:  ja     0x7fe109c

----------------
IN: 
0x07fe1098:  add    $0x30,%eax
0x07fe109b:  ret    

----------------
IN: 
0x07fe5281:  mov    %al,0x6(%ebx)
0x07fe5284:  mov    0xc(%esp),%edx
0x07fe5288:  mov    %edx,%eax
0x07fe528a:  call   0x7fe1090

----------------
IN: 
0x07fe528f:  mov    %al,0x7(%ebx)
0x07fe5292:  mov    0xc(%esp),%edx
0x07fe5296:  mov    %dl,0x8(%ebx)
0x07fe5299:  mov    %dl,0x14(%ebx)
0x07fe529c:  add    $0x54,%ebx
0x07fe529f:  inc    %edx
0x07fe52a0:  cmp    0x10(%esp),%edx
0x07fe52a4:  jl     0x7fe5265

----------------
IN: 
0x07fe52a6:  mov    0x10(%esp),%esi
0x07fe52aa:  not    %esi
0x07fe52ac:  sar    $0x1f,%esi
0x07fe52af:  and    0x10(%esp),%esi
0x07fe52b3:  imul   $0x54,%esi,%eax
0x07fe52b6:  add    0x20(%esp),%eax
0x07fe52ba:  movl   $0x2,0x8(%esp)
0x07fe52c2:  movl   $0xf476e,0x4(%esp)
0x07fe52ca:  mov    0x10(%esp),%ecx
0x07fe52ce:  mov    %ecx,(%esp)
0x07fe52d1:  xor    %ecx,%ecx
0x07fe52d3:  mov    $0xf4769,%edx
0x07fe52d8:  call   0x7fe1e16

----------------
IN: 
0x07fe1e16:  push   %ebp
0x07fe1e17:  push   %edi
0x07fe1e18:  push   %esi
0x07fe1e19:  push   %ebx
0x07fe1e1a:  sub    $0x8,%esp
0x07fe1e1d:  mov    0x1c(%esp),%ebp
0x07fe1e21:  sub    %ecx,%ebp
0x07fe1e23:  movb   $0x14,(%eax)
0x07fe1e26:  imul   $0xc,%ebp,%ebx
0x07fe1e29:  lea    0x7(%ebx),%edi
0x07fe1e2c:  mov    %edi,%esi
0x07fe1e2e:  sar    $0x4,%esi
0x07fe1e31:  mov    %esi,%ebx
0x07fe1e33:  mov    %bl,0x2(%eax)
0x07fe1e36:  mov    %edi,%ebx
0x07fe1e38:  and    $0xf,%ebx
0x07fe1e3b:  or     $0x40,%ebx
0x07fe1e3e:  mov    %bl,0x1(%eax)
0x07fe1e41:  mov    (%edx),%edx
0x07fe1e43:  mov    %edx,0x3(%eax)
0x07fe1e46:  movb   $0x2,0x7(%eax)
0x07fe1e4a:  lea    0x8(%eax),%edx
0x07fe1e4d:  mov    0x24(%esp),%edi
0x07fe1e51:  add    %edx,%edi
0x07fe1e53:  mov    %ecx,%esi
0x07fe1e55:  mov    %edx,%ebx
0x07fe1e57:  lea    0x0(%ebp,%ecx,1),%ecx
0x07fe1e5b:  mov    %ecx,0x4(%esp)
0x07fe1e5f:  jmp    0x7fe1eab

----------------
IN: 
0x07fe1eab:  add    $0xc,%edi
0x07fe1eae:  mov    0x4(%esp),%eax
0x07fe1eb2:  sub    %esi,%eax
0x07fe1eb4:  test   %eax,%eax
0x07fe1eb6:  jg     0x7fe1e61

----------------
IN: 
0x07fe1e61:  movb   $0xa0,(%ebx)
0x07fe1e64:  movb   $0xb,0x1(%ebx)
0x07fe1e68:  movb   $0x93,0x2(%ebx)
0x07fe1e6c:  movb   $0x68,0x3(%ebx)
0x07fe1e70:  movb   $0xa,0x4(%ebx)
0x07fe1e74:  mov    %esi,%eax
0x07fe1e76:  mov    %al,0x5(%ebx)
0x07fe1e79:  movb   $0x86,0x6(%ebx)
0x07fe1e7d:  mov    0x20(%esp),%ecx
0x07fe1e81:  mov    (%ecx),%eax
0x07fe1e83:  mov    %eax,0x7(%ebx)
0x07fe1e86:  mov    %esi,%eax
0x07fe1e88:  sar    $0x4,%eax
0x07fe1e8b:  mov    %edx,(%esp)
0x07fe1e8e:  call   0x7fe1090

----------------
IN: 
0x07fe1e93:  mov    %al,-0x5(%edi)
0x07fe1e96:  mov    %esi,%eax
0x07fe1e98:  call   0x7fe1090

----------------
IN: 
0x07fe1e9d:  mov    %al,-0x4(%edi)
0x07fe1ea0:  movb   $0x69,0xb(%ebx)
0x07fe1ea4:  add    $0xc,%ebx
0x07fe1ea7:  inc    %esi
0x07fe1ea8:  mov    (%esp),%edx
0x07fe1eab:  add    $0xc,%edi
0x07fe1eae:  mov    0x4(%esp),%eax
0x07fe1eb2:  sub    %esi,%eax
0x07fe1eb4:  test   %eax,%eax
0x07fe1eb6:  jg     0x7fe1e61

----------------
IN: 
0x07fe1eb8:  mov    %ebp,%eax
0x07fe1eba:  not    %eax
0x07fe1ebc:  sar    $0x1f,%eax
0x07fe1ebf:  and    %ebp,%eax
0x07fe1ec1:  imul   $0xc,%eax,%eax
0x07fe1ec4:  add    %edx,%eax
0x07fe1ec6:  add    $0x8,%esp
0x07fe1ec9:  pop    %ebx
0x07fe1eca:  pop    %esi
0x07fe1ecb:  pop    %edi
0x07fe1ecc:  pop    %ebp
0x07fe1ecd:  ret    

----------------
IN: 
0x07fe52dd:  movb   $0x8,(%eax)
0x07fe52e0:  movb   $0x43,0x1(%eax)
0x07fe52e4:  movb   $0x50,0x2(%eax)
0x07fe52e8:  movb   $0x4f,0x3(%eax)
0x07fe52ec:  movb   $0x4e,0x4(%eax)
0x07fe52f0:  movb   $0x12,0x5(%eax)
0x07fe52f4:  mov    0x10(%esp),%edx
0x07fe52f8:  add    $0x3,%edx
0x07fe52fb:  mov    %edx,%ecx
0x07fe52fd:  sar    $0x4,%ecx
0x07fe5300:  mov    %cl,0x7(%eax)
0x07fe5303:  and    $0xf,%edx
0x07fe5306:  or     $0x40,%edx
0x07fe5309:  mov    %dl,0x6(%eax)
0x07fe530c:  mov    0x10(%esp),%dl
0x07fe5310:  mov    %dl,0x8(%eax)
0x07fe5313:  lea    0x9(%eax),%edi
0x07fe5316:  xor    %ebx,%ebx
0x07fe5318:  jmp    0x7fe5329

----------------
IN: 
0x07fe5329:  cmp    0x10(%esp),%ebx
0x07fe532d:  jl     0x7fe531a

----------------
IN: 
0x07fe531a:  movzbl %bl,%eax
0x07fe531d:  call   0x7fe0d8a

----------------
IN: 
0x07fe5322:  test   %eax,%eax
0x07fe5324:  setne  (%edi,%ebx,1)
0x07fe5328:  inc    %ebx
0x07fe5329:  cmp    0x10(%esp),%ebx
0x07fe532d:  jl     0x7fe531a

----------------
IN: 
0x07fe532f:  lea    (%edi,%esi,1),%ebx
0x07fe5332:  mov    $0x30,%eax
0x07fe5337:  call   0x7fe0c5e

----------------
IN: 
0x07fe533c:  mov    0x7fefcf7,%edx
0x07fe5342:  mov    0x7fefcfb,%ecx
0x07fe5348:  mov    %edx,(%eax)
0x07fe534a:  mov    %ecx,0x4(%eax)
0x07fe534d:  movl   $0xfebfffff,0x8(%eax)
0x07fe5354:  movl   $0x0,0xc(%eax)
0x07fe535b:  mov    $0xfec00000,%esi
0x07fe5360:  xor    %edi,%edi
0x07fe5362:  sub    %edx,%esi
0x07fe5364:  sbb    %ecx,%edi
0x07fe5366:  mov    %esi,0x10(%eax)
0x07fe5369:  mov    %edi,0x14(%eax)
0x07fe536c:  mov    0x7fefd07,%edx
0x07fe5372:  mov    0x7fefd0b,%ecx
0x07fe5378:  mov    %edx,0x18(%eax)
0x07fe537b:  mov    %ecx,0x1c(%eax)
0x07fe537e:  mov    0x7fefd0f,%esi
0x07fe5384:  mov    0x7fefd13,%edi
0x07fe538a:  mov    %esi,%edx
0x07fe538c:  mov    %edi,%ecx
0x07fe538e:  add    $0xffffffff,%edx
0x07fe5391:  adc    $0xffffffff,%ecx
0x07fe5394:  mov    %edx,0x20(%eax)
0x07fe5397:  mov    %ecx,0x24(%eax)
0x07fe539a:  sub    0x7fefd07,%esi
0x07fe53a0:  sbb    0x7fefd0b,%edi
0x07fe53a6:  mov    %esi,0x28(%eax)
0x07fe53a9:  mov    %edi,0x2c(%eax)
0x07fe53ac:  movb   $0x5b,(%ebx)
0x07fe53af:  movb   $0x80,0x1(%ebx)
0x07fe53b3:  movb   $0x42,0x2(%ebx)
0x07fe53b7:  movb   $0x44,0x3(%ebx)
0x07fe53bb:  movb   $0x41,0x4(%ebx)
0x07fe53bf:  movb   $0x54,0x5(%ebx)
0x07fe53c3:  movb   $0x0,0x6(%ebx)
0x07fe53c7:  movb   $0xc,0x7(%ebx)
0x07fe53cb:  mov    %eax,0x8(%ebx)
0x07fe53ce:  movb   $0xc,0xc(%ebx)
0x07fe53d2:  movl   $0x30,0xd(%ebx)
0x07fe53d9:  movb   $0x10,0x11(%ebx)
0x07fe53dd:  mov    %ebp,%eax
0x07fe53df:  sub    %ebx,%eax
0x07fe53e1:  mov    0x14(%esp),%ecx
0x07fe53e5:  lea    -0x12(%eax,%ecx,1),%eax
0x07fe53e9:  mov    %eax,%edx
0x07fe53eb:  sar    $0xc,%edx
0x07fe53ee:  mov    %dl,0x14(%ebx)
0x07fe53f1:  mov    %eax,%edx
0x07fe53f3:  sar    $0x4,%edx
0x07fe53f6:  mov    %dl,0x13(%ebx)
0x07fe53f9:  and    $0xf,%eax
0x07fe53fc:  or     $0xffffff80,%eax
0x07fe53ff:  mov    %al,0x12(%ebx)
0x07fe5402:  movb   $0x50,0x15(%ebx)
0x07fe5406:  movb   $0x43,0x16(%ebx)
0x07fe540a:  movb   $0x49,0x17(%ebx)
0x07fe540e:  movb   $0x30,0x18(%ebx)
0x07fe5412:  lea    0x19(%ebx),%eax
0x07fe5415:  mov    %eax,0x10(%esp)
0x07fe5419:  mov    $0xffffae0c,%edx
0x07fe541e:  in     (%dx),%eax
0x07fe541f:  mov    %eax,0x2c(%esp)
0x07fe5423:  movl   $0x1,0x14(%esp)
0x07fe542b:  movl   $0x1,0x20(%esp)
0x07fe5433:  mov    0x14(%esp),%cl
0x07fe5437:  shll   %cl,0x20(%esp)
0x07fe543b:  mov    0x2c(%esp),%eax
0x07fe543f:  and    %eax,0x20(%esp)
0x07fe5443:  mov    $0x7fefdcf,%esi
0x07fe5448:  mov    $0xa,%ecx
0x07fe544d:  mov    0x10(%esp),%edi
0x07fe5451:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5451:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5453:  mov    0x14(%esp),%eax
0x07fe5457:  sar    $0x4,%eax
0x07fe545a:  call   0x7fe1090

----------------
IN: 
0x07fe545f:  mov    0x10(%esp),%edx
0x07fe5463:  mov    %al,0x4(%edx)
0x07fe5466:  mov    0x14(%esp),%eax
0x07fe546a:  call   0x7fe1090

----------------
IN: 
0x07fe546f:  mov    0x10(%esp),%ecx
0x07fe5473:  mov    %al,0x5(%ecx)
0x07fe5476:  mov    0x14(%esp),%al
0x07fe547a:  mov    %al,0xd(%ecx)
0x07fe547d:  mov    %al,0x16(%ecx)
0x07fe5480:  mov    %ecx,%esi
0x07fe5482:  add    $0x1a,%esi
0x07fe5485:  mov    $0x4,%ecx
0x07fe548a:  mov    $0xf4773,%edx
0x07fe548f:  mov    %esi,%eax
0x07fe5491:  call   0xf16eb

----------------
IN: 
0x07fe5496:  test   %eax,%eax
0x07fe5498:  je     0x7fe54b6

----------------
IN: 
0x07fe54b6:  cmpl   $0x0,0x20(%esp)
0x07fe54bb:  jne    0x7fe54c3

----------------
IN: 
0x07fe54bd:  movl   $0x5f304a45,(%esi)
0x07fe54c3:  addl   $0x28,0x10(%esp)
0x07fe54c8:  incl   0x14(%esp)
0x07fe54cc:  cmpl   $0x20,0x14(%esp)
0x07fe54d1:  jne    0x7fe542b

----------------
IN: 
0x07fe542b:  movl   $0x1,0x20(%esp)
0x07fe5433:  mov    0x14(%esp),%cl
0x07fe5437:  shll   %cl,0x20(%esp)
0x07fe543b:  mov    0x2c(%esp),%eax
0x07fe543f:  and    %eax,0x20(%esp)
0x07fe5443:  mov    $0x7fefdcf,%esi
0x07fe5448:  mov    $0xa,%ecx
0x07fe544d:  mov    0x10(%esp),%edi
0x07fe5451:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe54c3:  addl   $0x28,0x10(%esp)
0x07fe54c8:  incl   0x14(%esp)
0x07fe54cc:  cmpl   $0x20,0x14(%esp)
0x07fe54d1:  jne    0x7fe542b

----------------
IN: 
0x07fe109c:  add    $0x37,%eax
0x07fe109f:  ret    

----------------
IN: 
0x07fe54d7:  lea    0x4f1(%ebx),%eax
0x07fe54dd:  movl   $0x1,0x8(%esp)
0x07fe54e5:  movl   $0xf47aa,0x4(%esp)
0x07fe54ed:  movl   $0x20,(%esp)
0x07fe54f4:  mov    $0x1,%ecx
0x07fe54f9:  mov    $0xf47a5,%edx
0x07fe54fe:  call   0x7fe1e16

----------------
IN: 
0x07fe5503:  sub    %ebp,%eax
0x07fe5505:  mov    %eax,%ecx
0x07fe5507:  mov    $0x54445353,%edx
0x07fe550c:  mov    %ebp,%eax
0x07fe550e:  call   0x7fe1d5e

----------------
IN: 
0x07fe5513:  mov    0x28(%esp),%ecx
0x07fe5517:  mov    %ebp,0x58(%esp,%ecx,4)
0x07fe551b:  test   %ebp,%ebp
0x07fe551d:  je     0x7fe5524

----------------
IN: 
0x07fe551f:  inc    %ecx
0x07fe5520:  mov    %ecx,0x1c(%esp)
0x07fe5524:  mov    0xfd0b8,%eax
0x07fe5529:  lea    0xde(,%eax,8),%ebx
0x07fe5530:  mov    %ebx,%eax
0x07fe5532:  call   0x7fe0c5e

----------------
IN: 
0x07fe5537:  mov    %eax,%ebp
0x07fe5539:  test   %eax,%eax
0x07fe553b:  jne    0x7fe5551

----------------
IN: 
0x07fe5551:  mov    %ebx,%ecx
0x07fe5553:  xor    %edx,%edx
0x07fe5555:  call   0xf172f

----------------
IN: 
0x07fe555a:  movl   $0xfee00000,0x24(%ebp)
0x07fe5561:  movl   $0x1,0x28(%ebp)
0x07fe5568:  lea    0x2c(%ebp),%esi
0x07fe556b:  mov    0xfd0b8,%edx
0x07fe5571:  mov    %edx,0x10(%esp)
0x07fe5575:  mov    %esi,%edi
0x07fe5577:  xor    %ebx,%ebx
0x07fe5579:  jmp    0x7fe559f

----------------
IN: 
0x07fe559f:  cmp    0x10(%esp),%ebx
0x07fe55a3:  jne    0x7fe557b

----------------
IN: 
0x07fe557b:  movb   $0x0,(%edi)
0x07fe557e:  movb   $0x8,0x1(%edi)
0x07fe5582:  mov    %bl,0x2(%edi)
0x07fe5585:  mov    %bl,0x3(%edi)
0x07fe5588:  movzbl %bl,%eax
0x07fe558b:  call   0x7fe0d8a

----------------
IN: 
0x07fe5590:  test   %eax,%eax
0x07fe5592:  setne  %al
0x07fe5595:  movzbl %al,%eax
0x07fe5598:  mov    %eax,0x4(%edi)
0x07fe559b:  add    $0x8,%edi
0x07fe559e:  inc    %ebx
0x07fe559f:  cmp    0x10(%esp),%ebx
0x07fe55a3:  jne    0x7fe557b

----------------
IN: 
0x07fe55a5:  lea    (%esi,%ebx,8),%esi
0x07fe55a8:  movb   $0x1,(%esi)
0x07fe55ab:  movb   $0xc,0x1(%esi)
0x07fe55af:  movb   $0x0,0x2(%esi)
0x07fe55b3:  movl   $0xfec00000,0x4(%esi)
0x07fe55ba:  movl   $0x0,0x8(%esi)
0x07fe55c1:  lea    0xc(%esi),%ebx
0x07fe55c4:  cmpl   $0x0,0x7fefe7b
0x07fe55cb:  je     0x7fe5617

----------------
IN: 
0x07fe55cd:  mov    $0x510,%edx
0x07fe55d2:  mov    $0xffff8002,%eax
0x07fe55d7:  out    %ax,(%dx)
0x07fe55d9:  mov    $0x1,%ecx
0x07fe55de:  lea    0x50(%esp),%edi
0x07fe55e2:  mov    $0x11,%dl
0x07fe55e4:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe55e4:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe55e6:  cmpb   $0x0,0x50(%esp)
0x07fe55eb:  je     0x7fe5617

----------------
IN: 
0x07fe55ed:  mov    $0xa,%ecx
0x07fe55f2:  xor    %edx,%edx
0x07fe55f4:  mov    %ebx,%eax
0x07fe55f6:  call   0xf172f

----------------
IN: 
0x07fe55fb:  movb   $0x2,0xc(%esi)
0x07fe55ff:  movb   $0xa,0xd(%esi)
0x07fe5603:  movb   $0x0,0xf(%esi)
0x07fe5607:  movl   $0x2,0x10(%esi)
0x07fe560e:  movw   $0x0,0x14(%esi)
0x07fe5614:  lea    0x16(%esi),%ebx
0x07fe5617:  mov    $0x1,%esi
0x07fe561c:  mov    $0xe20,%eax
0x07fe5621:  bt     %esi,%eax
0x07fe5624:  jae    0x7fe564c

----------------
IN: 
0x07fe564c:  inc    %esi
0x07fe564d:  cmp    $0x10,%esi
0x07fe5650:  jne    0x7fe561c

----------------
IN: 
0x07fe561c:  mov    $0xe20,%eax
0x07fe5621:  bt     %esi,%eax
0x07fe5624:  jae    0x7fe564c

----------------
IN: 
0x07fe5626:  mov    $0xa,%ecx
0x07fe562b:  xor    %edx,%edx
0x07fe562d:  mov    %ebx,%eax
0x07fe562f:  call   0xf172f

----------------
IN: 
0x07fe5634:  movb   $0x2,(%ebx)
0x07fe5637:  movb   $0xa,0x1(%ebx)
0x07fe563b:  mov    %esi,%ecx
0x07fe563d:  mov    %cl,0x3(%ebx)
0x07fe5640:  mov    %esi,0x4(%ebx)
0x07fe5643:  movw   $0xd,0x8(%ebx)
0x07fe5649:  add    $0xa,%ebx
0x07fe564c:  inc    %esi
0x07fe564d:  cmp    $0x10,%esi
0x07fe5650:  jne    0x7fe561c

----------------
IN: 
0x07fe5652:  movb   $0x4,(%ebx)
0x07fe5655:  movb   $0x6,0x1(%ebx)
0x07fe5659:  movb   $0xff,0x2(%ebx)
0x07fe565d:  movw   $0x0,0x3(%ebx)
0x07fe5663:  movb   $0x1,0x5(%ebx)
0x07fe5667:  lea    0x6(%ebx),%ecx
0x07fe566a:  sub    %ebp,%ecx
0x07fe566c:  mov    $0x43495041,%edx
0x07fe5671:  mov    %ebp,%eax
0x07fe5673:  call   0x7fe1d5e

----------------
IN: 
0x07fe5678:  mov    0x1c(%esp),%eax
0x07fe567c:  mov    %ebp,0x58(%esp,%eax,4)
0x07fe5680:  cmp    $0x1,%ebp
0x07fe5683:  sbb    $0xffffffff,%eax
0x07fe5686:  mov    %eax,0x1c(%esp)
0x07fe568a:  mov    0xfed00000,%eax
0x07fe568f:  shr    $0x10,%eax
0x07fe5692:  mov    0xfed00004,%edx
0x07fe5698:  cmp    $0xffff,%eax
0x07fe569d:  je     0x7fe5702

----------------
IN: 
0x07fe569f:  test   %eax,%eax
0x07fe56a1:  je     0x7fe5702

----------------
IN: 
0x07fe56a3:  lea    -0x1(%edx),%eax
0x07fe56a6:  cmp    $0x5f5e0ff,%eax
0x07fe56ab:  ja     0x7fe5702

----------------
IN: 
0x07fe56ad:  mov    $0x38,%eax
0x07fe56b2:  call   0x7fe0c5e

----------------
IN: 
0x07fe56b7:  mov    %eax,%ebx
0x07fe56b9:  test   %eax,%eax
0x07fe56bb:  jne    0x7fe56ce

----------------
IN: 
0x07fe56ce:  mov    $0x38,%ecx
0x07fe56d3:  xor    %edx,%edx
0x07fe56d5:  call   0xf172f

----------------
IN: 
0x07fe56da:  movl   $0x8086a201,0x24(%ebx)
0x07fe56e1:  movl   $0xfed00000,0x2c(%ebx)
0x07fe56e8:  movl   $0x0,0x30(%ebx)
0x07fe56ef:  mov    $0x38,%ecx
0x07fe56f4:  mov    $0x54455048,%edx
0x07fe56f9:  mov    %ebx,%eax
0x07fe56fb:  call   0x7fe1d5e

----------------
IN: 
0x07fe5700:  jmp    0x7fe5704

----------------
IN: 
0x07fe5704:  mov    0x1c(%esp),%edx
0x07fe5708:  mov    %ebx,0x58(%esp,%edx,4)
0x07fe570c:  cmp    $0x1,%ebx
0x07fe570f:  sbb    $0xffffffff,%edx
0x07fe5712:  mov    %edx,0x1c(%esp)
0x07fe5716:  mov    $0x510,%edx
0x07fe571b:  mov    $0xd,%eax
0x07fe5720:  out    %ax,(%dx)
0x07fe5722:  mov    $0x8,%ecx
0x07fe5727:  lea    0x50(%esp),%edi
0x07fe572b:  mov    $0x11,%dl
0x07fe572d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe572d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe572f:  mov    0x50(%esp),%ecx
0x07fe5733:  mov    %ecx,0x34(%esp)
0x07fe5737:  test   %ecx,%ecx
0x07fe5739:  je     0x7fe5a53

----------------
IN: 
0x07fe5a53:  xor    %ebp,%ebp
0x07fe5a55:  mov    0x1c(%esp),%ecx
0x07fe5a59:  mov    %ebp,0x58(%esp,%ecx,4)
0x07fe5a5d:  cmp    $0x1,%ebp
0x07fe5a60:  sbb    $0xffffffff,%ecx
0x07fe5a63:  mov    %ecx,0x1c(%esp)
0x07fe5a67:  mov    0x38(%esp),%eax
0x07fe5a6b:  cmpw   $0x2918,0xe(%eax)
0x07fe5a71:  jne    0x7fe5adf

----------------
IN: 
0x07fe5adf:  xor    %ebp,%ebp
0x07fe5ae1:  cmpl   $0x0,0x7fefe7b
0x07fe5ae8:  je     0x7fe5b08

----------------
IN: 
0x07fe5aea:  mov    $0x510,%edx
0x07fe5aef:  mov    $0xffff8000,%eax
0x07fe5af4:  out    %ax,(%dx)
0x07fe5af6:  mov    $0x2,%ecx
0x07fe5afb:  lea    0x42(%esp),%edi
0x07fe5aff:  mov    $0x11,%dl
0x07fe5b01:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe5b01:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe5b03:  mov    0x42(%esp),%bp
0x07fe5b08:  xor    %esi,%esi
0x07fe5b0a:  jmp    0x7fe5b8f

----------------
IN: 
0x07fe5b8f:  cmp    %bp,%si
0x07fe5b92:  jne    0x7fe5b0f

----------------
IN: 
0x07fe5b0f:  mov    $0x511,%edx
0x07fe5b14:  mov    $0x2,%ecx
0x07fe5b19:  lea    0x42(%esp),%edi
0x07fe5b1d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe5b1d:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe5b1f:  movzwl 0x42(%esp),%edi
0x07fe5b24:  mov    %edi,%eax
0x07fe5b26:  mov    %edx,0xc(%esp)
0x07fe5b2a:  call   0x7fe0c5e

----------------
IN: 
0x07fe5b2f:  test   %eax,%eax
0x07fe5b31:  mov    0xc(%esp),%edx
0x07fe5b35:  jne    0x7fe5b47

----------------
IN: 
0x07fe5b47:  mov    %edi,%ecx
0x07fe5b49:  mov    %eax,%edi
0x07fe5b4b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe5b4b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fe5b4d:  cmpl   $0x54445344,(%eax)
0x07fe5b53:  jne    0x7fe5b69

----------------
IN: 
0x07fe5b55:  cmpl   $0x0,0x24(%esp)
0x07fe5b5a:  je     0x7fe5b76

----------------
IN: 
0x07fe5b5c:  mov    %eax,%edx
0x07fe5b5e:  mov    0x24(%esp),%eax
0x07fe5b62:  call   0x7fe2ab6

----------------
IN: 
0x07fe2ab6:  push   %esi
0x07fe2ab7:  push   %ebx
0x07fe2ab8:  sub    $0x8,%esp
0x07fe2abb:  mov    %eax,%ebx
0x07fe2abd:  mov    %edx,%esi
0x07fe2abf:  mov    0x28(%eax),%eax
0x07fe2ac2:  test   %eax,%eax
0x07fe2ac4:  je     0x7fe2acb

----------------
IN: 
0x07fe2acb:  mov    %esi,0x28(%ebx)
0x07fe2ace:  mov    $0x74,%edx
0x07fe2ad3:  mov    %ebx,%eax
0x07fe2ad5:  call   0xf1a9c

----------------
IN: 
0x07fe2ada:  sub    %al,0x9(%ebx)
0x07fe2add:  mov    %esi,0x4(%esp)
0x07fe2ae1:  movl   $0xf4499,(%esp)
0x07fe2ae8:  call   0xf2058

----------------
IN: 
0x07fe2aed:  add    $0x8,%esp
0x07fe2af0:  pop    %ebx
0x07fe2af1:  pop    %esi
0x07fe2af2:  ret    

----------------
IN: 
0x07fe5b67:  jmp    0x7fe5b76

----------------
IN: 
0x07fe5b76:  cmpl   $0x14,0x1c(%esp)
0x07fe5b7b:  jne    0x7fe5b8e

----------------
IN: 
0x07fe5b8e:  inc    %esi
0x07fe5b8f:  cmp    %bp,%si
0x07fe5b92:  jne    0x7fe5b0f

----------------
IN: 
0x07fe5b98:  cmpl   $0x0,0x24(%esp)
0x07fe5b9d:  je     0x7fe5bde

----------------
IN: 
0x07fe5b9f:  mov    0x24(%esp),%eax
0x07fe5ba3:  cmpl   $0x0,0x28(%eax)
0x07fe5ba7:  jne    0x7fe5bde

----------------
IN: 
0x07fe5bde:  mov    0x1c(%esp),%edx
0x07fe5be2:  lea    0x24(,%edx,4),%ebp
0x07fe5be9:  mov    %ebp,%eax
0x07fe5beb:  call   0x7fe0c5e

----------------
IN: 
0x07fe5bf0:  mov    %eax,%ebx
0x07fe5bf2:  test   %eax,%eax
0x07fe5bf4:  jne    0x7fe5c02

----------------
IN: 
0x07fe5c02:  mov    %ebp,%ecx
0x07fe5c04:  xor    %edx,%edx
0x07fe5c06:  call   0xf172f

----------------
IN: 
0x07fe5c0b:  lea    0x24(%ebx),%eax
0x07fe5c0e:  mov    0x1c(%esp),%ecx
0x07fe5c12:  shl    $0x2,%ecx
0x07fe5c15:  lea    0x58(%esp),%esi
0x07fe5c19:  mov    %eax,%edi
0x07fe5c1b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5c1b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe5c1d:  mov    %ebp,%ecx
0x07fe5c1f:  mov    $0x54445352,%edx
0x07fe5c24:  mov    %ebx,%eax
0x07fe5c26:  call   0x7fe1d5e

----------------
IN: 
0x07fe5c2b:  mov    $0x24,%eax
0x07fe5c30:  call   0x7fe0c1f

----------------
IN: 
0x07fe5c35:  mov    %eax,%esi
0x07fe5c37:  test   %eax,%eax
0x07fe5c39:  jne    0x7fe5c4c

----------------
IN: 
0x07fe5c4c:  mov    $0x24,%ecx
0x07fe5c51:  xor    %edx,%edx
0x07fe5c53:  call   0xf172f

----------------
IN: 
0x07fe5c58:  movl   $0x20445352,(%esi)
0x07fe5c5e:  movl   $0x20525450,0x4(%esi)
0x07fe5c65:  movl   $0x48434f42,0x9(%esi)
0x07fe5c6c:  movw   $0x2053,0xd(%esi)
0x07fe5c72:  mov    %ebx,0x10(%esi)
0x07fe5c75:  mov    $0x14,%edx
0x07fe5c7a:  mov    %esi,%eax
0x07fe5c7c:  call   0xf1a9c

----------------
IN: 
0x07fe5c81:  sub    %al,0x8(%esi)
0x07fe5c84:  mov    %esi,0xf5df0
0x07fe5c8a:  mov    %ebx,0x8(%esp)
0x07fe5c8e:  mov    %esi,0x4(%esp)
0x07fe5c92:  movl   $0xf47af,(%esp)
0x07fe5c99:  call   0xf2058

----------------
IN: 
0x07fe5c9e:  add    $0xa8,%esp
0x07fe5ca4:  pop    %ebx
0x07fe5ca5:  pop    %esi
0x07fe5ca6:  pop    %edi
0x07fe5ca7:  pop    %ebp
0x07fe5ca8:  ret    

----------------
IN: 
0x07fed1a6:  movl   $0xf57e7,(%esp)
0x07fed1ad:  call   0xf2058

----------------
IN: 
0x07fed1b2:  mov    $0x1,%edx
0x07fed1b7:  xor    %ecx,%ecx
0x07fed1b9:  mov    $0xf5800,%eax
0x07fed1be:  call   0xf18fc

----------------
IN: 
0x07fed1c3:  mov    %eax,0xf5e04
0x07fed1c8:  mov    $0x1,%edx
0x07fed1cd:  xor    %ecx,%ecx
0x07fed1cf:  mov    $0xf5818,%eax
0x07fed1d4:  call   0xf18fc

----------------
IN: 
0x07fed1d9:  mov    %eax,0xf5dfc
0x07fed1de:  mov    $0x1,%edx
0x07fed1e3:  xor    %ecx,%ecx
0x07fed1e5:  mov    $0xf582f,%eax
0x07fed1ea:  call   0xf18fc

----------------
IN: 
0x07fed1ef:  mov    %eax,0xf5e10
0x07fed1f4:  mov    0xf5e08,%eax
0x07fed1f9:  mov    0x10(%eax),%ecx
0x07fed1fc:  sub    $0x10,%ecx
0x07fed1ff:  and    $0xfffff800,%ecx
0x07fed205:  sub    $0xc0000,%ecx
0x07fed20b:  xor    %edx,%edx
0x07fed20d:  mov    $0xc0000,%eax
0x07fed212:  call   0xf172f

----------------
IN: 
0x07fed217:  mov    0xf5df8,%ebx
0x07fed21d:  jmp    0x7fed438

----------------
IN: 
0x07fed438:  test   %ebx,%ebx
0x07fed43a:  jne    0x7fed222

----------------
IN: 
0x07fed222:  cmpw   $0x300,0x10(%ebx)
0x07fed228:  jne    0x7fedda8

----------------
IN: 
0x07fedda8:  mov    0x4(%ebx),%ebx
0x07feddab:  jmp    0x7fed438

----------------
IN: 
0x07fed22e:  movzwl (%ebx),%eax
0x07fed231:  shl    $0x8,%eax
0x07fed234:  or     $0x80000004,%eax
0x07fed239:  mov    $0xcf8,%edx
0x07fed23e:  out    %eax,(%dx)
0x07fed23f:  mov    $0xfc,%dl
0x07fed241:  in     (%dx),%ax
0x07fed243:  and    $0x3,%eax
0x07fed246:  mov    %ebx,%esi
0x07fed248:  cmp    $0x3,%ax
0x07fed24c:  je     0x7fed268

----------------
IN: 
0x07fed268:  mov    0x8(%esi),%esi
0x07fed26b:  test   %esi,%esi
0x07fed26d:  jne    0x7fed253

----------------
IN: 
0x07fed26f:  mov    $0xf5844,%edx
0x07fed274:  mov    $0xf5b85,%eax
0x07fed279:  call   0xf170f

----------------
IN: 
0x07fed27e:  test   %eax,%eax
0x07fed280:  jne    0x7fed2ab

----------------
IN: 
0x07fed2ab:  mov    $0xf5855,%edx
0x07fed2b0:  mov    $0xf5b85,%eax
0x07fed2b5:  call   0xf170f

----------------
IN: 
0x07fed2ba:  test   %eax,%eax
0x07fed2bc:  jne    0x7fed2d5

----------------
IN: 
0x07fed2d5:  mov    $0xf5860,%edx
0x07fed2da:  mov    $0xf5b85,%eax
0x07fed2df:  call   0xf170f

----------------
IN: 
0x07fed2e4:  test   %eax,%eax
0x07fed2e6:  jne    0x7fed311

----------------
IN: 
0x07fed311:  mov    0xc(%ebx),%ax
0x07fed315:  cmp    $0x1106,%ax
0x07fed319:  jne    0x7fed40a

----------------
IN: 
0x07fed40a:  cmp    $0x8086,%ax
0x07fed40e:  jne    0x7fed428

----------------
IN: 
0x07fed428:  xor    %ecx,%ecx
0x07fed42a:  mov    $0x1,%edx
0x07fed42f:  mov    %ebx,%eax
0x07fed431:  call   0x7fe9884

----------------
IN: 
0x07fe9884:  push   %ebp
0x07fe9885:  push   %edi
0x07fe9886:  push   %esi
0x07fe9887:  push   %ebx
0x07fe9888:  sub    $0x3c,%esp
0x07fe988b:  mov    %eax,%ebx
0x07fe988d:  mov    %edx,0x24(%esp)
0x07fe9891:  mov    %ecx,0x1c(%esp)
0x07fe9895:  mov    (%eax),%eax
0x07fe9897:  mov    %ax,0x22(%esp)
0x07fe989c:  movzwl 0xe(%ebx),%eax
0x07fe98a0:  mov    %eax,0x10(%esp)
0x07fe98a4:  movzwl 0xc(%ebx),%eax
0x07fe98a8:  mov    %eax,0xc(%esp)
0x07fe98ac:  movl   $0xf512c,0x8(%esp)
0x07fe98b4:  movl   $0x11,0x4(%esp)
0x07fe98bc:  lea    0x2b(%esp),%esi
0x07fe98c0:  mov    %esi,(%esp)
0x07fe98c3:  call   0x7fe2079

----------------
IN: 
0x07fe98c8:  mov    %esi,%eax
0x07fe98ca:  call   0xf18cb

----------------
IN: 
0x07fe98cf:  test   %eax,%eax
0x07fe98d1:  je     0x7fe98e2

----------------
IN: 
0x07fe98e2:  movzwl (%ebx),%ebp
0x07fe98e5:  testb  $0x7f,0x14(%ebx)
0x07fe98e9:  jne    0x7fe9a2e

----------------
IN: 
0x07fe98ef:  mov    $0x30,%edx
0x07fe98f4:  mov    %ebp,%eax
0x07fe98f6:  call   0xf1789

----------------
IN: 
0x07fe98fb:  mov    %eax,%esi
0x07fe98fd:  mov    $0xfffffffe,%ecx
0x07fe9902:  mov    $0x30,%edx
0x07fe9907:  mov    %ebp,%eax
0x07fe9909:  call   0xf173a

----------------
IN: 
0x07fe990e:  mov    $0x30,%edx
0x07fe9913:  mov    %ebp,%eax
0x07fe9915:  call   0xf1789

----------------
IN: 
0x07fe991a:  and    $0xfffffffe,%esi
0x07fe991d:  lea    -0x1(%eax),%edx
0x07fe9920:  cmp    $0xfffffffd,%edx
0x07fe9923:  ja     0x7fe99ed

----------------
IN: 
0x07fe9929:  cmp    %eax,%esi
0x07fe992b:  je     0x7fe99ed

----------------
IN: 
0x07fe9931:  lea    0x400000(%esi),%eax
0x07fe9937:  cmp    $0x13fffff,%eax
0x07fe993c:  jbe    0x7fe99ed

----------------
IN: 
0x07fe9942:  mov    %esi,%ecx
0x07fe9944:  or     $0x1,%ecx
0x07fe9947:  mov    $0x30,%edx
0x07fe994c:  mov    %ebp,%eax
0x07fe994e:  call   0xf173a

----------------
IN: 
0x07fe9953:  mov    %esi,%edx
0x07fe9955:  cmpw   $0xaa55,(%edx)
0x07fe995a:  jne    0x7fe99ed

----------------
IN: 
0x07fe9960:  movzwl 0x18(%edx),%eax
0x07fe9964:  add    %edx,%eax
0x07fe9966:  cmpl   $0x52494350,(%eax)
0x07fe996c:  jne    0x7fe99ed

----------------
IN: 
0x07fe996e:  test   %eax,%eax
0x07fe9970:  je     0x7fe99ed

----------------
IN: 
0x07fe9972:  mov    0xc(%ebx),%ecx
0x07fe9975:  cmp    %cx,0x4(%eax)
0x07fe9979:  jne    0x7fe998b

----------------
IN: 
0x07fe997b:  mov    0xe(%ebx),%cx
0x07fe997f:  cmp    %cx,0x6(%eax)
0x07fe9983:  jne    0x7fe998b

----------------
IN: 
0x07fe9985:  cmpb   $0x0,0x14(%eax)
0x07fe9989:  je     0x7fe999c

----------------
IN: 
0x07fe999c:  movzbl 0x2(%edx),%ecx
0x07fe99a0:  shl    $0x9,%ecx
0x07fe99a3:  mov    %ecx,%eax
0x07fe99a5:  mov    %edx,0x18(%esp)
0x07fe99a9:  mov    %ecx,0x14(%esp)
0x07fe99ad:  call   0x7fe0b32

----------------
IN: 
0x07fe0b32:  push   %ebx
0x07fe0b33:  mov    0xf5da0,%ebx
0x07fe0b39:  lea    0x7ff(%ebx,%eax,1),%edx
0x07fe0b40:  and    $0xfffff800,%edx
0x07fe0b46:  add    $0x10,%edx
0x07fe0b49:  mov    0xf5e08,%ecx
0x07fe0b4f:  cmp    %edx,0x10(%ecx)
0x07fe0b52:  jb     0x7fe0b6b

----------------
IN: 
0x07fe0b54:  cmp    $0xe0010,%edx
0x07fe0b5a:  jae    0x7fe0b61

----------------
IN: 
0x07fe0b5c:  mov    $0xe0010,%edx
0x07fe0b61:  mov    %edx,0xc(%ecx)
0x07fe0b64:  mov    %edx,0x8(%ecx)
0x07fe0b67:  mov    %ebx,%eax
0x07fe0b69:  jmp    0x7fe0b6d

----------------
IN: 
0x07fe0b6d:  pop    %ebx
0x07fe0b6e:  ret    

----------------
IN: 
0x07fe99b2:  mov    %eax,%edi
0x07fe99b4:  test   %eax,%eax
0x07fe99b6:  mov    0x18(%esp),%edx
0x07fe99ba:  mov    0x14(%esp),%ecx
0x07fe99be:  jne    0x7fe99d1

----------------
IN: 
0x07fe99d1:  call   0x7fe6d48

----------------
IN: 
0x07fe6d48:  push   %ebp
0x07fe6d49:  push   %edi
0x07fe6d4a:  push   %esi
0x07fe6d4b:  push   %ebx
0x07fe6d4c:  mov    %eax,%ebp
0x07fe6d4e:  mov    %edx,%esi
0x07fe6d50:  mov    %ecx,%ebx
0x07fe6d52:  jmp    0x7fe6d75

----------------
IN: 
0x07fe6d75:  call   0xf21d2

----------------
IN: 
0x000f21d2:  mov    %esp,%eax
0x000f21d4:  cmp    $0x7000,%eax
0x000f21d9:  jbe    0xf21e7

----------------
IN: 
0x000f21e7:  mov    $0xf64b5,%edx
0x000f21ec:  xor    %eax,%eax
0x000f21ee:  call   0xf21ac

----------------
IN: 
0x000f21ac:  push   %ebx
0x000f21ad:  push   %ebx
0x000f21ae:  mov    %esp,%ecx
0x000f21b0:  cmp    $0x7000,%ecx
0x000f21b6:  jbe    0xf21c4

----------------
IN: 
0x000f21c4:  lea    -0xf0000(%edx),%ebx
0x000f21ca:  call   0xfc595

----------------
IN: 
0x000fc595:  mov    $0xc59f,%edx
0x000fc59a:  jmp    0xfc4ad

----------------
IN: 
0x000fc4ad:  mov    %eax,%ecx
0x000fc4af:  mov    $0x30,%eax
0x000fc4b4:  mov    %eax,%ds

----------------
IN: 
0x000fc4b6:  mov    %eax,%es

----------------
IN: 
0x000fc4b8:  mov    %eax,%ss

----------------
IN: 
0x000fc4ba:  mov    %eax,%fs

----------------
IN: 
0x000fc4bc:  mov    %eax,%gs
0x000fc4be:  ljmpw  $0x28,$0xc4c4

----------------
IN: 
0x000fc4c4:  mov    %cr0,%eax
0x000fc4c7:  and    $0xfffffffe,%eax
0x000fc4cb:  mov    %eax,%cr0

----------------
IN: 
0x000fc4ce:  ljmp   $0xf000,$0xc4d3

----------------
IN: 
0x000fc4d3:  lidtw  %cs:-0x2c18
0x000fc4d9:  xor    %ax,%ax
0x000fc4db:  mov    %ax,%fs
0x000fc4dd:  mov    %ax,%gs
0x000fc4df:  mov    %ax,%es
0x000fc4e1:  mov    %ax,%ds
0x000fc4e3:  mov    %ax,%ss

----------------
IN: 
0x000fc4e5:  mov    %ecx,%eax

----------------
IN: 
0x000fc4e8:  jmpl   *%edx

----------------
IN: 
0x000fc59f:  calll  *%ebx

----------------
IN: 
0x000f64b5:  sti    

----------------
IN: 
0x000f64b6:  nop    

----------------
IN: 
0x000f64b7:  pause  
0x000f64b9:  cli    
0x000f64ba:  cld    
0x000f64bb:  retl   

----------------
IN: 
0x000fc5a2:  mov    $0xfc5ab,%edx
0x000fc5a8:  jmp    0xfc450

----------------
IN: 
0x000fc450:  mov    %eax,%ecx
0x000fc453:  cli    
0x000fc454:  cld    
0x000fc455:  mov    $0x8f,%eax
0x000fc45b:  out    %al,$0x70
0x000fc45d:  in     $0x71,%al
0x000fc45f:  in     $0x92,%al
0x000fc461:  or     $0x2,%al
0x000fc463:  out    %al,$0x92
0x000fc465:  lidtw  %cs:-0x2c20
0x000fc46b:  lgdtw  %cs:-0x2c60
0x000fc471:  mov    %cr0,%eax
0x000fc474:  or     $0x1,%eax
0x000fc478:  mov    %eax,%cr0

----------------
IN: 
0x000fc47b:  ljmpl  $0x8,$0xfc483

----------------
IN: 
0x000fc483:  mov    $0x10,%eax
0x000fc488:  mov    %eax,%ds

----------------
IN: 
0x000fc48a:  mov    %eax,%es

----------------
IN: 
0x000fc48c:  mov    %eax,%ss

----------------
IN: 
0x000fc48e:  mov    %eax,%fs

----------------
IN: 
0x000fc490:  mov    %eax,%gs
0x000fc492:  mov    %ecx,%eax
0x000fc494:  jmp    *%edx

----------------
IN: 
0x000fc5ab:  ret    

----------------
IN: 
0x000f21cf:  pop    %ecx
0x000f21d0:  pop    %ebx
0x000f21d1:  ret    

----------------
IN: 
0x000f21f3:  mov    $0xf5d90,%eax
0x000f21f8:  jmp    0xf157d

----------------
IN: 
0x000f157d:  mov    (%eax),%ecx
0x000f157f:  cmp    %ecx,%eax
0x000f1581:  je     0xf1597

----------------
IN: 
0x000f1597:  ret    

----------------
IN: 
0x07fe6d7a:  cmp    $0x3,%ebx
0x07fe6d7d:  ja     0x7fe6d54

----------------
IN: 
0x07fe6d54:  mov    %ebx,%ecx
0x07fe6d56:  cmp    $0x800,%ebx
0x07fe6d5c:  jbe    0x7fe6d63

----------------
IN: 
0x07fe6d5e:  mov    $0x800,%ecx
0x07fe6d63:  shr    $0x2,%ecx
0x07fe6d66:  lea    0x0(,%ecx,4),%eax
0x07fe6d6d:  sub    %eax,%ebx
0x07fe6d6f:  mov    %ebp,%edi
0x07fe6d71:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe6d71:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe6d73:  mov    %edi,%ebp
0x07fe6d75:  call   0xf21d2

----------------
IN: 
0x07fe6d63:  shr    $0x2,%ecx
0x07fe6d66:  lea    0x0(,%ecx,4),%eax
0x07fe6d6d:  sub    %eax,%ebx
0x07fe6d6f:  mov    %ebp,%edi
0x07fe6d71:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe6d7f:  test   %ebx,%ebx
0x07fe6d81:  je     0x7fe6d89

----------------
IN: 
0x07fe6d89:  pop    %ebx
0x07fe6d8a:  pop    %esi
0x07fe6d8b:  pop    %edi
0x07fe6d8c:  pop    %ebp
0x07fe6d8d:  ret    

----------------
IN: 
0x07fe99d6:  mov    %esi,%ecx
0x07fe99d8:  mov    $0x30,%edx
0x07fe99dd:  mov    %ebp,%eax
0x07fe99df:  call   0xf173a

----------------
IN: 
0x07fe99e4:  or     $0xffffffff,%eax
0x07fe99e7:  test   %edi,%edi
0x07fe99e9:  jne    0x7fe99fd

----------------
IN: 
0x07fe99fd:  cmpl   $0x0,0x1c(%esp)
0x07fe9a02:  je     0x7fe9a1c

----------------
IN: 
0x07fe9a1c:  movzwl 0x22(%esp),%edx
0x07fe9a21:  mov    0x24(%esp),%ecx
0x07fe9a25:  mov    %edi,%eax
0x07fe9a27:  call   0x7fe97d0

----------------
IN: 
0x07fe97d0:  push   %ebp
0x07fe97d1:  push   %edi
0x07fe97d2:  push   %esi
0x07fe97d3:  push   %ebx
0x07fe97d4:  mov    %eax,%esi
0x07fe97d6:  cmpw   $0xaa55,(%eax)
0x07fe97db:  je     0x7fe97e2

----------------
IN: 
0x07fe97e2:  mov    %ecx,%ebp
0x07fe97e4:  mov    %edx,%edi
0x07fe97e6:  call   0xf206b

----------------
IN: 
0x000f206b:  push   %esi
0x000f206c:  push   %ebx
0x000f206d:  sub    $0x10,%esp
0x000f2070:  mov    %eax,%esi
0x000f2072:  movzbl 0x2(%eax),%ebx
0x000f2076:  xor    %edx,%edx
0x000f2078:  test   %bl,%bl
0x000f207a:  je     0xf20b8

----------------
IN: 
0x000f207c:  shl    $0x9,%ebx
0x000f207f:  mov    %ebx,%edx
0x000f2081:  call   0xf1a9c

----------------
IN: 
0x000f2086:  mov    $0x1,%edx
0x000f208b:  test   %al,%al
0x000f208d:  je     0xf20b8

----------------
IN: 
0x000f20b8:  mov    %edx,%eax
0x000f20ba:  add    $0x10,%esp
0x000f20bd:  pop    %ebx
0x000f20be:  pop    %esi
0x000f20bf:  ret    

----------------
IN: 
0x07fe97eb:  test   %eax,%eax
0x07fe97ed:  je     0x7fe9862

----------------
IN: 
0x07fe97ef:  movzbl 0x2(%esi),%eax
0x07fe97f3:  shl    $0x9,%eax
0x07fe97f6:  call   0x7fe0b32

----------------
IN: 
0x07fe97fb:  mov    %eax,%ebx
0x07fe97fd:  mov    $0x7fef94f,%edx
0x07fe9802:  mov    $0x7b,%eax
0x07fe9807:  test   %ebx,%ebx
0x07fe9809:  je     0x7fe985d

----------------
IN: 
0x07fe980b:  cmp    %esi,%ebx
0x07fe980d:  je     0x7fe981f

----------------
IN: 
0x07fe981f:  test   %ebp,%ebp
0x07fe9821:  jne    0x7fe9835

----------------
IN: 
0x07fe9835:  movzwl %di,%ecx
0x07fe9838:  mov    $0x3,%edx
0x07fe983d:  mov    %ebx,%eax
0x07fe983f:  call   0xf3a45

----------------
IN: 
0x000f3a45:  push   %edi
0x000f3a46:  push   %esi
0x000f3a47:  push   %ebx
0x000f3a48:  sub    $0x34,%esp
0x000f3a4b:  mov    %eax,%ebx
0x000f3a4d:  mov    %edx,%esi
0x000f3a4f:  mov    %ecx,%edi
0x000f3a51:  shr    $0x4,%ebx
0x000f3a54:  mov    %edx,0x8(%esp)
0x000f3a58:  movzwl %bx,%eax
0x000f3a5b:  mov    %eax,0x4(%esp)
0x000f3a5f:  movl   $0xf510b,(%esp)
0x000f3a66:  call   0xf2058

----------------
IN: 
0x000f3a6b:  mov    $0x26,%ecx
0x000f3a70:  xor    %edx,%edx
0x000f3a72:  lea    0xe(%esp),%eax
0x000f3a76:  call   0xf172f

----------------
IN: 
0x000f3a7b:  movw   $0x200,0x32(%esp)
0x000f3a82:  mov    %di,0x2a(%esp)
0x000f3a87:  movw   $0xffff,0x1e(%esp)
0x000f3a8e:  movw   $0xffff,0x22(%esp)
0x000f3a95:  movw   $0xf000,0x10(%esp)
0x000f3a9c:  mov    $0xfd070,%eax
0x000f3aa1:  mov    %ax,0x12(%esp)
0x000f3aa6:  mov    %si,0x2e(%esp)
0x000f3aab:  mov    %bx,0x30(%esp)
0x000f3ab0:  mov    $0xf64a1,%edx
0x000f3ab5:  lea    0xe(%esp),%eax
0x000f3ab9:  call   0xf21ac

----------------
IN: 
0x000f64a1:  push   %edi
0x000f64a3:  push   %esi
0x000f64a5:  push   %ebx
0x000f64a7:  calll  0xfc4eb

----------------
IN: 
0x000fc4eb:  push   %ebp
0x000fc4ed:  push   %eax
0x000fc4ef:  pushl  %es
0x000fc4f1:  push   %cs
0x000fc4f2:  push   $0xc536
0x000fc4f5:  addr32 pushw %es:0x24(%eax)
0x000fc4fa:  addr32 pushl %es:0x20(%eax)
0x000fc500:  addr32 mov %es:0x4(%eax),%edi
0x000fc506:  addr32 mov %es:0x8(%eax),%esi
0x000fc50c:  addr32 mov %es:0xc(%eax),%ebp
0x000fc512:  addr32 mov %es:0x10(%eax),%ebx
0x000fc518:  addr32 mov %es:0x14(%eax),%edx
0x000fc51e:  addr32 mov %es:0x18(%eax),%ecx
0x000fc524:  addr32 mov %es:(%eax),%ds
0x000fc528:  addr32 pushl %es:0x1c(%eax)
0x000fc52e:  addr32 mov %es:0x2(%eax),%es
0x000fc533:  pop    %eax
0x000fc535:  iret   

----------------
IN: 
0x000c0003:  jmp    0xc0127

----------------
IN: 
0x000c0127:  call   0xc3540

----------------
IN: 
0x000c3540:  mov    $0x3c2,%dx
0x000c3543:  mov    $0xc3,%al
0x000c3545:  out    %al,(%dx)
0x000c3546:  mov    $0x3c4,%dx
0x000c3549:  mov    $0x4,%al
0x000c354b:  out    %al,(%dx)
0x000c354c:  mov    $0x3c5,%dx
0x000c354f:  mov    $0x2,%al
0x000c3551:  out    %al,(%dx)
0x000c3552:  mov    $0x355c,%bx
0x000c3555:  push   %bx
0x000c3556:  call   0xc7b57

----------------
IN: 
0x000c7b57:  push   %bp
0x000c7b58:  mov    %sp,%bp
0x000c7b5a:  add    $0xffffffec,%sp
0x000c7b5d:  lea    0x4(%bp),%bx
0x000c7b60:  mov    %bx,-0xa(%bp)
0x000c7b63:  call   0xc7b54

----------------
IN: 
0x000c7b54:  mov    %ss,%ax
0x000c7b56:  ret    

----------------
IN: 
0x000c7b66:  mov    %ax,-0xc(%bp)
0x000c7b69:  xor    %ax,%ax
0x000c7b6b:  mov    %ax,-0x4(%bp)
0x000c7b6e:  xor    %ax,%ax
0x000c7b70:  mov    %ax,-0x6(%bp)
0x000c7b73:  jmp    0xc7c7a

----------------
IN: 
0x000c7c7a:  pushw  0x4(%bp)
0x000c7c7d:  mov    $0xc000,%ax
0x000c7c80:  push   %ax
0x000c7c81:  call   0xc7ac8

----------------
IN: 
0x000c7ac8:  push   %bp
0x000c7ac9:  mov    %sp,%bp
0x000c7acb:  push   %bx
0x000c7acc:  push   %ds
0x000c7acd:  mov    0x4(%bp),%ax
0x000c7ad0:  mov    %ax,%ds
0x000c7ad2:  mov    0x6(%bp),%bx
0x000c7ad5:  mov    (%bx),%al
0x000c7ad7:  pop    %ds
0x000c7ad8:  pop    %bx
0x000c7ad9:  pop    %bp
0x000c7ada:  ret    

----------------
IN: 
0x000c7c84:  add    $0x4,%sp
0x000c7c87:  mov    %al,-0x1(%bp)
0x000c7c8a:  test   %al,%al
0x000c7c8c:  jne    0xc7b76

----------------
IN: 
0x000c7b76:  mov    -0x1(%bp),%al
0x000c7b79:  cmp    $0x25,%al
0x000c7b7b:  jne    0xc7b8b

----------------
IN: 
0x000c7b8b:  mov    -0x4(%bp),%ax
0x000c7b8e:  test   %ax,%ax
0x000c7b90:  je     0xc7c63

----------------
IN: 
0x000c7c63:  mov    -0x1(%bp),%al
0x000c7c66:  xor    %ah,%ah
0x000c7c68:  push   %ax
0x000c7c69:  mov    $0x500,%ax
0x000c7c6c:  push   %ax
0x000c7c6d:  call   0xc7b34

----------------
IN: 
0x000c7b34:  push   %bp
0x000c7b35:  mov    %sp,%bp
0x000c7b37:  push   %ax
0x000c7b38:  push   %dx
0x000c7b39:  mov    0x4(%bp),%dx
0x000c7b3c:  mov    0x6(%bp),%al
0x000c7b3f:  out    %al,(%dx)
0x000c7b40:  pop    %dx
0x000c7b41:  pop    %ax
0x000c7b42:  pop    %bp
0x000c7b43:  ret    

----------------
IN: 
0x000c7c70:  add    $0x4,%sp
0x000c7c73:  mov    0x4(%bp),%bx
0x000c7c76:  inc    %bx
0x000c7c77:  mov    %bx,0x4(%bp)
0x000c7c7a:  pushw  0x4(%bp)
0x000c7c7d:  mov    $0xc000,%ax
0x000c7c80:  push   %ax
0x000c7c81:  call   0xc7ac8

----------------
IN: 
0x000c7c90:  mov    %bp,%sp
0x000c7c92:  pop    %bp
0x000c7c93:  ret    

----------------
IN: 
0x000c3559:  inc    %sp
0x000c355a:  inc    %sp
0x000c355b:  ret    

----------------
IN: 
0x000c012a:  call   0xc356b

----------------
IN: 
0x000c356b:  push   %ds
0x000c356c:  mov    $0x40,%ax
0x000c356f:  mov    %ax,%ds
0x000c3571:  mov    $0x10,%bx
0x000c3574:  mov    (%bx),%ax
0x000c3576:  and    $0xffcf,%ax
0x000c3579:  or     $0x20,%ax
0x000c357c:  mov    %ax,(%bx)
0x000c357e:  mov    $0x85,%bx
0x000c3581:  mov    $0x10,%al
0x000c3583:  mov    %al,(%bx)
0x000c3585:  mov    $0x87,%bx
0x000c3588:  mov    $0x60,%al
0x000c358a:  mov    %al,(%bx)
0x000c358c:  mov    $0x88,%bx
0x000c358f:  mov    $0xf9,%al
0x000c3591:  mov    %al,(%bx)
0x000c3593:  mov    $0x89,%bx
0x000c3596:  mov    $0x51,%al
0x000c3598:  mov    %al,(%bx)
0x000c359a:  mov    $0x65,%bx
0x000c359d:  mov    $0x9,%al
0x000c359f:  mov    %al,(%bx)
0x000c35a1:  pop    %ds
0x000c35a2:  ret    

----------------
IN: 
0x000c012d:  push   %ds
0x000c012e:  xor    %ax,%ax
0x000c0130:  mov    %ax,%ds
0x000c0132:  mov    $0x151,%ax
0x000c0135:  mov    %ax,0x40
0x000c0138:  mov    $0xc000,%ax
0x000c013b:  mov    %ax,0x42
0x000c013e:  pop    %ds
0x000c013f:  call   0xc839d

----------------
IN: 
0x000c839d:  call   0xc83e9

----------------
IN: 
0x000c83e9:  push   %ax
0x000c83ea:  push   %dx
0x000c83eb:  mov    $0x9206,%ax
0x000c83ee:  mov    $0x3c4,%dx
0x000c83f1:  out    %ax,(%dx)
0x000c83f2:  inc    %dx
0x000c83f3:  in     (%dx),%al
0x000c83f4:  cmp    $0x12,%al
0x000c83f6:  pop    %dx
0x000c83f7:  pop    %ax
0x000c83f8:  ret    

----------------
IN: 
0x000c83a0:  jne    0xc83d3

----------------
IN: 
0x000c83a2:  push   %ds
0x000c83a3:  xor    %ax,%ax
0x000c83a5:  mov    %ax,%ds
0x000c83a7:  mov    $0x83f9,%ax
0x000c83aa:  mov    %ax,0x40
0x000c83ad:  mov    $0xc000,%ax
0x000c83b0:  mov    %ax,0x42
0x000c83b3:  pop    %ds
0x000c83b4:  mov    $0xf,%al
0x000c83b6:  mov    $0x3c4,%dx
0x000c83b9:  out    %al,(%dx)
0x000c83ba:  inc    %dx
0x000c83bb:  in     (%dx),%al
0x000c83bc:  and    $0x18,%al
0x000c83be:  mov    %al,%ah
0x000c83c0:  mov    $0xa,%al
0x000c83c2:  dec    %dx
0x000c83c3:  out    %ax,(%dx)
0x000c83c4:  mov    $0x7,%ax
0x000c83c7:  out    %ax,(%dx)
0x000c83c8:  mov    $0x431,%ax
0x000c83cb:  mov    $0x3ce,%dx
0x000c83ce:  out    %ax,(%dx)
0x000c83cf:  mov    $0x31,%ax
0x000c83d2:  out    %ax,(%dx)
0x000c83d3:  ret    

----------------
IN: 
0x000c0142:  call   0xc35bf

----------------
IN: 
0x000c35bf:  ret    

----------------
IN: 
0x000c0145:  mov    $0x3,%ax
0x000c0148:  int    $0x10

----------------
IN: 
0x000c83f9:  pushf  
0x000c83fa:  push   %bp
0x000c83fb:  cmp    $0x0,%ah
0x000c83fe:  je     0xc8412

----------------
IN: 
0x000c8412:  push   %si
0x000c8413:  push   %ax
0x000c8414:  push   %bx
0x000c8415:  push   %ds
0x000c8416:  xor    %si,%si
0x000c8418:  mov    %si,%ds
0x000c841a:  xor    %bx,%bx
0x000c841c:  mov    %bx,0x4ba
0x000c8420:  pop    %ds
0x000c8421:  pop    %bx
0x000c8422:  call   0xc88c1

----------------
IN: 
0x000c88c1:  and    $0x7f,%al
0x000c88c3:  mov    $0x8116,%si
0x000c88c6:  mov    %cs:(%si),%ah
0x000c88c9:  cmp    %ah,%al
0x000c88cb:  je     0xc88dc

----------------
IN: 
0x000c88cd:  cmp    $0xff,%ah
0x000c88d0:  je     0xc88d7

----------------
IN: 
0x000c88d2:  add    $0x1a,%si
0x000c88d5:  jmp    0xc88c6

----------------
IN: 
0x000c88c6:  mov    %cs:(%si),%ah
0x000c88c9:  cmp    %ah,%al
0x000c88cb:  je     0xc88dc

----------------
IN: 
0x000c88d7:  xor    %si,%si
0x000c88d9:  stc    
0x000c88da:  jmp    0xc88dd

----------------
IN: 
0x000c88dd:  ret    

----------------
IN: 
0x000c8425:  jae    0xc8469

----------------
IN: 
0x000c8427:  mov    $0xfe,%al
0x000c8429:  call   0xc88c3

----------------
IN: 
0x000c88c3:  mov    $0x8116,%si
0x000c88c6:  mov    %cs:(%si),%ah
0x000c88c9:  cmp    %ah,%al
0x000c88cb:  je     0xc88dc

----------------
IN: 
0x000c88dc:  clc    
0x000c88dd:  ret    

----------------
IN: 
0x000c842c:  call   0xc84ad

----------------
IN: 
0x000c84ad:  push   %ds
0x000c84ae:  push   %bx
0x000c84af:  push   %dx
0x000c84b0:  push   %cs
0x000c84b1:  pop    %ds
0x000c84b2:  mov    0xa(%si),%bx
0x000c84b5:  mov    $0x3c4,%dx
0x000c84b8:  mov    $0x1206,%ax
0x000c84bb:  out    %ax,(%dx)
0x000c84bc:  call   0xc8515

----------------
IN: 
0x000c8515:  mov    (%bx),%ax
0x000c8517:  cmp    $0xffff,%ax
0x000c851a:  je     0xc8522

----------------
IN: 
0x000c851c:  out    %ax,(%dx)
0x000c851d:  add    $0x2,%bx
0x000c8520:  jmp    0xc8515

----------------
IN: 
0x000c8522:  ret    

----------------
IN: 
0x000c84bf:  mov    0xc(%si),%bx
0x000c84c2:  mov    $0x3ce,%dx
0x000c84c5:  call   0xc8515

----------------
IN: 
0x000c84c8:  mov    0xe(%si),%bx
0x000c84cb:  call   0xc88ae

----------------
IN: 
0x000c88ae:  push   %ds
0x000c88af:  push   %ax
0x000c88b0:  mov    $0x3cc,%dx
0x000c88b3:  in     (%dx),%al
0x000c88b4:  and    $0x1,%al
0x000c88b6:  shl    $0x5,%al
0x000c88b9:  mov    $0x3b4,%dx
0x000c88bc:  add    %al,%dl
0x000c88be:  pop    %ax
0x000c88bf:  pop    %ds
0x000c88c0:  ret    

----------------
IN: 
0x000c84ce:  call   0xc8515

----------------
IN: 
0x000c84d1:  mov    $0x3c6,%dx
0x000c84d4:  mov    $0x0,%al
0x000c84d6:  out    %al,(%dx)
0x000c84d7:  in     (%dx),%al
0x000c84d8:  in     (%dx),%al
0x000c84d9:  in     (%dx),%al
0x000c84da:  in     (%dx),%al
0x000c84db:  mov    0x8(%si),%al
0x000c84de:  out    %al,(%dx)
0x000c84df:  mov    $0xff,%al
0x000c84e1:  out    %al,(%dx)
0x000c84e2:  mov    $0x0,%al
0x000c84e4:  mov    0x11(%si),%bl
0x000c84e7:  or     %bl,%bl
0x000c84e9:  je     0xc84f4

----------------
IN: 
0x000c84eb:  mov    $0x1,%al
0x000c84ed:  cmp    $0x3,%bl
0x000c84f0:  jne    0xc84f4

----------------
IN: 
0x000c84f4:  mov    $0x10,%bl
0x000c84f6:  call   0xc6233

----------------
IN: 
0x000c6233:  cmp    $0x14,%bl
0x000c6236:  ja     0xc6256

----------------
IN: 
0x000c6238:  push   %ax
0x000c6239:  push   %dx
0x000c623a:  mov    $0x3da,%dx
0x000c623d:  in     (%dx),%al
0x000c623e:  mov    $0x3c0,%dx
0x000c6241:  mov    %bl,%al
0x000c6243:  out    %al,(%dx)
0x000c6244:  mov    $0x3c1,%dx
0x000c6247:  in     (%dx),%al
0x000c6248:  mov    %al,%bh
0x000c624a:  mov    $0x3da,%dx
0x000c624d:  in     (%dx),%al
0x000c624e:  mov    $0x3c0,%dx
0x000c6251:  mov    $0x20,%al
0x000c6253:  out    %al,(%dx)
0x000c6254:  pop    %dx
0x000c6255:  pop    %ax
0x000c6256:  ret    

----------------
IN: 
0x000c84f9:  and    $0xfe,%bh
0x000c84fc:  or     %al,%bh
0x000c84fe:  call   0xc61be

----------------
IN: 
0x000c61be:  cmp    $0x14,%bl
0x000c61c1:  ja     0xc61d7

----------------
IN: 
0x000c61c3:  push   %ax
0x000c61c4:  push   %dx
0x000c61c5:  mov    $0x3da,%dx
0x000c61c8:  in     (%dx),%al
0x000c61c9:  mov    $0x3c0,%dx
0x000c61cc:  mov    %bl,%al
0x000c61ce:  out    %al,(%dx)
0x000c61cf:  mov    %bh,%al
0x000c61d1:  out    %al,(%dx)
0x000c61d2:  mov    $0x20,%al
0x000c61d4:  out    %al,(%dx)
0x000c61d5:  pop    %dx
0x000c61d6:  pop    %ax
0x000c61d7:  ret    

----------------
IN: 
0x000c8501:  pop    %dx
0x000c8502:  pop    %bx
0x000c8503:  pop    %ds
0x000c8504:  ret    

----------------
IN: 
0x000c842f:  pop    %ax
0x000c8430:  pop    %si
0x000c8431:  jmp    0xc840a

----------------
IN: 
0x000c840a:  pop    %bp
0x000c840b:  popf   

----------------
IN: 
0x000c840c:  jmp    0xc0151

----------------
IN: 
0x000c0151:  pushf  
0x000c0152:  cmp    $0xf,%ah
0x000c0155:  jne    0xc015c

----------------
IN: 
0x000c015c:  cmp    $0x1a,%ah
0x000c015f:  jne    0xc0166

----------------
IN: 
0x000c0166:  cmp    $0xb,%ah
0x000c0169:  jne    0xc0170

----------------
IN: 
0x000c0170:  cmp    $0x1103,%ax
0x000c0173:  jne    0xc017a

----------------
IN: 
0x000c017a:  cmp    $0x12,%ah
0x000c017d:  jne    0xc01bb

----------------
IN: 
0x000c01bb:  cmp    $0x101b,%ax
0x000c01be:  je     0xc01ca

----------------
IN: 
0x000c01c0:  cmp    $0x10,%ah
0x000c01c3:  jne    0xc01ca

----------------
IN: 
0x000c01ca:  push   %es
0x000c01cb:  push   %ds
0x000c01cc:  pusha  
0x000c01cd:  mov    $0xc000,%bx
0x000c01d0:  mov    %bx,%ds
0x000c01d2:  call   0xc3605

----------------
IN: 
0x000c3605:  push   %bp
0x000c3606:  mov    %sp,%bp
0x000c3608:  mov    0x12(%bp),%ax
0x000c360b:  mov    %ah,%al
0x000c360d:  xor    %ah,%ah
0x000c360f:  jmp    0xc3a37

----------------
IN: 
0x000c3a37:  sub    $0x0,%ax
0x000c3a3a:  jl     0xc3a84

----------------
IN: 
0x000c3a3c:  cmp    $0x1c,%ax
0x000c3a3f:  ja     0xc3a84

----------------
IN: 
0x000c3a41:  shl    %ax
0x000c3a43:  mov    %ax,%bx
0x000c3a45:  jmp    *%cs:0x3a4a(%bx)

----------------
IN: 
0x000c3612:  mov    0x12(%bp),%al
0x000c3615:  xor    %ah,%ah
0x000c3617:  push   %ax
0x000c3618:  call   0xc3a86

----------------
IN: 
0x000c3a86:  push   %bp
0x000c3a87:  mov    %sp,%bp
0x000c3a89:  dec    %sp
0x000c3a8a:  mov    0x4(%bp),%al
0x000c3a8d:  and    $0x80,%al
0x000c3a8f:  mov    %al,-0x1(%bp)
0x000c3a92:  add    $0xffffffeb,%sp
0x000c3a95:  mov    0x4(%bp),%al
0x000c3a98:  and    $0x7f,%al
0x000c3a9a:  mov    %al,0x4(%bp)
0x000c3a9d:  mov    0x4(%bp),%al
0x000c3aa0:  xor    %ah,%ah
0x000c3aa2:  push   %ax
0x000c3aa3:  call   0xc79dc

----------------
IN: 
0x000c79dc:  push   %bp
0x000c79dd:  mov    %sp,%bp
0x000c79df:  dec    %sp
0x000c79e0:  dec    %sp
0x000c79e1:  mov    $0xff,%al
0x000c79e3:  mov    %al,-0x2(%bp)
0x000c79e6:  xor    %al,%al
0x000c79e8:  mov    %al,-0x1(%bp)
0x000c79eb:  jmp    0xc7a10

----------------
IN: 
0x000c7a10:  mov    -0x1(%bp),%al
0x000c7a13:  cmp    $0xf,%al
0x000c7a15:  jbe    0xc79ed

----------------
IN: 
0x000c79ed:  mov    -0x1(%bp),%al
0x000c79f0:  xor    %ah,%ah
0x000c79f2:  mov    $0x3,%cl
0x000c79f4:  shl    %cl,%ax
0x000c79f6:  mov    %ax,%bx
0x000c79f8:  mov    0x1da(%bx),%al
0x000c79fc:  cmp    0x4(%bp),%al
0x000c79ff:  jne    0xc7a09

----------------
IN: 
0x000c7a09:  mov    -0x1(%bp),%al
0x000c7a0c:  inc    %ax
0x000c7a0d:  mov    %al,-0x1(%bp)
0x000c7a10:  mov    -0x1(%bp),%al
0x000c7a13:  cmp    $0xf,%al
0x000c7a15:  jbe    0xc79ed

----------------
IN: 
0x000c7a01:  mov    -0x1(%bp),%al
0x000c7a04:  mov    %al,-0x2(%bp)
0x000c7a07:  jmp    0xc7a17

----------------
IN: 
0x000c7a17:  mov    -0x2(%bp),%al
0x000c7a1a:  mov    %bp,%sp
0x000c7a1c:  pop    %bp
0x000c7a1d:  ret    

----------------
IN: 
0x000c3aa6:  inc    %sp
0x000c3aa7:  inc    %sp
0x000c3aa8:  mov    %al,-0x2(%bp)
0x000c3aab:  mov    -0x2(%bp),%al
0x000c3aae:  cmp    $0xff,%al
0x000c3ab0:  jne    0xc3ab6

----------------
IN: 
0x000c3ab6:  mov    -0x2(%bp),%al
0x000c3ab9:  xor    %ah,%ah
0x000c3abb:  mov    %ax,%bx
0x000c3abd:  mov    0x25a(%bx),%al
0x000c3ac1:  mov    %al,-0x7(%bp)
0x000c3ac4:  mov    -0x7(%bp),%al
0x000c3ac7:  xor    %ah,%ah
0x000c3ac9:  mov    $0x6,%cl
0x000c3acb:  shl    %cl,%ax
0x000c3acd:  mov    %ax,%bx
0x000c3acf:  mov    0x26e(%bx),%al
0x000c3ad3:  xor    %ah,%ah
0x000c3ad5:  mov    %ax,-0xc(%bp)
0x000c3ad8:  mov    -0x7(%bp),%al
0x000c3adb:  xor    %ah,%ah
0x000c3add:  mov    $0x6,%cl
0x000c3adf:  shl    %cl,%ax
0x000c3ae1:  mov    %ax,%bx
0x000c3ae3:  add    $0x26e,%bx
0x000c3ae7:  mov    0x1(%bx),%al
0x000c3aea:  xor    %ah,%ah
0x000c3aec:  mov    %ax,-0xe(%bp)
0x000c3aef:  mov    -0x7(%bp),%al
0x000c3af2:  xor    %ah,%ah
0x000c3af4:  mov    $0x6,%cl
0x000c3af6:  shl    %cl,%ax
0x000c3af8:  mov    %ax,%bx
0x000c3afa:  add    $0x26e,%bx
0x000c3afe:  mov    0x2(%bx),%al
0x000c3b01:  xor    %ah,%ah
0x000c3b03:  mov    %ax,-0x10(%bp)
0x000c3b06:  mov    $0x87,%ax
0x000c3b09:  push   %ax
0x000c3b0a:  mov    $0x40,%ax
0x000c3b0d:  push   %ax
0x000c3b0e:  call   0xc7ac8

----------------
IN: 
0x000c3b11:  add    $0x4,%sp
0x000c3b14:  mov    %al,-0x12(%bp)
0x000c3b17:  mov    $0x88,%ax
0x000c3b1a:  push   %ax
0x000c3b1b:  mov    $0x40,%ax
0x000c3b1e:  push   %ax
0x000c3b1f:  call   0xc7ac8

----------------
IN: 
0x000c3b22:  add    $0x4,%sp
0x000c3b25:  mov    %al,-0x13(%bp)
0x000c3b28:  mov    $0x89,%ax
0x000c3b2b:  push   %ax
0x000c3b2c:  mov    $0x40,%ax
0x000c3b2f:  push   %ax
0x000c3b30:  call   0xc7ac8

----------------
IN: 
0x000c3b33:  add    $0x4,%sp
0x000c3b36:  mov    %al,-0x11(%bp)
0x000c3b39:  mov    -0x11(%bp),%al
0x000c3b3c:  and    $0x8,%al
0x000c3b3e:  test   %al,%al
0x000c3b40:  jne    0xc3c89

----------------
IN: 
0x000c3b44:  mov    -0x2(%bp),%al
0x000c3b47:  xor    %ah,%ah
0x000c3b49:  mov    $0x3,%cl
0x000c3b4b:  shl    %cl,%ax
0x000c3b4d:  mov    %ax,%bx
0x000c3b4f:  add    $0x1da,%bx
0x000c3b53:  mov    0x6(%bx),%al
0x000c3b56:  xor    %ah,%ah
0x000c3b58:  push   %ax
0x000c3b59:  mov    $0x3c6,%ax
0x000c3b5c:  push   %ax
0x000c3b5d:  call   0xc7b34

----------------
IN: 
0x000c3b60:  add    $0x4,%sp
0x000c3b63:  xor    %ax,%ax
0x000c3b65:  push   %ax
0x000c3b66:  mov    $0x3c8,%ax
0x000c3b69:  push   %ax
0x000c3b6a:  call   0xc7b34

----------------
IN: 
0x000c3b6d:  add    $0x4,%sp
0x000c3b70:  mov    -0x2(%bp),%al
0x000c3b73:  xor    %ah,%ah
0x000c3b75:  mov    $0x3,%cl
0x000c3b77:  shl    %cl,%ax
0x000c3b79:  mov    %ax,%bx
0x000c3b7b:  add    $0x1da,%bx
0x000c3b7f:  mov    0x7(%bx),%al
0x000c3b82:  jmp    0xc3ba6

----------------
IN: 
0x000c3ba6:  sub    $0x0,%al
0x000c3ba8:  je     0xc3b84

----------------
IN: 
0x000c3baa:  sub    $0x1,%al
0x000c3bac:  je     0xc3b8c

----------------
IN: 
0x000c3bae:  sub    $0x1,%al
0x000c3bb0:  je     0xc3b94

----------------
IN: 
0x000c3b94:  mov    $0xb6e,%bx
0x000c3b97:  mov    %bx,-0x6(%bp)
0x000c3b9a:  jmp    0xc3bb6

----------------
IN: 
0x000c3bb6:  xor    %ax,%ax
0x000c3bb8:  mov    %ax,-0xa(%bp)
0x000c3bbb:  jmp    0xc3c69

----------------
IN: 
0x000c3c69:  mov    -0xa(%bp),%ax
0x000c3c6c:  cmp    $0x100,%ax
0x000c3c6f:  jb     0xc3bbe

----------------
IN: 
0x000c3bbe:  mov    -0x2(%bp),%al
0x000c3bc1:  xor    %ah,%ah
0x000c3bc3:  mov    $0x3,%cl
0x000c3bc5:  shl    %cl,%ax
0x000c3bc7:  mov    %ax,%bx
0x000c3bc9:  add    $0x1da,%bx
0x000c3bcd:  mov    0x7(%bx),%al
0x000c3bd0:  xor    %ah,%ah
0x000c3bd2:  mov    %ax,%bx
0x000c3bd4:  mov    0x26a(%bx),%al
0x000c3bd8:  xor    %ah,%ah
0x000c3bda:  cmp    -0xa(%bp),%ax
0x000c3bdd:  jb     0xc3c3b

----------------
IN: 
0x000c3bdf:  mov    -0xa(%bp),%ax
0x000c3be2:  mov    %ax,%dx
0x000c3be4:  shl    %ax
0x000c3be6:  add    %dx,%ax
0x000c3be8:  add    -0x6(%bp),%ax
0x000c3beb:  mov    %ax,%bx
0x000c3bed:  mov    (%bx),%al
0x000c3bef:  xor    %ah,%ah
0x000c3bf1:  push   %ax
0x000c3bf2:  mov    $0x3c9,%ax
0x000c3bf5:  push   %ax
0x000c3bf6:  call   0xc7b34

----------------
IN: 
0x000c3bf9:  add    $0x4,%sp
0x000c3bfc:  mov    -0xa(%bp),%ax
0x000c3bff:  mov    %ax,%dx
0x000c3c01:  shl    %ax
0x000c3c03:  add    %dx,%ax
0x000c3c05:  inc    %ax
0x000c3c06:  add    -0x6(%bp),%ax
0x000c3c09:  mov    %ax,%bx
0x000c3c0b:  mov    (%bx),%al
0x000c3c0d:  xor    %ah,%ah
0x000c3c0f:  push   %ax
0x000c3c10:  mov    $0x3c9,%ax
0x000c3c13:  push   %ax
0x000c3c14:  call   0xc7b34

----------------
IN: 
0x000c3c17:  add    $0x4,%sp
0x000c3c1a:  mov    -0xa(%bp),%ax
0x000c3c1d:  mov    %ax,%dx
0x000c3c1f:  shl    %ax
0x000c3c21:  add    %dx,%ax
0x000c3c23:  inc    %ax
0x000c3c24:  inc    %ax
0x000c3c25:  add    -0x6(%bp),%ax
0x000c3c28:  mov    %ax,%bx
0x000c3c2a:  mov    (%bx),%al
0x000c3c2c:  xor    %ah,%ah
0x000c3c2e:  push   %ax
0x000c3c2f:  mov    $0x3c9,%ax
0x000c3c32:  push   %ax
0x000c3c33:  call   0xc7b34

----------------
IN: 
0x000c3c36:  add    $0x4,%sp
0x000c3c39:  jmp    0xc3c62

----------------
IN: 
0x000c3c62:  mov    -0xa(%bp),%ax
0x000c3c65:  inc    %ax
0x000c3c66:  mov    %ax,-0xa(%bp)
0x000c3c69:  mov    -0xa(%bp),%ax
0x000c3c6c:  cmp    $0x100,%ax
0x000c3c6f:  jb     0xc3bbe

----------------
IN: 
0x000c3c3b:  xor    %ax,%ax
0x000c3c3d:  push   %ax
0x000c3c3e:  mov    $0x3c9,%ax
0x000c3c41:  push   %ax
0x000c3c42:  call   0xc7b34

----------------
IN: 
0x000c3c45:  add    $0x4,%sp
0x000c3c48:  xor    %ax,%ax
0x000c3c4a:  push   %ax
0x000c3c4b:  mov    $0x3c9,%ax
0x000c3c4e:  push   %ax
0x000c3c4f:  call   0xc7b34

----------------
IN: 
0x000c3c52:  add    $0x4,%sp
0x000c3c55:  xor    %ax,%ax
0x000c3c57:  push   %ax
0x000c3c58:  mov    $0x3c9,%ax
0x000c3c5b:  push   %ax
0x000c3c5c:  call   0xc7b34

----------------
IN: 
0x000c3c5f:  add    $0x4,%sp
0x000c3c62:  mov    -0xa(%bp),%ax
0x000c3c65:  inc    %ax
0x000c3c66:  mov    %ax,-0xa(%bp)
0x000c3c69:  mov    -0xa(%bp),%ax
0x000c3c6c:  cmp    $0x100,%ax
0x000c3c6f:  jb     0xc3bbe

----------------
IN: 
0x000c3c73:  mov    -0x11(%bp),%al
0x000c3c76:  and    $0x2,%al
0x000c3c78:  cmp    $0x2,%al
0x000c3c7a:  jne    0xc3c89

----------------
IN: 
0x000c3c89:  mov    $0x3da,%ax
0x000c3c8c:  push   %ax
0x000c3c8d:  call   0xc7b1e

----------------
IN: 
0x000c7b1e:  push   %bp
0x000c7b1f:  mov    %sp,%bp
0x000c7b21:  push   %dx
0x000c7b22:  mov    0x4(%bp),%dx
0x000c7b25:  in     (%dx),%al
0x000c7b26:  pop    %dx
0x000c7b27:  pop    %bp
0x000c7b28:  ret    

----------------
IN: 
0x000c3c90:  inc    %sp
0x000c3c91:  inc    %sp
0x000c3c92:  xor    %ax,%ax
0x000c3c94:  mov    %ax,-0xa(%bp)
0x000c3c97:  jmp    0xc3cd1

----------------
IN: 
0x000c3cd1:  mov    -0xa(%bp),%ax
0x000c3cd4:  cmp    $0x13,%ax
0x000c3cd7:  jbe    0xc3c99

----------------
IN: 
0x000c3c99:  pushw  -0xa(%bp)
0x000c3c9c:  mov    $0x3c0,%ax
0x000c3c9f:  push   %ax
0x000c3ca0:  call   0xc7b34

----------------
IN: 
0x000c3ca3:  add    $0x4,%sp
0x000c3ca6:  mov    -0x7(%bp),%al
0x000c3ca9:  xor    %ah,%ah
0x000c3cab:  mov    $0x6,%cl
0x000c3cad:  shl    %cl,%ax
0x000c3caf:  mov    %ax,%bx
0x000c3cb1:  add    $0x26e,%bx
0x000c3cb5:  mov    -0xa(%bp),%ax
0x000c3cb8:  add    %ax,%bx
0x000c3cba:  mov    0x23(%bx),%al
0x000c3cbd:  xor    %ah,%ah
0x000c3cbf:  push   %ax
0x000c3cc0:  mov    $0x3c0,%ax
0x000c3cc3:  push   %ax
0x000c3cc4:  call   0xc7b34

----------------
IN: 
0x000c3cc7:  add    $0x4,%sp
0x000c3cca:  mov    -0xa(%bp),%ax
0x000c3ccd:  inc    %ax
0x000c3cce:  mov    %ax,-0xa(%bp)
0x000c3cd1:  mov    -0xa(%bp),%ax
0x000c3cd4:  cmp    $0x13,%ax
0x000c3cd7:  jbe    0xc3c99

----------------
IN: 
0x000c3cd9:  mov    $0x14,%ax
0x000c3cdc:  push   %ax
0x000c3cdd:  mov    $0x3c0,%ax
0x000c3ce0:  push   %ax
0x000c3ce1:  call   0xc7b34

----------------
IN: 
0x000c3ce4:  add    $0x4,%sp
0x000c3ce7:  xor    %ax,%ax
0x000c3ce9:  push   %ax
0x000c3cea:  mov    $0x3c0,%ax
0x000c3ced:  push   %ax
0x000c3cee:  call   0xc7b34

----------------
IN: 
0x000c3cf1:  add    $0x4,%sp
0x000c3cf4:  xor    %ax,%ax
0x000c3cf6:  push   %ax
0x000c3cf7:  mov    $0x3c4,%ax
0x000c3cfa:  push   %ax
0x000c3cfb:  call   0xc7b34

----------------
IN: 
0x000c3cfe:  add    $0x4,%sp
0x000c3d01:  mov    $0x3,%ax
0x000c3d04:  push   %ax
0x000c3d05:  mov    $0x3c5,%ax
0x000c3d08:  push   %ax
0x000c3d09:  call   0xc7b34

----------------
IN: 
0x000c3d0c:  add    $0x4,%sp
0x000c3d0f:  mov    $0x1,%ax
0x000c3d12:  mov    %ax,-0xa(%bp)
0x000c3d15:  jmp    0xc3d56

----------------
IN: 
0x000c3d56:  mov    -0xa(%bp),%ax
0x000c3d59:  cmp    $0x4,%ax
0x000c3d5c:  jbe    0xc3d17

----------------
IN: 
0x000c3d17:  pushw  -0xa(%bp)
0x000c3d1a:  mov    $0x3c4,%ax
0x000c3d1d:  push   %ax
0x000c3d1e:  call   0xc7b34

----------------
IN: 
0x000c3d21:  add    $0x4,%sp
0x000c3d24:  mov    -0xa(%bp),%ax
0x000c3d27:  dec    %ax
0x000c3d28:  push   %ax
0x000c3d29:  mov    -0x7(%bp),%al
0x000c3d2c:  xor    %ah,%ah
0x000c3d2e:  mov    $0x6,%cl
0x000c3d30:  shl    %cl,%ax
0x000c3d32:  mov    %ax,%bx
0x000c3d34:  add    $0x26e,%bx
0x000c3d38:  mov    -0x18(%bp),%ax
0x000c3d3b:  add    %ax,%bx
0x000c3d3d:  inc    %sp
0x000c3d3e:  inc    %sp
0x000c3d3f:  mov    0x5(%bx),%al
0x000c3d42:  xor    %ah,%ah
0x000c3d44:  push   %ax
0x000c3d45:  mov    $0x3c5,%ax
0x000c3d48:  push   %ax
0x000c3d49:  call   0xc7b34

----------------
IN: 
0x000c3d4c:  add    $0x4,%sp
0x000c3d4f:  mov    -0xa(%bp),%ax
0x000c3d52:  inc    %ax
0x000c3d53:  mov    %ax,-0xa(%bp)
0x000c3d56:  mov    -0xa(%bp),%ax
0x000c3d59:  cmp    $0x4,%ax
0x000c3d5c:  jbe    0xc3d17

----------------
IN: 
0x000c3d5e:  xor    %ax,%ax
0x000c3d60:  mov    %ax,-0xa(%bp)
0x000c3d63:  jmp    0xc3d9d

----------------
IN: 
0x000c3d9d:  mov    -0xa(%bp),%ax
0x000c3da0:  cmp    $0x8,%ax
0x000c3da3:  jbe    0xc3d65

----------------
IN: 
0x000c3d65:  pushw  -0xa(%bp)
0x000c3d68:  mov    $0x3ce,%ax
0x000c3d6b:  push   %ax
0x000c3d6c:  call   0xc7b34

----------------
IN: 
0x000c3d6f:  add    $0x4,%sp
0x000c3d72:  mov    -0x7(%bp),%al
0x000c3d75:  xor    %ah,%ah
0x000c3d77:  mov    $0x6,%cl
0x000c3d79:  shl    %cl,%ax
0x000c3d7b:  mov    %ax,%bx
0x000c3d7d:  add    $0x26e,%bx
0x000c3d81:  mov    -0xa(%bp),%ax
0x000c3d84:  add    %ax,%bx
0x000c3d86:  mov    0x37(%bx),%al
0x000c3d89:  xor    %ah,%ah
0x000c3d8b:  push   %ax
0x000c3d8c:  mov    $0x3cf,%ax
0x000c3d8f:  push   %ax
0x000c3d90:  call   0xc7b34

----------------
IN: 
0x000c3d93:  add    $0x4,%sp
0x000c3d96:  mov    -0xa(%bp),%ax
0x000c3d99:  inc    %ax
0x000c3d9a:  mov    %ax,-0xa(%bp)
0x000c3d9d:  mov    -0xa(%bp),%ax
0x000c3da0:  cmp    $0x8,%ax
0x000c3da3:  jbe    0xc3d65

----------------
IN: 
0x000c3da5:  mov    -0x2(%bp),%al
0x000c3da8:  xor    %ah,%ah
0x000c3daa:  mov    $0x3,%cl
0x000c3dac:  shl    %cl,%ax
0x000c3dae:  mov    %ax,%bx
0x000c3db0:  add    $0x1da,%bx
0x000c3db4:  mov    0x2(%bx),%al
0x000c3db7:  cmp    $0x1,%al
0x000c3db9:  jne    0xc3dc0

----------------
IN: 
0x000c3dc0:  mov    $0x3d4,%ax
0x000c3dc3:  mov    %ax,-0x16(%bp)
0x000c3dc6:  mov    $0x11,%ax
0x000c3dc9:  push   %ax
0x000c3dca:  pushw  -0x16(%bp)
0x000c3dcd:  call   0xc7b44

----------------
IN: 
0x000c7b44:  push   %bp
0x000c7b45:  mov    %sp,%bp
0x000c7b47:  push   %ax
0x000c7b48:  push   %dx
0x000c7b49:  mov    0x4(%bp),%dx
0x000c7b4c:  mov    0x6(%bp),%ax
0x000c7b4f:  out    %ax,(%dx)
0x000c7b50:  pop    %dx
0x000c7b51:  pop    %ax
0x000c7b52:  pop    %bp
0x000c7b53:  ret    

----------------
IN: 
0x000c3dd0:  add    $0x4,%sp
0x000c3dd3:  xor    %ax,%ax
0x000c3dd5:  mov    %ax,-0xa(%bp)
0x000c3dd8:  jmp    0xc3e12

----------------
IN: 
0x000c3e12:  mov    -0xa(%bp),%ax
0x000c3e15:  cmp    $0x18,%ax
0x000c3e18:  jbe    0xc3dda

----------------
IN: 
0x000c3dda:  pushw  -0xa(%bp)
0x000c3ddd:  pushw  -0x16(%bp)
0x000c3de0:  call   0xc7b34

----------------
IN: 
0x000c3de3:  add    $0x4,%sp
0x000c3de6:  mov    -0x7(%bp),%al
0x000c3de9:  xor    %ah,%ah
0x000c3deb:  mov    $0x6,%cl
0x000c3ded:  shl    %cl,%ax
0x000c3def:  mov    %ax,%bx
0x000c3df1:  add    $0x26e,%bx
0x000c3df5:  mov    -0xa(%bp),%ax
0x000c3df8:  add    %ax,%bx
0x000c3dfa:  mov    0xa(%bx),%al
0x000c3dfd:  xor    %ah,%ah
0x000c3dff:  push   %ax
0x000c3e00:  mov    -0x16(%bp),%ax
0x000c3e03:  inc    %ax
0x000c3e04:  push   %ax
0x000c3e05:  call   0xc7b34

----------------
IN: 
0x000c3e08:  add    $0x4,%sp
0x000c3e0b:  mov    -0xa(%bp),%ax
0x000c3e0e:  inc    %ax
0x000c3e0f:  mov    %ax,-0xa(%bp)
0x000c3e12:  mov    -0xa(%bp),%ax
0x000c3e15:  cmp    $0x18,%ax
0x000c3e18:  jbe    0xc3dda

----------------
IN: 
0x000c3e1a:  mov    -0x7(%bp),%al
0x000c3e1d:  xor    %ah,%ah
0x000c3e1f:  mov    $0x6,%cl
0x000c3e21:  shl    %cl,%ax
0x000c3e23:  mov    %ax,%bx
0x000c3e25:  add    $0x26e,%bx
0x000c3e29:  mov    0x9(%bx),%al
0x000c3e2c:  xor    %ah,%ah
0x000c3e2e:  push   %ax
0x000c3e2f:  mov    $0x3c2,%ax
0x000c3e32:  push   %ax
0x000c3e33:  call   0xc7b34

----------------
IN: 
0x000c3e36:  add    $0x4,%sp
0x000c3e39:  mov    $0x20,%ax
0x000c3e3c:  push   %ax
0x000c3e3d:  mov    $0x3c0,%ax
0x000c3e40:  push   %ax
0x000c3e41:  call   0xc7b34

----------------
IN: 
0x000c3e44:  add    $0x4,%sp
0x000c3e47:  mov    $0x3da,%ax
0x000c3e4a:  push   %ax
0x000c3e4b:  call   0xc7b1e

----------------
IN: 
0x000c3e4e:  inc    %sp
0x000c3e4f:  inc    %sp
0x000c3e50:  mov    -0x1(%bp),%al
0x000c3e53:  test   %al,%al
0x000c3e55:  jne    0xc3f1a

----------------
IN: 
0x000c3e59:  mov    -0x2(%bp),%al
0x000c3e5c:  xor    %ah,%ah
0x000c3e5e:  mov    $0x3,%cl
0x000c3e60:  shl    %cl,%ax
0x000c3e62:  mov    %ax,%bx
0x000c3e64:  add    $0x1da,%bx
0x000c3e68:  mov    0x1(%bx),%al
0x000c3e6b:  test   %al,%al
0x000c3e6d:  jne    0xc3e95

----------------
IN: 
0x000c3e6f:  mov    $0x4000,%ax
0x000c3e72:  push   %ax
0x000c3e73:  mov    $0x720,%ax
0x000c3e76:  push   %ax
0x000c3e77:  xor    %ax,%ax
0x000c3e79:  push   %ax
0x000c3e7a:  mov    -0x2(%bp),%al
0x000c3e7d:  xor    %ah,%ah
0x000c3e7f:  mov    $0x3,%cl
0x000c3e81:  shl    %cl,%ax
0x000c3e83:  mov    %ax,%bx
0x000c3e85:  add    $0x1da,%bx
0x000c3e89:  pushw  0x4(%bx)
0x000c3e8c:  call   0xc7a43

----------------
IN: 
0x000c7a43:  push   %bp
0x000c7a44:  mov    %sp,%bp
0x000c7a46:  push   %ax
0x000c7a47:  push   %cx
0x000c7a48:  push   %es
0x000c7a49:  push   %di
0x000c7a4a:  mov    0xa(%bp),%cx
0x000c7a4d:  cmp    $0x0,%cx
0x000c7a50:  je     0xc7a62

----------------
IN: 
0x000c7a52:  mov    0x4(%bp),%ax
0x000c7a55:  mov    %ax,%es
0x000c7a57:  mov    0x6(%bp),%ax
0x000c7a5a:  mov    %ax,%di
0x000c7a5c:  mov    0x8(%bp),%ax
0x000c7a5f:  cld    
0x000c7a60:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000c7a60:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000c7a62:  pop    %di
0x000c7a63:  pop    %es
0x000c7a64:  pop    %cx
0x000c7a65:  pop    %ax
0x000c7a66:  pop    %bp
0x000c7a67:  ret    

----------------
IN: 
0x000c3e8f:  add    $0x8,%sp
0x000c3e92:  jmp    0xc3f1a

----------------
IN: 
0x000c3f1a:  mov    0x4(%bp),%al
0x000c3f1d:  xor    %ah,%ah
0x000c3f1f:  push   %ax
0x000c3f20:  mov    $0x49,%ax
0x000c3f23:  push   %ax
0x000c3f24:  mov    $0x40,%ax
0x000c3f27:  push   %ax
0x000c3f28:  call   0xc7aee

----------------
IN: 
0x000c7aee:  push   %bp
0x000c7aef:  mov    %sp,%bp
0x000c7af1:  push   %ax
0x000c7af2:  push   %bx
0x000c7af3:  push   %ds
0x000c7af4:  mov    0x4(%bp),%ax
0x000c7af7:  mov    %ax,%ds
0x000c7af9:  mov    0x6(%bp),%bx
0x000c7afc:  mov    0x8(%bp),%al
0x000c7aff:  mov    %al,(%bx)
0x000c7b01:  pop    %ds
0x000c7b02:  pop    %bx
0x000c7b03:  pop    %ax
0x000c7b04:  pop    %bp
0x000c7b05:  ret    

----------------
IN: 
0x000c3f2b:  add    $0x6,%sp
0x000c3f2e:  pushw  -0xc(%bp)
0x000c3f31:  mov    $0x4a,%ax
0x000c3f34:  push   %ax
0x000c3f35:  mov    $0x40,%ax
0x000c3f38:  push   %ax
0x000c3f39:  call   0xc7b06

----------------
IN: 
0x000c7b06:  push   %bp
0x000c7b07:  mov    %sp,%bp
0x000c7b09:  push   %ax
0x000c7b0a:  push   %bx
0x000c7b0b:  push   %ds
0x000c7b0c:  mov    0x4(%bp),%ax
0x000c7b0f:  mov    %ax,%ds
0x000c7b11:  mov    0x6(%bp),%bx
0x000c7b14:  mov    0x8(%bp),%ax
0x000c7b17:  mov    %ax,(%bx)
0x000c7b19:  pop    %ds
0x000c7b1a:  pop    %bx
0x000c7b1b:  pop    %ax
0x000c7b1c:  pop    %bp
0x000c7b1d:  ret    

----------------
IN: 
0x000c3f3c:  add    $0x6,%sp
0x000c3f3f:  mov    -0x7(%bp),%al
0x000c3f42:  xor    %ah,%ah
0x000c3f44:  mov    $0x6,%cl
0x000c3f46:  shl    %cl,%ax
0x000c3f48:  mov    %ax,%bx
0x000c3f4a:  add    $0x26e,%bx
0x000c3f4e:  pushw  0x3(%bx)
0x000c3f51:  mov    $0x4c,%ax
0x000c3f54:  push   %ax
0x000c3f55:  mov    $0x40,%ax
0x000c3f58:  push   %ax
0x000c3f59:  call   0xc7b06

----------------
IN: 
0x000c3f5c:  add    $0x6,%sp
0x000c3f5f:  pushw  -0x16(%bp)
0x000c3f62:  mov    $0x63,%ax
0x000c3f65:  push   %ax
0x000c3f66:  mov    $0x40,%ax
0x000c3f69:  push   %ax
0x000c3f6a:  call   0xc7b06

----------------
IN: 
0x000c3f6d:  add    $0x6,%sp
0x000c3f70:  pushw  -0xe(%bp)
0x000c3f73:  mov    $0x84,%ax
0x000c3f76:  push   %ax
0x000c3f77:  mov    $0x40,%ax
0x000c3f7a:  push   %ax
0x000c3f7b:  call   0xc7aee

----------------
IN: 
0x000c3f7e:  add    $0x6,%sp
0x000c3f81:  pushw  -0x10(%bp)
0x000c3f84:  mov    $0x85,%ax
0x000c3f87:  push   %ax
0x000c3f88:  mov    $0x40,%ax
0x000c3f8b:  push   %ax
0x000c3f8c:  call   0xc7b06

----------------
IN: 
0x000c3f8f:  add    $0x6,%sp
0x000c3f92:  mov    -0x1(%bp),%al
0x000c3f95:  or     $0x60,%al
0x000c3f97:  xor    %ah,%ah
0x000c3f99:  push   %ax
0x000c3f9a:  mov    $0x87,%ax
0x000c3f9d:  push   %ax
0x000c3f9e:  mov    $0x40,%ax
0x000c3fa1:  push   %ax
0x000c3fa2:  call   0xc7aee

----------------
IN: 
0x000c3fa5:  add    $0x6,%sp
0x000c3fa8:  mov    $0xf9,%ax
0x000c3fab:  push   %ax
0x000c3fac:  mov    $0x88,%ax
0x000c3faf:  push   %ax
0x000c3fb0:  mov    $0x40,%ax
0x000c3fb3:  push   %ax
0x000c3fb4:  call   0xc7aee

----------------
IN: 
0x000c3fb7:  add    $0x6,%sp
0x000c3fba:  mov    $0x89,%ax
0x000c3fbd:  push   %ax
0x000c3fbe:  mov    $0x40,%ax
0x000c3fc1:  push   %ax
0x000c3fc2:  call   0xc7ac8

----------------
IN: 
0x000c3fc5:  add    $0x4,%sp
0x000c3fc8:  and    $0x7f,%al
0x000c3fca:  xor    %ah,%ah
0x000c3fcc:  push   %ax
0x000c3fcd:  mov    $0x89,%ax
0x000c3fd0:  push   %ax
0x000c3fd1:  mov    $0x40,%ax
0x000c3fd4:  push   %ax
0x000c3fd5:  call   0xc7aee

----------------
IN: 
0x000c3fd8:  add    $0x6,%sp
0x000c3fdb:  mov    $0x8,%ax
0x000c3fde:  push   %ax
0x000c3fdf:  mov    $0x8a,%ax
0x000c3fe2:  push   %ax
0x000c3fe3:  mov    $0x40,%ax
0x000c3fe6:  push   %ax
0x000c3fe7:  call   0xc7aee

----------------
IN: 
0x000c3fea:  add    $0x6,%sp
0x000c3fed:  mov    $0x35a3,%bx
0x000c3ff0:  push   %bx
0x000c3ff1:  mov    $0xa8,%ax
0x000c3ff4:  push   %ax
0x000c3ff5:  mov    $0x40,%ax
0x000c3ff8:  push   %ax
0x000c3ff9:  call   0xc7b06

----------------
IN: 
0x000c3ffc:  add    $0x6,%sp
0x000c3fff:  mov    $0xc000,%ax
0x000c4002:  push   %ax
0x000c4003:  mov    $0xaa,%ax
0x000c4006:  push   %ax
0x000c4007:  mov    $0x40,%ax
0x000c400a:  push   %ax
0x000c400b:  call   0xc7b06

----------------
IN: 
0x000c400e:  add    $0x6,%sp
0x000c4011:  xor    %ax,%ax
0x000c4013:  push   %ax
0x000c4014:  mov    $0x65,%ax
0x000c4017:  push   %ax
0x000c4018:  mov    $0x40,%ax
0x000c401b:  push   %ax
0x000c401c:  call   0xc7aee

----------------
IN: 
0x000c401f:  add    $0x6,%sp
0x000c4022:  xor    %ax,%ax
0x000c4024:  push   %ax
0x000c4025:  mov    $0x66,%ax
0x000c4028:  push   %ax
0x000c4029:  mov    $0x40,%ax
0x000c402c:  push   %ax
0x000c402d:  call   0xc7aee

----------------
IN: 
0x000c4030:  add    $0x6,%sp
0x000c4033:  mov    -0x2(%bp),%al
0x000c4036:  xor    %ah,%ah
0x000c4038:  mov    $0x3,%cl
0x000c403a:  shl    %cl,%ax
0x000c403c:  mov    %ax,%bx
0x000c403e:  add    $0x1da,%bx
0x000c4042:  mov    0x1(%bx),%al
0x000c4045:  test   %al,%al
0x000c4047:  jne    0xc4057

----------------
IN: 
0x000c4049:  mov    $0x7,%ax
0x000c404c:  push   %ax
0x000c404d:  mov    $0x6,%ax
0x000c4050:  push   %ax
0x000c4051:  call   0xc410f

----------------
IN: 
0x000c410f:  push   %bp
0x000c4110:  mov    %sp,%bp
0x000c4112:  add    $0xfffffff8,%sp
0x000c4115:  mov    0x4(%bp),%al
0x000c4118:  and    $0x3f,%al
0x000c411a:  mov    %al,0x4(%bp)
0x000c411d:  mov    0x6(%bp),%al
0x000c4120:  and    $0x1f,%al
0x000c4122:  mov    %al,0x6(%bp)
0x000c4125:  mov    0x4(%bp),%al
0x000c4128:  xor    %ah,%ah
0x000c412a:  mov    %al,%ah
0x000c412c:  xor    %al,%al
0x000c412e:  add    0x6(%bp),%al
0x000c4131:  adc    $0x0,%ah
0x000c4134:  mov    %ax,-0x4(%bp)
0x000c4137:  pushw  -0x4(%bp)
0x000c413a:  mov    $0x60,%ax
0x000c413d:  push   %ax
0x000c413e:  mov    $0x40,%ax
0x000c4141:  push   %ax
0x000c4142:  call   0xc7b06

----------------
IN: 
0x000c4145:  add    $0x6,%sp
0x000c4148:  mov    $0x89,%ax
0x000c414b:  push   %ax
0x000c414c:  mov    $0x40,%ax
0x000c414f:  push   %ax
0x000c4150:  call   0xc7ac8

----------------
IN: 
0x000c4153:  add    $0x4,%sp
0x000c4156:  mov    %al,-0x7(%bp)
0x000c4159:  mov    $0x85,%ax
0x000c415c:  push   %ax
0x000c415d:  mov    $0x40,%ax
0x000c4160:  push   %ax
0x000c4161:  call   0xc7adb

----------------
IN: 
0x000c7adb:  push   %bp
0x000c7adc:  mov    %sp,%bp
0x000c7ade:  push   %bx
0x000c7adf:  push   %ds
0x000c7ae0:  mov    0x4(%bp),%ax
0x000c7ae3:  mov    %ax,%ds
0x000c7ae5:  mov    0x6(%bp),%bx
0x000c7ae8:  mov    (%bx),%ax
0x000c7aea:  pop    %ds
0x000c7aeb:  pop    %bx
0x000c7aec:  pop    %bp
0x000c7aed:  ret    

----------------
IN: 
0x000c4164:  add    $0x4,%sp
0x000c4167:  mov    %ax,-0x2(%bp)
0x000c416a:  mov    -0x7(%bp),%al
0x000c416d:  and    $0x1,%al
0x000c416f:  test   %al,%al
0x000c4171:  je     0xc41d9

----------------
IN: 
0x000c4173:  mov    -0x2(%bp),%ax
0x000c4176:  cmp    $0x8,%ax
0x000c4179:  jbe    0xc41d9

----------------
IN: 
0x000c417b:  mov    0x6(%bp),%al
0x000c417e:  cmp    $0x8,%al
0x000c4180:  jae    0xc41d9

----------------
IN: 
0x000c4182:  mov    0x4(%bp),%al
0x000c4185:  cmp    $0x20,%al
0x000c4187:  jae    0xc41d9

----------------
IN: 
0x000c4189:  mov    0x4(%bp),%al
0x000c418c:  xor    %ah,%ah
0x000c418e:  inc    %ax
0x000c418f:  push   %ax
0x000c4190:  mov    0x6(%bp),%al
0x000c4193:  xor    %ah,%ah
0x000c4195:  cmp    -0xa(%bp),%ax
0x000c4198:  lea    -0x8(%bp),%sp
0x000c419b:  je     0xc41b2

----------------
IN: 
0x000c41b2:  mov    0x6(%bp),%al
0x000c41b5:  xor    %ah,%ah
0x000c41b7:  inc    %ax
0x000c41b8:  mov    -0x2(%bp),%cx
0x000c41bb:  imul   %cx
0x000c41bd:  mov    $0x3,%cl
0x000c41bf:  shr    %cl,%ax
0x000c41c1:  dec    %ax
0x000c41c2:  dec    %ax
0x000c41c3:  mov    %al,0x4(%bp)
0x000c41c6:  mov    0x6(%bp),%al
0x000c41c9:  xor    %ah,%ah
0x000c41cb:  inc    %ax
0x000c41cc:  mov    -0x2(%bp),%cx
0x000c41cf:  imul   %cx
0x000c41d1:  mov    $0x3,%cl
0x000c41d3:  shr    %cl,%ax
0x000c41d5:  dec    %ax
0x000c41d6:  mov    %al,0x6(%bp)
0x000c41d9:  mov    $0x63,%ax
0x000c41dc:  push   %ax
0x000c41dd:  mov    $0x40,%ax
0x000c41e0:  push   %ax
0x000c41e1:  call   0xc7adb

----------------
IN: 
0x000c41e4:  add    $0x4,%sp
0x000c41e7:  mov    %ax,-0x6(%bp)
0x000c41ea:  mov    $0xa,%ax
0x000c41ed:  push   %ax
0x000c41ee:  pushw  -0x6(%bp)
0x000c41f1:  call   0xc7b34

----------------
IN: 
0x000c41f4:  add    $0x4,%sp
0x000c41f7:  mov    0x4(%bp),%al
0x000c41fa:  xor    %ah,%ah
0x000c41fc:  push   %ax
0x000c41fd:  mov    -0x6(%bp),%ax
0x000c4200:  inc    %ax
0x000c4201:  push   %ax
0x000c4202:  call   0xc7b34

----------------
IN: 
0x000c4205:  add    $0x4,%sp
0x000c4208:  mov    $0xb,%ax
0x000c420b:  push   %ax
0x000c420c:  pushw  -0x6(%bp)
0x000c420f:  call   0xc7b34

----------------
IN: 
0x000c4212:  add    $0x4,%sp
0x000c4215:  mov    0x6(%bp),%al
0x000c4218:  xor    %ah,%ah
0x000c421a:  push   %ax
0x000c421b:  mov    -0x6(%bp),%ax
0x000c421e:  inc    %ax
0x000c421f:  push   %ax
0x000c4220:  call   0xc7b34

----------------
IN: 
0x000c4223:  add    $0x4,%sp
0x000c4226:  mov    %bp,%sp
0x000c4228:  pop    %bp
0x000c4229:  ret    

----------------
IN: 
0x000c4054:  add    $0x4,%sp
0x000c4057:  xor    %ax,%ax
0x000c4059:  mov    %ax,-0xa(%bp)
0x000c405c:  jmp    0xc4071

----------------
IN: 
0x000c4071:  mov    -0xa(%bp),%ax
0x000c4074:  cmp    $0x8,%ax
0x000c4077:  jb     0xc405e

----------------
IN: 
0x000c405e:  xor    %ax,%ax
0x000c4060:  push   %ax
0x000c4061:  pushw  -0xa(%bp)
0x000c4064:  call   0xc422a

----------------
IN: 
0x000c422a:  push   %bp
0x000c422b:  mov    %sp,%bp
0x000c422d:  add    $0xfffffff4,%sp
0x000c4230:  mov    0x4(%bp),%al
0x000c4233:  cmp    $0x7,%al
0x000c4235:  jbe    0xc423b

----------------
IN: 
0x000c423b:  pushw  0x6(%bp)
0x000c423e:  mov    0x4(%bp),%al
0x000c4241:  xor    %ah,%ah
0x000c4243:  shl    %ax
0x000c4245:  add    $0x50,%ax
0x000c4248:  push   %ax
0x000c4249:  mov    $0x40,%ax
0x000c424c:  push   %ax
0x000c424d:  call   0xc7b06

----------------
IN: 
0x000c4250:  add    $0x6,%sp
0x000c4253:  mov    $0x62,%ax
0x000c4256:  push   %ax
0x000c4257:  mov    $0x40,%ax
0x000c425a:  push   %ax
0x000c425b:  call   0xc7ac8

----------------
IN: 
0x000c425e:  add    $0x4,%sp
0x000c4261:  mov    %al,-0x3(%bp)
0x000c4264:  mov    0x4(%bp),%al
0x000c4267:  cmp    -0x3(%bp),%al
0x000c426a:  jne    0xc4326

----------------
IN: 
0x000c426e:  mov    $0x4a,%ax
0x000c4271:  push   %ax
0x000c4272:  mov    $0x40,%ax
0x000c4275:  push   %ax
0x000c4276:  call   0xc7adb

----------------
IN: 
0x000c4279:  add    $0x4,%sp
0x000c427c:  mov    %ax,-0x6(%bp)
0x000c427f:  mov    $0x84,%ax
0x000c4282:  push   %ax
0x000c4283:  mov    $0x40,%ax
0x000c4286:  push   %ax
0x000c4287:  call   0xc7ac8

----------------
IN: 
0x000c428a:  add    $0x4,%sp
0x000c428d:  xor    %ah,%ah
0x000c428f:  inc    %ax
0x000c4290:  mov    %ax,-0x8(%bp)
0x000c4293:  mov    0x6(%bp),%al
0x000c4296:  mov    %al,-0x1(%bp)
0x000c4299:  mov    0x6(%bp),%ax
0x000c429c:  xor    %al,%al
0x000c429e:  mov    %ah,%al
0x000c42a0:  xor    %ah,%ah
0x000c42a2:  mov    %al,-0x2(%bp)
0x000c42a5:  mov    -0x2(%bp),%al
0x000c42a8:  xor    %ah,%ah
0x000c42aa:  mov    -0x6(%bp),%cx
0x000c42ad:  imul   %cx
0x000c42af:  push   %ax
0x000c42b0:  mov    -0x6(%bp),%ax
0x000c42b3:  mov    -0x8(%bp),%cx
0x000c42b6:  imul   %cx
0x000c42b8:  or     $0xff,%al
0x000c42ba:  mov    %ax,%bx
0x000c42bc:  mov    0x4(%bp),%al
0x000c42bf:  xor    %ah,%ah
0x000c42c1:  xchg   %ax,%bx
0x000c42c2:  inc    %ax
0x000c42c3:  mov    %bx,%cx
0x000c42c5:  imul   %cx
0x000c42c7:  add    -0x1(%bp),%al
0x000c42ca:  adc    $0x0,%ah
0x000c42cd:  add    -0xe(%bp),%ax
0x000c42d0:  inc    %sp
0x000c42d1:  inc    %sp
0x000c42d2:  mov    %ax,-0xa(%bp)
0x000c42d5:  mov    $0x63,%ax
0x000c42d8:  push   %ax
0x000c42d9:  mov    $0x40,%ax
0x000c42dc:  push   %ax
0x000c42dd:  call   0xc7adb

----------------
IN: 
0x000c42e0:  add    $0x4,%sp
0x000c42e3:  mov    %ax,-0xc(%bp)
0x000c42e6:  mov    $0xe,%ax
0x000c42e9:  push   %ax
0x000c42ea:  pushw  -0xc(%bp)
0x000c42ed:  call   0xc7b34

----------------
IN: 
0x000c42f0:  add    $0x4,%sp
0x000c42f3:  mov    -0xa(%bp),%ax
0x000c42f6:  xor    %al,%al
0x000c42f8:  mov    %ah,%al
0x000c42fa:  xor    %ah,%ah
0x000c42fc:  push   %ax
0x000c42fd:  mov    -0xc(%bp),%ax
0x000c4300:  inc    %ax
0x000c4301:  push   %ax
0x000c4302:  call   0xc7b34

----------------
IN: 
0x000c4305:  add    $0x4,%sp
0x000c4308:  mov    $0xf,%ax
0x000c430b:  push   %ax
0x000c430c:  pushw  -0xc(%bp)
0x000c430f:  call   0xc7b34

----------------
IN: 
0x000c4312:  add    $0x4,%sp
0x000c4315:  mov    -0xa(%bp),%al
0x000c4318:  xor    %ah,%ah
0x000c431a:  push   %ax
0x000c431b:  mov    -0xc(%bp),%ax
0x000c431e:  inc    %ax
0x000c431f:  push   %ax
0x000c4320:  call   0xc7b34

----------------
IN: 
0x000c4323:  add    $0x4,%sp
0x000c4326:  mov    %bp,%sp
0x000c4328:  pop    %bp
0x000c4329:  ret    

----------------
IN: 
0x000c4067:  add    $0x4,%sp
0x000c406a:  mov    -0xa(%bp),%ax
0x000c406d:  inc    %ax
0x000c406e:  mov    %ax,-0xa(%bp)
0x000c4071:  mov    -0xa(%bp),%ax
0x000c4074:  cmp    $0x8,%ax
0x000c4077:  jb     0xc405e

----------------
IN: 
0x000c4326:  mov    %bp,%sp
0x000c4328:  pop    %bp
0x000c4329:  ret    

----------------
IN: 
0x000c4079:  xor    %ax,%ax
0x000c407b:  push   %ax
0x000c407c:  call   0xc439f

----------------
IN: 
0x000c439f:  push   %bp
0x000c43a0:  mov    %sp,%bp
0x000c43a2:  add    $0xfffffff2,%sp
0x000c43a5:  mov    0x4(%bp),%al
0x000c43a8:  cmp    $0x7,%al
0x000c43aa:  jbe    0xc43b0

----------------
IN: 
0x000c43b0:  mov    $0x49,%ax
0x000c43b3:  push   %ax
0x000c43b4:  mov    $0x40,%ax
0x000c43b7:  push   %ax
0x000c43b8:  call   0xc7ac8

----------------
IN: 
0x000c43bb:  add    $0x4,%sp
0x000c43be:  mov    %al,-0xd(%bp)
0x000c43c1:  mov    -0xd(%bp),%al
0x000c43c4:  xor    %ah,%ah
0x000c43c6:  push   %ax
0x000c43c7:  call   0xc79dc

----------------
IN: 
0x000c43ca:  inc    %sp
0x000c43cb:  inc    %sp
0x000c43cc:  mov    %al,-0xe(%bp)
0x000c43cf:  mov    -0xe(%bp),%al
0x000c43d2:  cmp    $0xff,%al
0x000c43d4:  jne    0xc43da

----------------
IN: 
0x000c43da:  lea    -0x2(%bp),%bx
0x000c43dd:  push   %bx
0x000c43de:  lea    -0x4(%bp),%bx
0x000c43e1:  push   %bx
0x000c43e2:  mov    0x4(%bp),%al
0x000c43e5:  xor    %ah,%ah
0x000c43e7:  push   %ax
0x000c43e8:  call   0xc432a

----------------
IN: 
0x000c432a:  push   %bp
0x000c432b:  mov    %sp,%bp
0x000c432d:  dec    %sp
0x000c432e:  dec    %sp
0x000c432f:  call   0xc7b54

----------------
IN: 
0x000c4332:  mov    %ax,-0x2(%bp)
0x000c4335:  xor    %ax,%ax
0x000c4337:  push   %ax
0x000c4338:  pushw  0x6(%bp)
0x000c433b:  pushw  -0x2(%bp)
0x000c433e:  call   0xc7b06

----------------
IN: 
0x000c4341:  add    $0x6,%sp
0x000c4344:  xor    %ax,%ax
0x000c4346:  push   %ax
0x000c4347:  pushw  0x8(%bp)
0x000c434a:  pushw  -0x2(%bp)
0x000c434d:  call   0xc7b06

----------------
IN: 
0x000c4350:  add    $0x6,%sp
0x000c4353:  mov    0x4(%bp),%al
0x000c4356:  cmp    $0x7,%al
0x000c4358:  jbe    0xc435e

----------------
IN: 
0x000c435e:  mov    $0x60,%ax
0x000c4361:  push   %ax
0x000c4362:  mov    $0x40,%ax
0x000c4365:  push   %ax
0x000c4366:  call   0xc7adb

----------------
IN: 
0x000c4369:  add    $0x4,%sp
0x000c436c:  push   %ax
0x000c436d:  pushw  0x6(%bp)
0x000c4370:  pushw  -0x2(%bp)
0x000c4373:  call   0xc7b06

----------------
IN: 
0x000c4376:  add    $0x6,%sp
0x000c4379:  mov    0x4(%bp),%al
0x000c437c:  xor    %ah,%ah
0x000c437e:  shl    %ax
0x000c4380:  add    $0x50,%ax
0x000c4383:  push   %ax
0x000c4384:  mov    $0x40,%ax
0x000c4387:  push   %ax
0x000c4388:  call   0xc7adb

----------------
IN: 
0x000c438b:  add    $0x4,%sp
0x000c438e:  push   %ax
0x000c438f:  pushw  0x8(%bp)
0x000c4392:  pushw  -0x2(%bp)
0x000c4395:  call   0xc7b06

----------------
IN: 
0x000c4398:  add    $0x6,%sp
0x000c439b:  mov    %bp,%sp
0x000c439d:  pop    %bp
0x000c439e:  ret    

----------------
IN: 
0x000c43eb:  add    $0x6,%sp
0x000c43ee:  mov    -0xe(%bp),%al
0x000c43f1:  xor    %ah,%ah
0x000c43f3:  mov    $0x3,%cl
0x000c43f5:  shl    %cl,%ax
0x000c43f7:  mov    %ax,%bx
0x000c43f9:  add    $0x1da,%bx
0x000c43fd:  mov    0x1(%bx),%al
0x000c4400:  test   %al,%al
0x000c4402:  jne    0xc4472

----------------
IN: 
0x000c4404:  mov    $0x4a,%ax
0x000c4407:  push   %ax
0x000c4408:  mov    $0x40,%ax
0x000c440b:  push   %ax
0x000c440c:  call   0xc7adb

----------------
IN: 
0x000c440f:  add    $0x4,%sp
0x000c4412:  mov    %ax,-0x8(%bp)
0x000c4415:  mov    $0x84,%ax
0x000c4418:  push   %ax
0x000c4419:  mov    $0x40,%ax
0x000c441c:  push   %ax
0x000c441d:  call   0xc7ac8

----------------
IN: 
0x000c4420:  add    $0x4,%sp
0x000c4423:  xor    %ah,%ah
0x000c4425:  inc    %ax
0x000c4426:  mov    %ax,-0xa(%bp)
0x000c4429:  mov    -0x8(%bp),%ax
0x000c442c:  mov    -0xa(%bp),%cx
0x000c442f:  imul   %cx
0x000c4431:  shl    %ax
0x000c4433:  or     $0xff,%al
0x000c4435:  mov    %ax,%bx
0x000c4437:  mov    0x4(%bp),%al
0x000c443a:  xor    %ah,%ah
0x000c443c:  xchg   %ax,%bx
0x000c443d:  inc    %ax
0x000c443e:  mov    %bx,%cx
0x000c4440:  imul   %cx
0x000c4442:  mov    %ax,-0xc(%bp)
0x000c4445:  pushw  -0xc(%bp)
0x000c4448:  mov    $0x4e,%ax
0x000c444b:  push   %ax
0x000c444c:  mov    $0x40,%ax
0x000c444f:  push   %ax
0x000c4450:  call   0xc7b06

----------------
IN: 
0x000c4453:  add    $0x6,%sp
0x000c4456:  mov    -0x8(%bp),%ax
0x000c4459:  mov    -0xa(%bp),%cx
0x000c445c:  imul   %cx
0x000c445e:  or     $0xff,%al
0x000c4460:  mov    %ax,%bx
0x000c4462:  mov    0x4(%bp),%al
0x000c4465:  xor    %ah,%ah
0x000c4467:  xchg   %ax,%bx
0x000c4468:  inc    %ax
0x000c4469:  mov    %bx,%cx
0x000c446b:  imul   %cx
0x000c446d:  mov    %ax,-0xc(%bp)
0x000c4470:  jmp    0xc4496

----------------
IN: 
0x000c4496:  mov    $0x63,%ax
0x000c4499:  push   %ax
0x000c449a:  mov    $0x40,%ax
0x000c449d:  push   %ax
0x000c449e:  call   0xc7adb

----------------
IN: 
0x000c44a1:  add    $0x4,%sp
0x000c44a4:  mov    %ax,-0x6(%bp)
0x000c44a7:  mov    $0xc,%ax
0x000c44aa:  push   %ax
0x000c44ab:  pushw  -0x6(%bp)
0x000c44ae:  call   0xc7b34

----------------
IN: 
0x000c44b1:  add    $0x4,%sp
0x000c44b4:  mov    -0xc(%bp),%ax
0x000c44b7:  xor    %al,%al
0x000c44b9:  mov    %ah,%al
0x000c44bb:  xor    %ah,%ah
0x000c44bd:  push   %ax
0x000c44be:  mov    -0x6(%bp),%ax
0x000c44c1:  inc    %ax
0x000c44c2:  push   %ax
0x000c44c3:  call   0xc7b34

----------------
IN: 
0x000c44c6:  add    $0x4,%sp
0x000c44c9:  mov    $0xd,%ax
0x000c44cc:  push   %ax
0x000c44cd:  pushw  -0x6(%bp)
0x000c44d0:  call   0xc7b34

----------------
IN: 
0x000c44d3:  add    $0x4,%sp
0x000c44d6:  mov    -0xc(%bp),%al
0x000c44d9:  xor    %ah,%ah
0x000c44db:  push   %ax
0x000c44dc:  mov    -0x6(%bp),%ax
0x000c44df:  inc    %ax
0x000c44e0:  push   %ax
0x000c44e1:  call   0xc7b34

----------------
IN: 
0x000c44e4:  add    $0x4,%sp
0x000c44e7:  mov    0x4(%bp),%al
0x000c44ea:  xor    %ah,%ah
0x000c44ec:  push   %ax
0x000c44ed:  mov    $0x62,%ax
0x000c44f0:  push   %ax
0x000c44f1:  mov    $0x40,%ax
0x000c44f4:  push   %ax
0x000c44f5:  call   0xc7aee

----------------
IN: 
0x000c44f8:  add    $0x6,%sp
0x000c44fb:  pushw  -0x2(%bp)
0x000c44fe:  mov    0x4(%bp),%al
0x000c4501:  xor    %ah,%ah
0x000c4503:  push   %ax
0x000c4504:  call   0xc422a

----------------
IN: 
0x000c4507:  add    $0x4,%sp
0x000c450a:  mov    %bp,%sp
0x000c450c:  pop    %bp
0x000c450d:  ret    

----------------
IN: 
0x000c407f:  inc    %sp
0x000c4080:  inc    %sp
0x000c4081:  mov    -0x2(%bp),%al
0x000c4084:  xor    %ah,%ah
0x000c4086:  mov    $0x3,%cl
0x000c4088:  shl    %cl,%ax
0x000c408a:  mov    %ax,%bx
0x000c408c:  add    $0x1da,%bx
0x000c4090:  mov    0x1(%bx),%al
0x000c4093:  test   %al,%al
0x000c4095:  jne    0xc40a5

----------------
IN: 
0x000c4097:  mov    $0x1104,%ax
0x000c409a:  mov    $0x0,%bl
0x000c409c:  int    $0x10

----------------
IN: 
0x000c8400:  cmp    $0x12,%ah
0x000c8403:  je     0xc8433

----------------
IN: 
0x000c8405:  cmp    $0x4f,%ah
0x000c8408:  je     0xc844e

----------------
IN: 
0x000c3807:  mov    0x12(%bp),%al
0x000c380a:  jmp    0xc38ee

----------------
IN: 
0x000c38ee:  sub    $0x0,%al
0x000c38f0:  je     0xc380d

----------------
IN: 
0x000c38f4:  sub    $0x1,%al
0x000c38f6:  je     0xc3836

----------------
IN: 
0x000c38fa:  sub    $0x1,%al
0x000c38fc:  je     0xc384b

----------------
IN: 
0x000c3900:  sub    $0x2,%al
0x000c3902:  je     0xc3860

----------------
IN: 
0x000c3860:  mov    0xc(%bp),%al
0x000c3863:  xor    %ah,%ah
0x000c3865:  push   %ax
0x000c3866:  mov    0x12(%bp),%al
0x000c3869:  xor    %ah,%ah
0x000c386b:  push   %ax
0x000c386c:  call   0xc6838

----------------
IN: 
0x000c6838:  push   %bp
0x000c6839:  mov    %sp,%bp
0x000c683b:  add    $0xfffffff8,%sp
0x000c683e:  call   0xc64c7

----------------
IN: 
0x000c64c7:  mov    $0x3c4,%dx
0x000c64ca:  mov    $0x100,%ax
0x000c64cd:  out    %ax,(%dx)
0x000c64ce:  mov    $0x402,%ax
0x000c64d1:  out    %ax,(%dx)
0x000c64d2:  mov    $0x704,%ax
0x000c64d5:  out    %ax,(%dx)
0x000c64d6:  mov    $0x300,%ax
0x000c64d9:  out    %ax,(%dx)
0x000c64da:  mov    $0x3ce,%dx
0x000c64dd:  mov    $0x204,%ax
0x000c64e0:  out    %ax,(%dx)
0x000c64e1:  mov    $0x5,%ax
0x000c64e4:  out    %ax,(%dx)
0x000c64e5:  mov    $0x406,%ax
0x000c64e8:  out    %ax,(%dx)
0x000c64e9:  ret    

----------------
IN: 
0x000c6841:  mov    0x6(%bp),%al
0x000c6844:  and    $0x4,%al
0x000c6846:  xor    %ah,%ah
0x000c6848:  mov    %al,%ah
0x000c684a:  xor    %al,%al
0x000c684c:  mov    $0x3,%cl
0x000c684e:  shl    %cl,%ax
0x000c6850:  push   %ax
0x000c6851:  mov    0x6(%bp),%al
0x000c6854:  and    $0x3,%al
0x000c6856:  xor    %ah,%ah
0x000c6858:  mov    %al,%ah
0x000c685a:  xor    %al,%al
0x000c685c:  mov    $0x6,%cl
0x000c685e:  shl    %cl,%ax
0x000c6860:  add    -0xa(%bp),%ax
0x000c6863:  inc    %sp
0x000c6864:  inc    %sp
0x000c6865:  mov    %ax,-0x2(%bp)
0x000c6868:  xor    %ax,%ax
0x000c686a:  mov    %ax,-0x6(%bp)
0x000c686d:  jmp    0xc68aa

----------------
IN: 
0x000c68aa:  mov    -0x6(%bp),%ax
0x000c68ad:  cmp    $0x100,%ax
0x000c68b0:  jb     0xc686f

----------------
IN: 
0x000c686f:  mov    -0x6(%bp),%ax
0x000c6872:  mov    $0x4,%cl
0x000c6874:  shl    %cl,%ax
0x000c6876:  mov    %ax,-0x8(%bp)
0x000c6879:  mov    -0x6(%bp),%ax
0x000c687c:  mov    $0x5,%cl
0x000c687e:  shl    %cl,%ax
0x000c6880:  add    -0x2(%bp),%ax
0x000c6883:  mov    %ax,-0x4(%bp)
0x000c6886:  mov    $0x10,%ax
0x000c6889:  push   %ax
0x000c688a:  mov    -0x8(%bp),%bx
0x000c688d:  add    $0x253e,%bx
0x000c6891:  push   %bx
0x000c6892:  mov    $0xc000,%ax
0x000c6895:  push   %ax
0x000c6896:  pushw  -0x4(%bp)
0x000c6899:  mov    $0xa000,%ax
0x000c689c:  push   %ax
0x000c689d:  call   0xc7a68

----------------
IN: 
0x000c7a68:  push   %bp
0x000c7a69:  mov    %sp,%bp
0x000c7a6b:  push   %ax
0x000c7a6c:  push   %cx
0x000c7a6d:  push   %es
0x000c7a6e:  push   %di
0x000c7a6f:  push   %ds
0x000c7a70:  push   %si
0x000c7a71:  mov    0xc(%bp),%cx
0x000c7a74:  cmp    $0x0,%cx
0x000c7a77:  je     0xc7a90

----------------
IN: 
0x000c7a79:  mov    0x4(%bp),%ax
0x000c7a7c:  mov    %ax,%es
0x000c7a7e:  mov    0x6(%bp),%ax
0x000c7a81:  mov    %ax,%di
0x000c7a83:  mov    0x8(%bp),%ax
0x000c7a86:  mov    %ax,%ds
0x000c7a88:  mov    0xa(%bp),%ax
0x000c7a8b:  mov    %ax,%si
0x000c7a8d:  cld    
0x000c7a8e:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c7a8e:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c7a90:  pop    %si
0x000c7a91:  pop    %ds
0x000c7a92:  pop    %di
0x000c7a93:  pop    %es
0x000c7a94:  pop    %cx
0x000c7a95:  pop    %ax
0x000c7a96:  pop    %bp
0x000c7a97:  ret    

----------------
IN: 
0x000c68a0:  add    $0xa,%sp
0x000c68a3:  mov    -0x6(%bp),%ax
0x000c68a6:  inc    %ax
0x000c68a7:  mov    %ax,-0x6(%bp)
0x000c68aa:  mov    -0x6(%bp),%ax
0x000c68ad:  cmp    $0x100,%ax
0x000c68b0:  jb     0xc686f

----------------
IN: 
0x000c68b2:  call   0xc64ea

----------------
IN: 
0x000c64ea:  mov    $0x3c4,%dx
0x000c64ed:  mov    $0x100,%ax
0x000c64f0:  out    %ax,(%dx)
0x000c64f1:  mov    $0x302,%ax
0x000c64f4:  out    %ax,(%dx)
0x000c64f5:  mov    $0x304,%ax
0x000c64f8:  out    %ax,(%dx)
0x000c64f9:  mov    $0x300,%ax
0x000c64fc:  out    %ax,(%dx)
0x000c64fd:  mov    $0x3cc,%dx
0x000c6500:  in     (%dx),%al
0x000c6501:  and    $0x1,%al
0x000c6503:  shl    $0x2,%al
0x000c6506:  or     $0xa,%al
0x000c6508:  mov    %al,%ah
0x000c650a:  mov    $0x6,%al
0x000c650c:  mov    $0x3ce,%dx
0x000c650f:  out    %ax,(%dx)
0x000c6510:  mov    $0x4,%ax
0x000c6513:  out    %ax,(%dx)
0x000c6514:  mov    $0x1005,%ax
0x000c6517:  out    %ax,(%dx)
0x000c6518:  ret    

----------------
IN: 
0x000c68b5:  mov    0x4(%bp),%al
0x000c68b8:  cmp    $0x10,%al
0x000c68ba:  jb     0xc68c5

----------------
IN: 
0x000c68c5:  mov    %bp,%sp
0x000c68c7:  pop    %bp
0x000c68c8:  ret    

----------------
IN: 
0x000c386f:  add    $0x4,%sp
0x000c3872:  jmp    0xc3942

----------------
IN: 
0x000c3942:  jmp    0xc3a84

----------------
IN: 
0x000c3a84:  pop    %bp
0x000c3a85:  ret    

----------------
IN: 
0x000c01d5:  popa   
0x000c01d6:  pop    %ds
0x000c01d7:  pop    %es
0x000c01d8:  popf   

----------------
IN: 
0x000c01d9:  iret   

----------------
IN: 
0x000c409e:  mov    $0x1103,%ax
0x000c40a1:  mov    $0x0,%bl
0x000c40a3:  int    $0x10

----------------
IN: 
0x000c0175:  call   0xc682b

----------------
IN: 
0x000c682b:  push   %ax
0x000c682c:  push   %dx
0x000c682d:  mov    $0x3c4,%dx
0x000c6830:  mov    %bl,%ah
0x000c6832:  mov    $0x3,%al
0x000c6834:  out    %ax,(%dx)
0x000c6835:  pop    %dx
0x000c6836:  pop    %ax
0x000c6837:  ret    

----------------
IN: 
0x000c0178:  jmp    0xc01d8

----------------
IN: 
0x000c01d8:  popf   

----------------
IN: 
0x000c40a5:  push   %ds
0x000c40a6:  xor    %ax,%ax
0x000c40a8:  mov    %ax,%ds
0x000c40aa:  mov    $0x133e,%ax
0x000c40ad:  mov    %ax,0x7c
0x000c40b0:  mov    $0xc000,%ax
0x000c40b3:  mov    %ax,0x7e
0x000c40b6:  pop    %ds
0x000c40b7:  mov    -0x10(%bp),%ax
0x000c40ba:  jmp    0xc40fc

----------------
IN: 
0x000c40fc:  sub    $0x8,%ax
0x000c40ff:  je     0xc40bd

----------------
IN: 
0x000c4101:  sub    $0x6,%ax
0x000c4104:  je     0xc40d2

----------------
IN: 
0x000c4106:  sub    $0x2,%ax
0x000c4109:  je     0xc40e6

----------------
IN: 
0x000c40e6:  push   %ds
0x000c40e7:  xor    %ax,%ax
0x000c40e9:  mov    %ax,%ds
0x000c40eb:  mov    $0x253e,%ax
0x000c40ee:  mov    %ax,0x10c
0x000c40f1:  mov    $0xc000,%ax
0x000c40f4:  mov    %ax,0x10e
0x000c40f7:  pop    %ds
0x000c40f8:  jmp    0xc410b

----------------
IN: 
0x000c410b:  mov    %bp,%sp
0x000c410d:  pop    %bp
0x000c410e:  ret    

----------------
IN: 
0x000c361b:  inc    %sp
0x000c361c:  inc    %sp
0x000c361d:  mov    0x12(%bp),%al
0x000c3620:  and    $0x7f,%al
0x000c3622:  jmp    0xc3648

----------------
IN: 
0x000c3648:  sub    $0x0,%al
0x000c364a:  jb     0xc363c

----------------
IN: 
0x000c364c:  cmp    $0x7,%al
0x000c364e:  ja     0xc366b

----------------
IN: 
0x000c3650:  xor    %ah,%ah
0x000c3652:  shl    %ax
0x000c3654:  mov    %ax,%bx
0x000c3656:  jmp    *%cs:0x365b(%bx)

----------------
IN: 
0x000c3630:  mov    0x12(%bp),%ax
0x000c3633:  xor    %al,%al
0x000c3635:  or     $0x30,%al
0x000c3637:  mov    %ax,0x12(%bp)
0x000c363a:  jmp    0xc366d

----------------
IN: 
0x000c366d:  jmp    0xc3a84

----------------
IN: 
0x000c014a:  call   0xc35c0

----------------
IN: 
0x000c35c0:  mov    $0xc000,%ax
0x000c35c3:  mov    %ax,%ds
0x000c35c5:  mov    $0x22,%si
0x000c35c8:  call   0xc35de

----------------
IN: 
0x000c35de:  mov    %ds,%ax
0x000c35e0:  mov    %ax,%es
0x000c35e2:  mov    %si,%di
0x000c35e4:  xor    %cx,%cx
0x000c35e6:  not    %cx
0x000c35e8:  xor    %al,%al
0x000c35ea:  cld    
0x000c35eb:  repnz scas %es:(%di),%al

----------------
IN: 
0x000c35eb:  repnz scas %es:(%di),%al

----------------
IN: 
0x000c35ed:  not    %cx
0x000c35ef:  dec    %cx
0x000c35f0:  push   %cx
0x000c35f1:  mov    $0x300,%ax
0x000c35f4:  mov    $0x0,%bx
0x000c35f7:  int    $0x10

----------------
IN: 
0x000c369b:  lea    0xe(%bp),%bx
0x000c369e:  push   %bx
0x000c369f:  lea    0x10(%bp),%bx
0x000c36a2:  push   %bx
0x000c36a3:  mov    0xc(%bp),%ax
0x000c36a6:  mov    %ah,%al
0x000c36a8:  xor    %ah,%ah
0x000c36aa:  push   %ax
0x000c36ab:  call   0xc432a

----------------
IN: 
0x000c36ae:  add    $0x6,%sp
0x000c36b1:  jmp    0xc3a84

----------------
IN: 
0x000c35f9:  pop    %cx
0x000c35fa:  mov    $0x1301,%ax
0x000c35fd:  mov    $0xb,%bx
0x000c3600:  mov    %si,%bp
0x000c3602:  int    $0x10

----------------
IN: 
0x000c3995:  pushw  0x8(%bp)
0x000c3998:  pushw  0x16(%bp)
0x000c399b:  mov    0xe(%bp),%al
0x000c399e:  xor    %ah,%ah
0x000c39a0:  push   %ax
0x000c39a1:  mov    0xe(%bp),%ax
0x000c39a4:  mov    %ah,%al
0x000c39a6:  xor    %ah,%ah
0x000c39a8:  push   %ax
0x000c39a9:  pushw  0x10(%bp)
0x000c39ac:  mov    0xc(%bp),%al
0x000c39af:  xor    %ah,%ah
0x000c39b1:  push   %ax
0x000c39b2:  mov    0xc(%bp),%ax
0x000c39b5:  mov    %ah,%al
0x000c39b7:  xor    %ah,%ah
0x000c39b9:  push   %ax
0x000c39ba:  mov    0x12(%bp),%al
0x000c39bd:  xor    %ah,%ah
0x000c39bf:  push   %ax
0x000c39c0:  call   0xc6b84

----------------
IN: 
0x000c6b84:  push   %bp
0x000c6b85:  mov    %sp,%bp
0x000c6b87:  add    $0xfffffff8,%sp
0x000c6b8a:  lea    -0x4(%bp),%bx
0x000c6b8d:  push   %bx
0x000c6b8e:  lea    -0x6(%bp),%bx
0x000c6b91:  push   %bx
0x000c6b92:  mov    0x6(%bp),%al
0x000c6b95:  xor    %ah,%ah
0x000c6b97:  push   %ax
0x000c6b98:  call   0xc432a

----------------
IN: 
0x000c6b9b:  add    $0x6,%sp
0x000c6b9e:  mov    0xc(%bp),%al
0x000c6ba1:  cmp    $0xff,%al
0x000c6ba3:  jne    0xc6bb7

----------------
IN: 
0x000c6bb7:  mov    0xc(%bp),%al
0x000c6bba:  xor    %ah,%ah
0x000c6bbc:  mov    %ax,-0x2(%bp)
0x000c6bbf:  mov    -0x2(%bp),%ax
0x000c6bc2:  mov    %al,%ah
0x000c6bc4:  xor    %al,%al
0x000c6bc6:  mov    %ax,-0x2(%bp)
0x000c6bc9:  mov    -0x2(%bp),%ax
0x000c6bcc:  add    0xe(%bp),%al
0x000c6bcf:  adc    $0x0,%ah
0x000c6bd2:  mov    %ax,-0x2(%bp)
0x000c6bd5:  pushw  -0x2(%bp)
0x000c6bd8:  mov    0x6(%bp),%al
0x000c6bdb:  xor    %ah,%ah
0x000c6bdd:  push   %ax
0x000c6bde:  call   0xc422a

----------------
IN: 
0x000c6be1:  add    $0x4,%sp
0x000c6be4:  jmp    0xc6c35

----------------
IN: 
0x000c6c35:  mov    0xa(%bp),%ax
0x000c6c38:  dec    %ax
0x000c6c39:  mov    %ax,0xa(%bp)
0x000c6c3c:  cmp    $0xffff,%ax
0x000c6c3f:  jne    0xc6be6

----------------
IN: 
0x000c6be6:  mov    0x12(%bp),%ax
0x000c6be9:  inc    %ax
0x000c6bea:  mov    %ax,0x12(%bp)
0x000c6bed:  dec    %ax
0x000c6bee:  push   %ax
0x000c6bef:  pushw  0x10(%bp)
0x000c6bf2:  call   0xc7ac8

----------------
IN: 
0x000c6bf5:  add    $0x4,%sp
0x000c6bf8:  mov    %al,-0x7(%bp)
0x000c6bfb:  mov    0x4(%bp),%al
0x000c6bfe:  and    $0x2,%al
0x000c6c00:  test   %al,%al
0x000c6c02:  je     0xc6c19

----------------
IN: 
0x000c6c19:  mov    $0x3,%ax
0x000c6c1c:  push   %ax
0x000c6c1d:  mov    0x8(%bp),%al
0x000c6c20:  xor    %ah,%ah
0x000c6c22:  push   %ax
0x000c6c23:  mov    0x6(%bp),%al
0x000c6c26:  xor    %ah,%ah
0x000c6c28:  push   %ax
0x000c6c29:  mov    -0x7(%bp),%al
0x000c6c2c:  xor    %ah,%ah
0x000c6c2e:  push   %ax
0x000c6c2f:  call   0xc5d6f

----------------
IN: 
0x000c5d6f:  push   %bp
0x000c5d70:  mov    %sp,%bp
0x000c5d72:  add    $0xfffffff0,%sp
0x000c5d75:  mov    0x6(%bp),%al
0x000c5d78:  cmp    $0xff,%al
0x000c5d7a:  jne    0xc5d8d

----------------
IN: 
0x000c5d8d:  mov    $0x49,%ax
0x000c5d90:  push   %ax
0x000c5d91:  mov    $0x40,%ax
0x000c5d94:  push   %ax
0x000c5d95:  call   0xc7ac8

----------------
IN: 
0x000c5d98:  add    $0x4,%sp
0x000c5d9b:  mov    %al,-0x4(%bp)
0x000c5d9e:  mov    -0x4(%bp),%al
0x000c5da1:  xor    %ah,%ah
0x000c5da3:  push   %ax
0x000c5da4:  call   0xc79dc

----------------
IN: 
0x000c5da7:  inc    %sp
0x000c5da8:  inc    %sp
0x000c5da9:  mov    %al,-0x5(%bp)
0x000c5dac:  mov    -0x5(%bp),%al
0x000c5daf:  cmp    $0xff,%al
0x000c5db1:  jne    0xc5db7

----------------
IN: 
0x000c5db7:  lea    -0xe(%bp),%bx
0x000c5dba:  push   %bx
0x000c5dbb:  lea    -0x10(%bp),%bx
0x000c5dbe:  push   %bx
0x000c5dbf:  mov    0x6(%bp),%al
0x000c5dc2:  xor    %ah,%ah
0x000c5dc4:  push   %ax
0x000c5dc5:  call   0xc432a

----------------
IN: 
0x000c5dc8:  add    $0x6,%sp
0x000c5dcb:  mov    -0xe(%bp),%al
0x000c5dce:  mov    %al,-0x2(%bp)
0x000c5dd1:  mov    -0xe(%bp),%ax
0x000c5dd4:  xor    %al,%al
0x000c5dd6:  mov    %ah,%al
0x000c5dd8:  xor    %ah,%ah
0x000c5dda:  mov    %al,-0x3(%bp)
0x000c5ddd:  mov    $0x84,%ax
0x000c5de0:  push   %ax
0x000c5de1:  mov    $0x40,%ax
0x000c5de4:  push   %ax
0x000c5de5:  call   0xc7ac8

----------------
IN: 
0x000c5de8:  add    $0x4,%sp
0x000c5deb:  xor    %ah,%ah
0x000c5ded:  inc    %ax
0x000c5dee:  mov    %ax,-0xa(%bp)
0x000c5df1:  mov    $0x4a,%ax
0x000c5df4:  push   %ax
0x000c5df5:  mov    $0x40,%ax
0x000c5df8:  push   %ax
0x000c5df9:  call   0xc7adb

----------------
IN: 
0x000c5dfc:  add    $0x4,%sp
0x000c5dff:  mov    %ax,-0x8(%bp)
0x000c5e02:  mov    0x4(%bp),%al
0x000c5e05:  jmp    0xc5ff3

----------------
IN: 
0x000c5ff3:  sub    $0x7,%al
0x000c5ff5:  je     0xc5e08

----------------
IN: 
0x000c5ff9:  sub    $0x1,%al
0x000c5ffb:  je     0xc5e0b

----------------
IN: 
0x000c5fff:  sub    $0x1,%al
0x000c6001:  je     0xc5e2e

----------------
IN: 
0x000c6005:  sub    $0x1,%al
0x000c6007:  je     0xc5e24

----------------
IN: 
0x000c600b:  sub    $0x3,%al
0x000c600d:  je     0xc5e1c

----------------
IN: 
0x000c6011:  jmp    0xc5e7e

----------------
IN: 
0x000c5e7e:  mov    -0x5(%bp),%al
0x000c5e81:  xor    %ah,%ah
0x000c5e83:  mov    $0x3,%cl
0x000c5e85:  shl    %cl,%ax
0x000c5e87:  mov    %ax,%bx
0x000c5e89:  add    $0x1da,%bx
0x000c5e8d:  mov    0x1(%bx),%al
0x000c5e90:  test   %al,%al
0x000c5e92:  jne    0xc5f18

----------------
IN: 
0x000c5e96:  mov    -0x3(%bp),%al
0x000c5e99:  xor    %ah,%ah
0x000c5e9b:  mov    -0x8(%bp),%cx
0x000c5e9e:  imul   %cx
0x000c5ea0:  add    -0x2(%bp),%al
0x000c5ea3:  adc    $0x0,%ah
0x000c5ea6:  shl    %ax
0x000c5ea8:  push   %ax
0x000c5ea9:  mov    -0x8(%bp),%ax
0x000c5eac:  mov    -0xa(%bp),%cx
0x000c5eaf:  imul   %cx
0x000c5eb1:  shl    %ax
0x000c5eb3:  or     $0xff,%al
0x000c5eb5:  mov    %ax,%bx
0x000c5eb7:  mov    0x6(%bp),%al
0x000c5eba:  xor    %ah,%ah
0x000c5ebc:  xchg   %ax,%bx
0x000c5ebd:  inc    %ax
0x000c5ebe:  mov    %bx,%cx
0x000c5ec0:  imul   %cx
0x000c5ec2:  add    -0x12(%bp),%ax
0x000c5ec5:  inc    %sp
0x000c5ec6:  inc    %sp
0x000c5ec7:  mov    %ax,-0xc(%bp)
0x000c5eca:  mov    0x4(%bp),%al
0x000c5ecd:  xor    %ah,%ah
0x000c5ecf:  push   %ax
0x000c5ed0:  pushw  -0xc(%bp)
0x000c5ed3:  mov    -0x5(%bp),%al
0x000c5ed6:  xor    %ah,%ah
0x000c5ed8:  mov    $0x3,%cl
0x000c5eda:  shl    %cl,%ax
0x000c5edc:  mov    %ax,%bx
0x000c5ede:  add    $0x1da,%bx
0x000c5ee2:  pushw  0x4(%bx)
0x000c5ee5:  call   0xc7aee

----------------
IN: 
0x000c5ee8:  add    $0x6,%sp
0x000c5eeb:  mov    0xa(%bp),%al
0x000c5eee:  cmp    $0x3,%al
0x000c5ef0:  jne    0xc5f15

----------------
IN: 
0x000c5ef2:  mov    0x8(%bp),%al
0x000c5ef5:  xor    %ah,%ah
0x000c5ef7:  push   %ax
0x000c5ef8:  mov    -0xc(%bp),%ax
0x000c5efb:  inc    %ax
0x000c5efc:  push   %ax
0x000c5efd:  mov    -0x5(%bp),%al
0x000c5f00:  xor    %ah,%ah
0x000c5f02:  mov    $0x3,%cl
0x000c5f04:  shl    %cl,%ax
0x000c5f06:  mov    %ax,%bx
0x000c5f08:  add    $0x1da,%bx
0x000c5f0c:  pushw  0x4(%bx)
0x000c5f0f:  call   0xc7aee

----------------
IN: 
0x000c5f12:  add    $0x6,%sp
0x000c5f15:  jmp    0xc5fea

----------------
IN: 
0x000c5fea:  mov    -0x2(%bp),%al
0x000c5fed:  inc    %ax
0x000c5fee:  mov    %al,-0x2(%bp)
0x000c5ff1:  jmp    0xc6014

----------------
IN: 
0x000c6014:  mov    -0x2(%bp),%al
0x000c6017:  xor    %ah,%ah
0x000c6019:  cmp    -0x8(%bp),%ax
0x000c601c:  jne    0xc602a

----------------
IN: 
0x000c602a:  mov    -0x3(%bp),%al
0x000c602d:  xor    %ah,%ah
0x000c602f:  cmp    -0xa(%bp),%ax
0x000c6032:  jne    0xc60ff

----------------
IN: 
0x000c60ff:  mov    -0x3(%bp),%al
0x000c6102:  xor    %ah,%ah
0x000c6104:  mov    %ax,-0xe(%bp)
0x000c6107:  mov    -0xe(%bp),%ax
0x000c610a:  mov    %al,%ah
0x000c610c:  xor    %al,%al
0x000c610e:  mov    %ax,-0xe(%bp)
0x000c6111:  mov    -0xe(%bp),%ax
0x000c6114:  add    -0x2(%bp),%al
0x000c6117:  adc    $0x0,%ah
0x000c611a:  mov    %ax,-0xe(%bp)
0x000c611d:  pushw  -0xe(%bp)
0x000c6120:  mov    0x6(%bp),%al
0x000c6123:  xor    %ah,%ah
0x000c6125:  push   %ax
0x000c6126:  call   0xc422a

----------------
IN: 
0x000c6129:  add    $0x4,%sp
0x000c612c:  mov    %bp,%sp
0x000c612e:  pop    %bp
0x000c612f:  ret    

----------------
IN: 
0x000c6c32:  add    $0x8,%sp
0x000c6c35:  mov    0xa(%bp),%ax
0x000c6c38:  dec    %ax
0x000c6c39:  mov    %ax,0xa(%bp)
0x000c6c3c:  cmp    $0xffff,%ax
0x000c6c3f:  jne    0xc6be6

----------------
IN: 
0x000c6c41:  mov    0x4(%bp),%al
0x000c6c44:  and    $0x1,%al
0x000c6c46:  test   %al,%al
0x000c6c48:  jne    0xc6c59

----------------
IN: 
0x000c6c59:  mov    %bp,%sp
0x000c6c5b:  pop    %bp
0x000c6c5c:  ret    

----------------
IN: 
0x000c39c3:  add    $0x10,%sp
0x000c39c6:  jmp    0xc3a84

----------------
IN: 
0x000c3604:  ret    

----------------
IN: 
0x000c35cb:  mov    $0x3e,%si
0x000c35ce:  call   0xc35de

----------------
IN: 
0x000c5e24:  mov    -0x3(%bp),%al
0x000c5e27:  inc    %ax
0x000c5e28:  mov    %al,-0x3(%bp)
0x000c5e2b:  jmp    0xc6014

----------------
IN: 
0x000c5e1c:  xor    %al,%al
0x000c5e1e:  mov    %al,-0x2(%bp)
0x000c5e21:  jmp    0xc6014

----------------
IN: 
0x000c35d1:  mov    $0x84,%si
0x000c35d4:  call   0xc35de

----------------
IN: 
0x000c35d7:  mov    $0xb9,%si
0x000c35da:  call   0xc35de

----------------
IN: 
0x000c35dd:  ret    

----------------
IN: 
0x000c014d:  call   0xc83d4

----------------
IN: 
0x000c83d4:  push   %ds
0x000c83d5:  push   %si
0x000c83d6:  push   %cs
0x000c83d7:  pop    %ds
0x000c83d8:  call   0xc83e9

----------------
IN: 
0x000c83db:  mov    $0x8356,%si
0x000c83de:  jne    0xc83e3

----------------
IN: 
0x000c83e0:  mov    $0x8330,%si
0x000c83e3:  call   0xc35de

----------------
IN: 
0x000c83e6:  pop    %si
0x000c83e7:  pop    %ds
0x000c83e8:  ret    

----------------
IN: 
0x000c0150:  lret   

----------------
IN: 
0x000fc536:  pushf  
0x000fc537:  cli    
0x000fc538:  cld    
0x000fc539:  push   %es
0x000fc53a:  push   %eax
0x000fc53c:  addr32 mov 0x8(%esp),%es
0x000fc541:  addr32 mov 0xc(%esp),%eax
0x000fc547:  addr32 popl %es:0x1c(%eax)
0x000fc54d:  addr32 popw %es:0x2(%eax)
0x000fc552:  addr32 popw %es:0x24(%eax)
0x000fc557:  addr32 mov %edi,%es:0x4(%eax)
0x000fc55d:  addr32 mov %esi,%es:0x8(%eax)
0x000fc563:  addr32 mov %ebp,%es:0xc(%eax)
0x000fc569:  addr32 mov %ebx,%es:0x10(%eax)
0x000fc56f:  addr32 mov %edx,%es:0x14(%eax)
0x000fc575:  addr32 mov %ecx,%es:0x18(%eax)
0x000fc57b:  addr32 mov %ds,%es:(%eax)
0x000fc57f:  mov    %ss,%cx
0x000fc581:  mov    %cx,%ds
0x000fc583:  pop    %eax
0x000fc585:  pop    %eax
0x000fc587:  pop    %ebp
0x000fc589:  retl   

----------------
IN: 
0x000f64ad:  pop    %ebx
0x000f64af:  pop    %esi
0x000f64b1:  pop    %edi
0x000f64b3:  retl   

----------------
IN: 
0x000f3abe:  call   0xf21d2

----------------
IN: 
0x000f3ac3:  add    $0x34,%esp
0x000f3ac6:  pop    %ebx
0x000f3ac7:  pop    %esi
0x000f3ac8:  pop    %edi
0x000f3ac9:  ret    

----------------
IN: 
0x07fe9844:  movzbl 0x2(%ebx),%ebx
0x07fe9848:  shl    $0x9,%ebx
0x07fe984b:  mov    %ebx,%eax
0x07fe984d:  call   0x7fe0b32

----------------
IN: 
0x07fe9852:  test   %eax,%eax
0x07fe9854:  jne    0x7fe9867

----------------
IN: 
0x07fe9867:  mov    0xf5da0,%eax
0x07fe986c:  lea    0x7ff(%ebx,%eax,1),%eax
0x07fe9873:  and    $0xfffff800,%eax
0x07fe9878:  mov    %eax,0xf5da0
0x07fe987d:  xor    %eax,%eax
0x07fe987f:  pop    %ebx
0x07fe9880:  pop    %esi
0x07fe9881:  pop    %edi
0x07fe9882:  pop    %ebp
0x07fe9883:  ret    

----------------
IN: 
0x07fe9a2c:  jmp    0x7fe9a31

----------------
IN: 
0x07fe9a31:  add    $0x3c,%esp
0x07fe9a34:  pop    %ebx
0x07fe9a35:  pop    %esi
0x07fe9a36:  pop    %edi
0x07fe9a37:  pop    %ebp
0x07fe9a38:  ret    

----------------
IN: 
0x07fed436:  jmp    0x7fed440

----------------
IN: 
0x07fed440:  xor    %ecx,%ecx
0x07fed442:  mov    $0x1,%edx
0x07fed447:  mov    $0xf589e,%eax
0x07fed44c:  call   0x7fe9a39

----------------
IN: 
0x07fe9a39:  push   %ebp
0x07fe9a3a:  push   %edi
0x07fe9a3b:  push   %esi
0x07fe9a3c:  push   %ebx
0x07fe9a3d:  push   %edi
0x07fe9a3e:  mov    %eax,%edi
0x07fe9a40:  mov    %edx,(%esp)
0x07fe9a43:  mov    %ecx,%esi
0x07fe9a45:  xor    %ebx,%ebx
0x07fe9a47:  mov    %edi,%eax
0x07fe9a49:  call   0xf16dc

----------------
IN: 
0x07fe9a4e:  mov    %eax,%ebp
0x07fe9a50:  mov    0xf5e0c,%eax
0x07fe9a55:  test   %ebx,%ebx
0x07fe9a57:  je     0x7fe9a5b

----------------
IN: 
0x07fe9a5b:  mov    %eax,%ebx
0x07fe9a5d:  jmp    0x7fe9a71

----------------
IN: 
0x07fe9a71:  test   %ebx,%ebx
0x07fe9a73:  jne    0x7fe9a5f

----------------
IN: 
0x07fe9a5f:  lea    0x4(%ebx),%edx
0x07fe9a62:  mov    %ebp,%ecx
0x07fe9a64:  mov    %edi,%eax
0x07fe9a66:  call   0xf16eb

----------------
IN: 
0x07fe9a6b:  test   %eax,%eax
0x07fe9a6d:  je     0x7fe9a9b

----------------
IN: 
0x07fe9a6f:  mov    (%ebx),%ebx
0x07fe9a71:  test   %ebx,%ebx
0x07fe9a73:  jne    0x7fe9a5f

----------------
IN: 
0x07fe9a75:  jmp    0x7fe9aa8

----------------
IN: 
0x07fe9aa8:  pop    %esi
0x07fe9aa9:  pop    %ebx
0x07fe9aaa:  pop    %esi
0x07fe9aab:  pop    %edi
0x07fe9aac:  pop    %ebp
0x07fe9aad:  ret    

----------------
IN: 
0x07fed451:  xor    %eax,%eax
0x07fed453:  call   0x7fe0b32

----------------
IN: 
0x07fed458:  cmpl   $0xc0000,0xf5da0
0x07fed462:  je     0x7fed473

----------------
IN: 
0x07fed464:  movl   $0xc0000,0xf5e00
0x07fed46e:  call   0x7feb3e5

----------------
IN: 
0x07feb3e5:  sub    $0x30,%esp
0x07feb3e8:  movl   $0xf536a,(%esp)
0x07feb3ef:  call   0xf2058

----------------
IN: 
0x07feb3f4:  mov    $0x26,%ecx
0x07feb3f9:  xor    %edx,%edx
0x07feb3fb:  lea    0xa(%esp),%eax
0x07feb3ff:  call   0xf172f

----------------
IN: 
0x07feb404:  movw   $0x3,0x26(%esp)
0x07feb40b:  lea    0xa(%esp),%eax
0x07feb40f:  call   0x7fe9cab

----------------
IN: 
0x07fe9cab:  movw   $0x200,0x24(%eax)
0x07fe9cb1:  movw   $0xf000,0x22(%eax)
0x07fe9cb7:  mov    $0xfc5af,%edx
0x07fe9cbc:  mov    %dx,0x20(%eax)
0x07fe9cc0:  call   0xf3bfa

----------------
IN: 
0x000f3bfa:  push   %ebx
0x000f3bfb:  push   %edx
0x000f3bfc:  mov    %esp,%edx
0x000f3bfe:  cmp    $0x7000,%edx
0x000f3c04:  jbe    0xf3c12

----------------
IN: 
0x000f3c12:  mov    $0x64a1,%ebx
0x000f3c17:  call   0xfc58b

----------------
IN: 
0x000fc58b:  mov    $0xc59f,%edx
0x000fc590:  jmp    0xfc496

----------------
IN: 
0x000fc496:  mov    %eax,%ecx
0x000fc498:  mov    $0x20,%eax
0x000fc49d:  mov    %eax,%ds

----------------
IN: 
0x000fc49f:  mov    %eax,%es

----------------
IN: 
0x000fc4a1:  mov    %eax,%ss

----------------
IN: 
0x000fc4a3:  mov    %eax,%fs

----------------
IN: 
0x000fc4a5:  mov    %eax,%gs
0x000fc4a7:  ljmpw  $0x18,$0xc4c4

----------------
IN: 
0x000fc5af:  int    $0x10

----------------
IN: 
0x000fc5b1:  lret   

----------------
IN: 
0x000f3c1c:  pop    %eax
0x000f3c1d:  pop    %ebx
0x000f3c1e:  ret    

----------------
IN: 
0x07fe9cc5:  jmp    0xf21d2

----------------
IN: 
0x07feb414:  movl   $0xf5dac,0x4(%esp)
0x07feb41c:  movl   $0xf538c,(%esp)
0x07feb423:  call   0xf2045

----------------
IN: 
0x000f2045:  lea    0x8(%esp),%ecx
0x000f2049:  mov    0x4(%esp),%edx
0x000f204d:  mov    $0xf5da8,%eax
0x000f2052:  call   0xf1e46

----------------
IN: 
0x000f3d5a:  push   %ebx
0x000f3d5b:  mov    %dl,%bl
0x000f3d5d:  cmpl   $0x0,0xf5e10
0x000f3d64:  je     0xf3d70

----------------
IN: 
0x000f3d66:  mov    0xfd386,%dx
0x000f3d6d:  mov    %bl,%al
0x000f3d6f:  out    %al,(%dx)
0x000f3d70:  cmp    $0xa,%bl
0x000f3d73:  jne    0xf3d7f

----------------
IN: 
0x000f3d7f:  movsbl %bl,%eax
0x000f3d82:  pop    %ebx
0x000f3d83:  jmp    0xf3d15

----------------
IN: 
0x000f3d15:  push   %ebx
0x000f3d16:  sub    $0x28,%esp
0x000f3d19:  mov    %eax,%ebx
0x000f3d1b:  mov    $0x26,%ecx
0x000f3d20:  xor    %edx,%edx
0x000f3d22:  lea    0x2(%esp),%eax
0x000f3d26:  call   0xf172f

----------------
IN: 
0x000f3d2b:  movw   $0x200,0x26(%esp)
0x000f3d32:  movb   $0xe,0x1f(%esp)
0x000f3d37:  mov    %bl,0x1e(%esp)
0x000f3d3b:  movw   $0xf000,0x24(%esp)
0x000f3d42:  mov    $0xfc5af,%eax
0x000f3d47:  mov    %ax,0x22(%esp)
0x000f3d4c:  lea    0x2(%esp),%eax
0x000f3d50:  call   0xf3bfa

----------------
IN: 
0x000c37db:  mov    $0x2,%ax
0x000c37de:  push   %ax
0x000c37df:  mov    0xc(%bp),%al
0x000c37e2:  xor    %ah,%ah
0x000c37e4:  push   %ax
0x000c37e5:  mov    $0xff,%ax
0x000c37e8:  push   %ax
0x000c37e9:  mov    0x12(%bp),%al
0x000c37ec:  xor    %ah,%ah
0x000c37ee:  push   %ax
0x000c37ef:  call   0xc5d6f

----------------
IN: 
0x000c5d7c:  mov    $0x62,%ax
0x000c5d7f:  push   %ax
0x000c5d80:  mov    $0x40,%ax
0x000c5d83:  push   %ax
0x000c5d84:  call   0xc7ac8

----------------
IN: 
0x000c5d87:  add    $0x4,%sp
0x000c5d8a:  mov    %al,0x6(%bp)
0x000c5d8d:  mov    $0x49,%ax
0x000c5d90:  push   %ax
0x000c5d91:  mov    $0x40,%ax
0x000c5d94:  push   %ax
0x000c5d95:  call   0xc7ac8

----------------
IN: 
0x000c5f15:  jmp    0xc5fea

----------------
IN: 
0x000c37f2:  add    $0x8,%sp
0x000c37f5:  jmp    0xc3a84

----------------
IN: 
0x000f3d55:  add    $0x28,%esp
0x000f3d58:  pop    %ebx
0x000f3d59:  ret    

----------------
IN: 
0x000c601e:  xor    %al,%al
0x000c6020:  mov    %al,-0x2(%bp)
0x000c6023:  mov    -0x3(%bp),%al
0x000c6026:  inc    %ax
0x000c6027:  mov    %al,-0x3(%bp)
0x000c602a:  mov    -0x3(%bp),%al
0x000c602d:  xor    %ah,%ah
0x000c602f:  cmp    -0xa(%bp),%ax
0x000c6032:  jne    0xc60ff

----------------
IN: 
0x000f3d75:  mov    $0xd,%eax
0x000f3d7a:  call   0xf3d15

----------------
IN: 
0x000f2057:  ret    

----------------
IN: 
0x07feb428:  add    $0x30,%esp
0x07feb42b:  ret    

----------------
IN: 
0x07fed473:  lea    0xc0(%esp),%edi
0x07fed47a:  mov    $0x4,%ecx
0x07fed47f:  xor    %eax,%eax
0x07fed481:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x07fed481:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x07fed483:  mov    0x7fefe93,%eax
0x07fed488:  test   %eax,%eax
0x07fed48a:  je     0x7fed595

----------------
IN: 
0x07fed490:  mov    0x18(%eax),%esi
0x07fed493:  movzwl 0x16(%eax),%eax
0x07fed497:  add    %esi,%eax
0x07fed499:  jmp    0x7fed4e2

----------------
IN: 
0x07fed4e2:  cmp    %eax,%esi
0x07fed4e4:  jb     0x7fed49b

----------------
IN: 
0x07fed49b:  mov    %eax,%ebx
0x07fed49d:  sub    %esi,%ebx
0x07fed49f:  cmp    $0x3,%ebx
0x07fed4a2:  jbe    0x7fed595

----------------
IN: 
0x07fed4a8:  mov    0x1(%esi),%dl
0x07fed4ab:  movzbl %dl,%ecx
0x07fed4ae:  cmp    %ecx,%ebx
0x07fed4b0:  jb     0x7fed595

----------------
IN: 
0x07fed4b6:  cmpb   $0x1,(%esi)
0x07fed4b9:  jne    0x7fed4c0

----------------
IN: 
0x07fed4c0:  add    %ecx,%esi
0x07fed4c2:  jmp    0x7fed4c5

----------------
IN: 
0x07fed4c5:  mov    %eax,%edx
0x07fed4c7:  sub    %esi,%edx
0x07fed4c9:  cmp    $0x1,%edx
0x07fed4cc:  jbe    0x7fed595

----------------
IN: 
0x07fed4d2:  cmpb   $0x0,(%esi)
0x07fed4d5:  jne    0x7fed4c4

----------------
IN: 
0x07fed4c4:  inc    %esi
0x07fed4c5:  mov    %eax,%edx
0x07fed4c7:  sub    %esi,%edx
0x07fed4c9:  cmp    $0x1,%edx
0x07fed4cc:  jbe    0x7fed595

----------------
IN: 
0x07fed4d7:  cmpb   $0x0,0x1(%esi)
0x07fed4db:  jne    0x7fed4c4

----------------
IN: 
0x07fed4dd:  jmp    0x7feddb0

----------------
IN: 
0x07feddb0:  add    $0x2,%esi
0x07feddb3:  jmp    0x7fed4e2

----------------
IN: 
0x07fed4bb:  cmp    $0x17,%dl
0x07fed4be:  ja     0x7fed4eb

----------------
IN: 
0x07fed4eb:  lea    0x8(%esi),%ebx
0x07fed4ee:  mov    $0x10,%ecx
0x07fed4f3:  lea    0xc0(%esp),%edx
0x07fed4fa:  mov    %ebx,%eax
0x07fed4fc:  call   0xf16eb

----------------
IN: 
0x07fed501:  test   %eax,%eax
0x07fed503:  je     0x7fed595

----------------
IN: 
0x07fed595:  call   0x7fe77d5

----------------
IN: 
0x07fe77d5:  push   %ebp
0x07fe77d6:  push   %edi
0x07fe77d7:  push   %esi
0x07fe77d8:  push   %ebx
0x07fe77d9:  sub    $0x50,%esp
0x07fe77dc:  mov    0xf5df8,%ebx
0x07fe77e2:  mov    %ebx,%esi
0x07fe77e4:  xor    %edi,%edi
0x07fe77e6:  jmp    0x7fe799f

----------------
IN: 
0x07fe799f:  test   %ebx,%ebx
0x07fe79a1:  jne    0x7fe77eb

----------------
IN: 
0x07fe77eb:  cmpw   $0xc03,0x10(%ebx)
0x07fe77f1:  jne    0x7fe799c

----------------
IN: 
0x07fe799c:  mov    0x4(%ebx),%ebx
0x07fe799f:  test   %ebx,%ebx
0x07fe79a1:  jne    0x7fe77eb

----------------
IN: 
0x07fe79a7:  mov    $0x2,%eax
0x07fe79ac:  call   0x7fe0aaf

----------------
IN: 
0x07fe79b1:  mov    $0xfe987,%eax
0x07fe79b6:  mov    %ax,0x24
0x07fe79bc:  movw   $0xf000,0x26
0x07fe79c5:  mov    $0x10,%eax
0x07fe79ca:  call   0x7fe0aba

----------------
IN: 
0x07fe79cf:  mov    $0xfc77c,%eax
0x07fe79d4:  mov    %ax,0x1d0
0x07fe79da:  movw   $0xf000,0x1d2
0x07fe79e3:  xor    %edx,%edx
0x07fe79e5:  mov    $0x7fe943d,%eax
0x07fe79ea:  call   0x7fe1f86

----------------
IN: 
0x07fe1f86:  push   %ebp
0x07fe1f87:  push   %edi
0x07fe1f88:  push   %esi
0x07fe1f89:  push   %ebx
0x07fe1f8a:  push   %esi
0x07fe1f8b:  mov    %eax,%esi
0x07fe1f8d:  mov    %edx,%ebp
0x07fe1f8f:  movl   $0x1000,(%esp)
0x07fe1f96:  mov    $0x1000,%ecx
0x07fe1f9b:  or     $0xffffffff,%edx
0x07fe1f9e:  mov    $0x7fefe6f,%eax
0x07fe1fa3:  call   0x7fe0b6f

----------------
IN: 
0x07fe1fa8:  mov    %eax,%ebx
0x07fe1faa:  test   %eax,%eax
0x07fe1fac:  je     0x7fe1fff

----------------
IN: 
0x07fe1fae:  lea    0x1000(%eax),%eax
0x07fe1fb4:  mov    %eax,0x4(%ebx)
0x07fe1fb7:  mov    %esp,%eax
0x07fe1fb9:  mov    $0xf5d90,%edx
0x07fe1fbe:  cmp    $0x7000,%eax
0x07fe1fc3:  jbe    0x7fe1fcd

----------------
IN: 
0x07fe1fcd:  mov    %edx,(%ebx)
0x07fe1fcf:  mov    0x8(%edx),%eax
0x07fe1fd2:  mov    %eax,0x8(%ebx)
0x07fe1fd5:  mov    %ebx,0x8(%edx)
0x07fe1fd8:  mov    0x8(%ebx),%eax
0x07fe1fdb:  mov    %ebx,(%eax)
0x07fe1fdd:  mov    %ebp,%eax
0x07fe1fdf:  mov    %esi,%ecx
0x07fe1fe1:  push   $0x7fe1ffd
0x07fe1fe6:  push   %ebp
0x07fe1fe7:  mov    %esp,0x4(%edx)
0x07fe1fea:  mov    0x4(%ebx),%esp
0x07fe1fed:  call   *%ecx

----------------
IN: 
0x07fe943d:  push   %ebp
0x07fe943e:  push   %edi
0x07fe943f:  push   %esi
0x07fe9440:  push   %ebx
0x07fe9441:  sub    $0xc,%esp
0x07fe9444:  mov    $0x10,%ebx
0x07fe9449:  in     $0x64,%al
0x07fe944b:  test   $0x1,%al
0x07fe944d:  je     0x7fe9575

----------------
IN: 
0x07fe9575:  lea    0xa(%esp),%ebx
0x07fe9579:  mov    %ebx,%edx
0x07fe957b:  mov    $0x1aa,%eax
0x07fe9580:  call   0x7fe2d84

----------------
IN: 
0x07fe2d84:  push   %ebp
0x07fe2d85:  push   %edi
0x07fe2d86:  push   %esi
0x07fe2d87:  push   %ebx
0x07fe2d88:  sub    $0x8,%esp
0x07fe2d8b:  mov    %eax,0x4(%esp)
0x07fe2d8f:  mov    %edx,%edi
0x07fe2d91:  call   0xf2165

----------------
IN: 
0x000f2165:  push   %ebx
0x000f2166:  mov    $0x2710,%ebx
0x000f216b:  in     $0x64,%al
0x000f216d:  test   $0x2,%al
0x000f216f:  je     0xf2192

----------------
IN: 
0x000f2192:  xor    %eax,%eax
0x000f2194:  pop    %ebx
0x000f2195:  ret    

----------------
IN: 
0x07fe2d96:  mov    %eax,%ebx
0x07fe2d98:  test   %eax,%eax
0x07fe2d9a:  jne    0x7fe2e16

----------------
IN: 
0x07fe2d9c:  movzbl 0x4(%esp),%eax
0x07fe2da1:  out    %al,$0x64
0x07fe2da3:  mov    0x4(%esp),%ebp
0x07fe2da7:  sar    $0xc,%ebp
0x07fe2daa:  and    $0xf,%ebp
0x07fe2dad:  xor    %esi,%esi
0x07fe2daf:  jmp    0x7fe2dc0

----------------
IN: 
0x07fe2dc0:  cmp    %ebp,%esi
0x07fe2dc2:  jl     0x7fe2db1

----------------
IN: 
0x07fe2dc4:  jmp    0x7fe2df8

----------------
IN: 
0x07fe2df8:  mov    0x4(%esp),%ebp
0x07fe2dfc:  sar    $0x8,%ebp
0x07fe2dff:  and    $0xf,%ebp
0x07fe2e02:  xor    %esi,%esi
0x07fe2e04:  cmp    %ebp,%esi
0x07fe2e06:  jl     0x7fe2dc6

----------------
IN: 
0x07fe2dc6:  mov    $0x2710,%edx
0x07fe2dcb:  in     $0x64,%al
0x07fe2dcd:  test   $0x1,%al
0x07fe2dcf:  jne    0x7fe2e0e

----------------
IN: 
0x07fe2e0e:  in     $0x60,%al
0x07fe2e10:  mov    %al,(%edi,%esi,1)
0x07fe2e13:  inc    %esi
0x07fe2e14:  jmp    0x7fe2e04

----------------
IN: 
0x07fe2e04:  cmp    %ebp,%esi
0x07fe2e06:  jl     0x7fe2dc6

----------------
IN: 
0x07fe2e08:  jmp    0x7fe2e16

----------------
IN: 
0x07fe2e16:  mov    %ebx,%eax
0x07fe2e18:  add    $0x8,%esp
0x07fe2e1b:  pop    %ebx
0x07fe2e1c:  pop    %esi
0x07fe2e1d:  pop    %edi
0x07fe2e1e:  pop    %ebp
0x07fe2e1f:  ret    

----------------
IN: 
0x07fe9585:  test   %eax,%eax
0x07fe9587:  je     0x7fe9471

----------------
IN: 
0x07fe9471:  movzbl 0xa(%esp),%eax
0x07fe9476:  cmp    $0x55,%al
0x07fe9478:  je     0x7fe948a

----------------
IN: 
0x07fe948a:  mov    %ebx,%edx
0x07fe948c:  mov    $0x1ab,%eax
0x07fe9491:  call   0x7fe2d84

----------------
IN: 
0x07fe9496:  test   %eax,%eax
0x07fe9498:  jne    0x7fe958d

----------------
IN: 
0x07fe949e:  movzbl 0xa(%esp),%eax
0x07fe94a3:  test   %al,%al
0x07fe94a5:  je     0x7fe94b4

----------------
IN: 
0x07fe94b4:  movb   $0x30,0xef78c
0x07fe94bb:  xor    %edx,%edx
0x07fe94bd:  xor    %ecx,%ecx
0x07fe94bf:  mov    $0xf504c,%eax
0x07fe94c4:  call   0xf18fc

----------------
IN: 
0x07fe94c9:  mov    %eax,%ebp
0x07fe94cb:  call   0xf1bd4

----------------
IN: 
0x000f1bd4:  push   %ebp
0x000f1bd5:  mov    %esp,%ebp
0x000f1bd7:  push   %edi
0x000f1bd8:  push   %esi
0x000f1bd9:  push   %ebx
0x000f1bda:  mov    %eax,%esi
0x000f1bdc:  mov    0xfd24c,%edi
0x000f1be2:  call   0xf1b38

----------------
IN: 
0x000f1b38:  push   %ebp
0x000f1b39:  mov    %esp,%ebp
0x000f1b3b:  push   %esi
0x000f1b3c:  push   %ebx
0x000f1b3d:  cmpb   $0x0,0xfd24a
0x000f1b44:  je     0xf1b8d

----------------
IN: 
0x000f1b8d:  mov    0xfd248,%dx
0x000f1b94:  test   %dx,%dx
0x000f1b97:  je     0xf1bce

----------------
IN: 
0x000f1b99:  mov    0xef7c4,%ecx
0x000f1b9f:  in     (%dx),%eax
0x000f1ba0:  mov    %eax,%esi
0x000f1ba2:  and    $0xffffff,%esi
0x000f1ba8:  cmp    0xef7c0,%esi
0x000f1bae:  jae    0xf1bb7

----------------
IN: 
0x000f1bb7:  mov    %esi,0xef7c0
0x000f1bbd:  xor    %ebx,%ebx
0x000f1bbf:  shld   $0x18,%ecx,%ebx
0x000f1bc3:  shl    $0x18,%ecx
0x000f1bc6:  mov    %ecx,%eax
0x000f1bc8:  or     %esi,%eax
0x000f1bca:  mov    %ebx,%edx
0x000f1bcc:  jmp    0xf1bd0

----------------
IN: 
0x000f1bd0:  pop    %ebx
0x000f1bd1:  pop    %esi
0x000f1bd2:  pop    %ebp
0x000f1bd3:  ret    

----------------
IN: 
0x000f1be7:  mov    %eax,%ecx
0x000f1be9:  mov    %edx,%ebx
0x000f1beb:  mov    %esi,%eax
0x000f1bed:  mul    %edi
0x000f1bef:  add    %eax,%ecx
0x000f1bf1:  adc    %edx,%ebx
0x000f1bf3:  mov    %ecx,%eax
0x000f1bf5:  mov    %ebx,%edx
0x000f1bf7:  pop    %ebx
0x000f1bf8:  pop    %esi
0x000f1bf9:  pop    %edi
0x000f1bfa:  pop    %ebp
0x000f1bfb:  ret    

----------------
IN: 
0x07fe94d0:  mov    %eax,%esi
0x07fe94d2:  mov    %edx,%edi
0x07fe94d4:  mov    %ebx,%edx
0x07fe94d6:  mov    $0x2ff,%eax
0x07fe94db:  call   0x7fe92a2

----------------
IN: 
0x07fe92a2:  push   %ebp
0x07fe92a3:  push   %edi
0x07fe92a4:  push   %esi
0x07fe92a5:  push   %ebx
0x07fe92a6:  sub    $0x8,%esp
0x07fe92a9:  mov    %eax,%edi
0x07fe92ab:  mov    %edx,%esi
0x07fe92ad:  mov    0xef78c,%al
0x07fe92b2:  mov    %al,0x6(%esp)
0x07fe92b6:  and    $0xffffffcc,%eax
0x07fe92b9:  or     $0x30,%eax
0x07fe92bc:  mov    %al,0x7(%esp)
0x07fe92c0:  lea    0x7(%esp),%edx
0x07fe92c4:  mov    $0x1060,%eax
0x07fe92c9:  call   0x7fe2d84

----------------
IN: 
0x07fe2db1:  call   0xf2165

----------------
IN: 
0x07fe2db6:  test   %eax,%eax
0x07fe2db8:  jne    0x7fe2e0a

----------------
IN: 
0x07fe2dba:  mov    (%edi,%esi,1),%al
0x07fe2dbd:  out    %al,$0x60
0x07fe2dbf:  inc    %esi
0x07fe2dc0:  cmp    %ebp,%esi
0x07fe2dc2:  jl     0x7fe2db1

----------------
IN: 
0x07fe92ce:  mov    %eax,%ebx
0x07fe92d0:  test   %eax,%eax
0x07fe92d2:  jne    0x7fe9433

----------------
IN: 
0x07fe92d8:  call   0xf21d2

----------------
IN: 
0x000f21db:  and    $0xfffff000,%eax
0x000f21e0:  cmp    $0xf5d90,%eax
0x000f21e5:  jne    0xf21f8

----------------
IN: 
0x000f21f8:  jmp    0xf157d

----------------
IN: 
0x000f1583:  push   %edi
0x000f1584:  push   %esi
0x000f1585:  push   %ebx
0x000f1586:  push   $0xf1594
0x000f158b:  push   %ebp
0x000f158c:  mov    %esp,0x4(%eax)
0x000f158f:  mov    0x4(%ecx),%esp
0x000f1592:  pop    %ebp
0x000f1593:  ret    

----------------
IN: 
0x07fe1ffd:  jmp    0x7fe2003

----------------
IN: 
0x07fe2003:  pop    %ebx
0x07fe2004:  pop    %ebx
0x07fe2005:  pop    %esi
0x07fe2006:  pop    %edi
0x07fe2007:  pop    %ebp
0x07fe2008:  ret    

----------------
IN: 
0x07fe79ef:  mov    $0x37a,%edx
0x07fe79f4:  in     (%dx),%al
0x07fe79f5:  and    $0xffffffdf,%eax
0x07fe79f8:  out    %al,(%dx)
0x07fe79f9:  mov    $0x78,%dl
0x07fe79fb:  mov    $0xaa,%al
0x07fe79fd:  out    %al,(%dx)
0x07fe79fe:  in     (%dx),%al
0x07fe79ff:  xor    %ecx,%ecx
0x07fe7a01:  cmp    $0xaa,%al
0x07fe7a03:  jne    0x7fe7a17

----------------
IN: 
0x07fe7a05:  movw   $0x378,0x408
0x07fe7a0e:  movb   $0x14,0x478
0x07fe7a15:  mov    $0x1,%cl
0x07fe7a17:  mov    $0x27a,%edx
0x07fe7a1c:  in     (%dx),%al
0x07fe7a1d:  and    $0xffffffdf,%eax
0x07fe7a20:  out    %al,(%dx)
0x07fe7a21:  mov    $0x78,%dl
0x07fe7a23:  mov    $0xaa,%al
0x07fe7a25:  out    %al,(%dx)
0x07fe7a26:  in     (%dx),%al
0x07fe7a27:  xor    %ebx,%ebx
0x07fe7a29:  cmp    $0xaa,%al
0x07fe7a2b:  jne    0x7fe7a43

----------------
IN: 
0x07fe7a43:  add    %ecx,%ebx
0x07fe7a45:  movzwl %bx,%eax
0x07fe7a48:  mov    %eax,0x4(%esp)
0x07fe7a4c:  movl   $0xf4c85,(%esp)
0x07fe7a53:  call   0xf2058

----------------
IN: 
0x07fe7a58:  mov    %ebx,%ecx
0x07fe7a5a:  shl    $0xe,%ecx
0x07fe7a5d:  mov    0x410,%eax
0x07fe7a62:  and    $0x3fff,%ax
0x07fe7a66:  or     %eax,%ecx
0x07fe7a68:  mov    %cx,0x410
0x07fe7a6f:  xor    %edx,%edx
0x07fe7a71:  mov    $0x3f8,%eax
0x07fe7a76:  call   0x7fe1da6

----------------
IN: 
0x07fe1da6:  push   %edi
0x07fe1da7:  push   %esi
0x07fe1da8:  push   %ebx
0x07fe1da9:  mov    %eax,%esi
0x07fe1dab:  mov    %eax,%ebx
0x07fe1dad:  mov    %edx,%edi
0x07fe1daf:  lea    0x1(%ebx),%ecx
0x07fe1db2:  mov    $0x2,%al
0x07fe1db4:  mov    %ecx,%edx
0x07fe1db6:  out    %al,(%dx)
0x07fe1db7:  in     (%dx),%al
0x07fe1db8:  cmp    $0x2,%al
0x07fe1dba:  jne    0x7fe1deb

----------------
IN: 
0x07fe1dbc:  lea    0x2(%ebx),%edx
0x07fe1dbf:  in     (%dx),%al
0x07fe1dc0:  mov    %al,%dl
0x07fe1dc2:  and    $0x3f,%edx
0x07fe1dc5:  xor    %eax,%eax
0x07fe1dc7:  cmp    $0x2,%dl
0x07fe1dca:  jne    0x7fe1ded

----------------
IN: 
0x07fe1dcc:  mov    %ecx,%edx
0x07fe1dce:  out    %al,(%dx)
0x07fe1dcf:  and    $0xff,%edi
0x07fe1dd5:  mov    %si,0x400(%edi,%edi,1)
0x07fe1ddd:  movb   $0xa,0x47c(%edi)
0x07fe1de4:  mov    $0x1,%eax
0x07fe1de9:  jmp    0x7fe1ded

----------------
IN: 
0x07fe1ded:  pop    %ebx
0x07fe1dee:  pop    %esi
0x07fe1def:  pop    %edi
0x07fe1df0:  ret    

----------------
IN: 
0x07fe7a7b:  mov    %eax,%ebx
0x07fe7a7d:  movzbl %al,%edx
0x07fe7a80:  mov    $0x2f8,%eax
0x07fe7a85:  call   0x7fe1da6

----------------
IN: 
0x07fe1deb:  xor    %eax,%eax
0x07fe1ded:  pop    %ebx
0x07fe1dee:  pop    %esi
0x07fe1def:  pop    %edi
0x07fe1df0:  ret    

----------------
IN: 
0x07fe7a8a:  add    %eax,%ebx
0x07fe7a8c:  movzbl %bl,%edx
0x07fe7a8f:  mov    $0x3e8,%eax
0x07fe7a94:  call   0x7fe1da6

----------------
IN: 
0x07fe7a99:  add    %eax,%ebx
0x07fe7a9b:  movzbl %bl,%edx
0x07fe7a9e:  mov    $0x2e8,%eax
0x07fe7aa3:  call   0x7fe1da6

----------------
IN: 
0x07fe7aa8:  add    %eax,%ebx
0x07fe7aaa:  movzwl %bx,%eax
0x07fe7aad:  mov    %eax,0x4(%esp)
0x07fe7ab1:  movl   $0xf4c99,(%esp)
0x07fe7ab8:  call   0xf2058

----------------
IN: 
0x07fe7abd:  mov    %ebx,%eax
0x07fe7abf:  shl    $0x9,%eax
0x07fe7ac2:  mov    0x410,%edx
0x07fe7ac8:  and    $0xf1,%dh
0x07fe7acb:  or     %edx,%eax
0x07fe7acd:  mov    %ax,0x410
0x07fe7ad3:  mov    $0xfefc7,%edx
0x07fe7ad8:  mov    $0xfd2b0,%eax
0x07fe7add:  mov    $0xb,%ecx
0x07fe7ae2:  mov    %edx,%edi
0x07fe7ae4:  mov    %eax,%esi
0x07fe7ae6:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe7ae6:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe7ae8:  mov    %ax,0x78
0x07fe7aee:  movw   $0xf000,0x7a
0x07fe7af7:  mov    $0x90,%al
0x07fe7af9:  out    %al,$0x70
0x07fe7afb:  in     $0x71,%al
0x07fe7afd:  mov    %al,%bl
0x07fe7aff:  test   $0xf0,%al
0x07fe7b01:  je     0x7fe7b12

----------------
IN: 
0x07fe7b03:  mov    %al,%dl
0x07fe7b05:  shr    $0x4,%dl
0x07fe7b08:  movzbl %dl,%edx
0x07fe7b0b:  xor    %eax,%eax
0x07fe7b0d:  call   0x7fe5f66

----------------
IN: 
0x07fe5f66:  push   %edi
0x07fe5f67:  push   %esi
0x07fe5f68:  push   %ebx
0x07fe5f69:  sub    $0x114,%esp
0x07fe5f6f:  mov    %eax,%esi
0x07fe5f71:  mov    %edx,%edi
0x07fe5f73:  lea    -0x1(%edx),%eax
0x07fe5f76:  cmp    $0x7,%eax
0x07fe5f79:  jbe    0x7fe5f90

----------------
IN: 
0x07fe5f90:  mov    $0x24,%eax
0x07fe5f95:  call   0x7fe0c1f

----------------
IN: 
0x07fe5f9a:  mov    %eax,%ebx
0x07fe5f9c:  test   %eax,%eax
0x07fe5f9e:  jne    0x7fe5fb4

----------------
IN: 
0x07fe5fb4:  mov    $0x24,%ecx
0x07fe5fb9:  xor    %edx,%edx
0x07fe5fbb:  call   0xf172f

----------------
IN: 
0x07fe5fc0:  mov    %esi,0x14(%ebx)
0x07fe5fc3:  movb   $0x1,(%ebx)
0x07fe5fc6:  movw   $0x200,0x1a(%ebx)
0x07fe5fcc:  mov    %edi,%eax
0x07fe5fce:  mov    %al,0x1(%ebx)
0x07fe5fd1:  movl   $0xffffffff,0xc(%ebx)
0x07fe5fd8:  movl   $0xffffffff,0x10(%ebx)
0x07fe5fdf:  imul   $0xa,%edi,%edi
0x07fe5fe2:  mov    0xfd254(%edi),%eax
0x07fe5fe8:  mov    0xfd258(%edi),%edx
0x07fe5fee:  mov    %eax,0x2(%ebx)
0x07fe5ff1:  mov    %edx,0x6(%ebx)
0x07fe5ff4:  lea    0x41(%esi),%eax
0x07fe5ff7:  mov    %eax,0x8(%esp)
0x07fe5ffb:  movl   $0xf4885,0x4(%esp)
0x07fe6003:  movl   $0x50,(%esp)
0x07fe600a:  call   0x7fe5d7d

----------------
IN: 
0x07fe5d7d:  push   %esi
0x07fe5d7e:  push   %ebx
0x07fe5d7f:  sub    $0xc,%esp
0x07fe5d82:  mov    0x18(%esp),%esi
0x07fe5d86:  test   %esi,%esi
0x07fe5d88:  je     0x7fe5ddc

----------------
IN: 
0x07fe5d8a:  mov    %esi,%eax
0x07fe5d8c:  call   0x7fe0c38

----------------
IN: 
0x07fe5d91:  mov    %eax,%ebx
0x07fe5d93:  test   %eax,%eax
0x07fe5d95:  jne    0x7fe5da8

----------------
IN: 
0x07fe5da8:  movl   $0x7fe0d20,(%esp)
0x07fe5daf:  mov    %eax,0x4(%esp)
0x07fe5db3:  add    %eax,%esi
0x07fe5db5:  mov    %esi,0x8(%esp)
0x07fe5db9:  lea    0x20(%esp),%ecx
0x07fe5dbd:  mov    0x1c(%esp),%edx
0x07fe5dc1:  mov    %esp,%eax
0x07fe5dc3:  call   0xf1e46

----------------
IN: 
0x000f1fcc:  lea    0x4(%ebx),%ebp
0x000f1fcf:  movsbl (%ebx),%edx
0x000f1fd2:  mov    0x4(%esp),%eax
0x000f1fd6:  call   0xf15a3

----------------
IN: 
0x000f1fdb:  jmp    0xf2033

----------------
IN: 
0x07fe5dc8:  mov    0x4(%esp),%eax
0x07fe5dcc:  mov    0x8(%esp),%edx
0x07fe5dd0:  cmp    %edx,%eax
0x07fe5dd2:  jb     0x7fe5dd7

----------------
IN: 
0x07fe5dd7:  movb   $0x0,(%eax)
0x07fe5dda:  jmp    0x7fe5dde

----------------
IN: 
0x07fe5dde:  mov    %ebx,%eax
0x07fe5de0:  add    $0xc,%esp
0x07fe5de3:  pop    %ebx
0x07fe5de4:  pop    %esi
0x07fe5de5:  ret    

----------------
IN: 
0x07fe600f:  mov    %eax,%edi
0x07fe6011:  mov    0xf5df8,%ecx
0x07fe6017:  jmp    0x7fe6024

----------------
IN: 
0x07fe6024:  test   %ecx,%ecx
0x07fe6026:  jne    0x7fe6019

----------------
IN: 
0x07fe6019:  cmpw   $0x601,0x10(%ecx)
0x07fe601f:  je     0x7fe604a

----------------
IN: 
0x07fe6021:  mov    0x4(%ecx),%ecx
0x07fe6024:  test   %ecx,%ecx
0x07fe6026:  jne    0x7fe6019

----------------
IN: 
0x07fe604a:  mov    $0xf4897,%edx
0x07fe604f:  lea    0x14(%esp),%eax
0x07fe6053:  call   0x7fe24aa

----------------
IN: 
0x07fe24aa:  push   %ebp
0x07fe24ab:  push   %edi
0x07fe24ac:  push   %esi
0x07fe24ad:  push   %ebx
0x07fe24ae:  sub    $0x14,%esp
0x07fe24b1:  mov    %eax,%ebx
0x07fe24b3:  mov    %edx,%ebp
0x07fe24b5:  mov    %ecx,%edi
0x07fe24b7:  mov    0x8(%ecx),%ecx
0x07fe24ba:  test   %ecx,%ecx
0x07fe24bc:  je     0x7fe24cc

----------------
IN: 
0x07fe24cc:  movzbl 0x2(%edi),%eax
0x07fe24d0:  mov    %ebx,%esi
0x07fe24d2:  test   %al,%al
0x07fe24d4:  je     0x7fe24f5

----------------
IN: 
0x07fe24f5:  movl   $0xf42ce,0xc(%esp)
0x07fe24fd:  movl   $0xf4c30,0x8(%esp)
0x07fe2505:  lea    0x100(%ebx),%eax
0x07fe250b:  sub    %esi,%eax
0x07fe250d:  mov    %eax,0x4(%esp)
0x07fe2511:  mov    %esi,(%esp)
0x07fe2514:  call   0x7fe2079

----------------
IN: 
0x07fe2519:  add    %eax,%esi
0x07fe251b:  mov    (%edi),%eax
0x07fe251d:  mov    %eax,%edi
0x07fe251f:  and    $0x7,%edi
0x07fe2522:  add    $0x100,%ebx
0x07fe2528:  shr    $0x3,%ax
0x07fe252c:  and    $0x1f,%eax
0x07fe252f:  mov    %eax,0x10(%esp)
0x07fe2533:  mov    %ebp,0xc(%esp)
0x07fe2537:  movl   $0xf42d9,0x8(%esp)
0x07fe253f:  mov    %ebx,%eax
0x07fe2541:  sub    %esi,%eax
0x07fe2543:  mov    %eax,0x4(%esp)
0x07fe2547:  mov    %esi,(%esp)
0x07fe254a:  call   0x7fe2079

----------------
IN: 
0x07fe254f:  add    %eax,%esi
0x07fe2551:  test   %edi,%edi
0x07fe2553:  je     0x7fe2571

----------------
IN: 
0x07fe2571:  mov    %esi,%eax
0x07fe2573:  add    $0x14,%esp
0x07fe2576:  pop    %ebx
0x07fe2577:  pop    %esi
0x07fe2578:  pop    %edi
0x07fe2579:  pop    %ebp
0x07fe257a:  ret    

----------------
IN: 
0x07fe6058:  mov    %esi,0x10(%esp)
0x07fe605c:  movl   $0x3f0,0xc(%esp)
0x07fe6064:  movl   $0xf489b,0x8(%esp)
0x07fe606c:  lea    0x114(%esp),%edx
0x07fe6073:  sub    %eax,%edx
0x07fe6075:  mov    %edx,0x4(%esp)
0x07fe6079:  mov    %eax,(%esp)
0x07fe607c:  call   0x7fe2079

----------------
IN: 
0x07fe6081:  lea    0x14(%esp),%eax
0x07fe6085:  call   0x7fe2af3

----------------
IN: 
0x07fe2af3:  push   %ebp
0x07fe2af4:  push   %edi
0x07fe2af5:  push   %esi
0x07fe2af6:  push   %ebx
0x07fe2af7:  sub    $0xc,%esp
0x07fe2afa:  mov    %eax,%edi
0x07fe2afc:  mov    %eax,0x4(%esp)
0x07fe2b00:  movl   $0xf44a7,(%esp)
0x07fe2b07:  call   0xf2058

----------------
IN: 
0x07fe2b0c:  mov    0x7fefe8b,%eax
0x07fe2b11:  mov    %eax,0x8(%esp)
0x07fe2b15:  mov    0x7fefe8f,%ebp
0x07fe2b1b:  xor    %esi,%esi
0x07fe2b1d:  jmp    0x7fe2b61

----------------
IN: 
0x07fe2b61:  cmp    0x8(%esp),%esi
0x07fe2b65:  jl     0x7fe2b1f

----------------
IN: 
0x07fe2b67:  or     $0xffffffff,%eax
0x07fe2b6a:  add    $0xc,%esp
0x07fe2b6d:  pop    %ebx
0x07fe2b6e:  pop    %esi
0x07fe2b6f:  pop    %edi
0x07fe2b70:  pop    %ebp
0x07fe2b71:  ret    

----------------
IN: 
0x07fe608a:  jmp    0x7fe602b

----------------
IN: 
0x07fe602b:  mov    0x7fefd23,%edx
0x07fe6031:  test   %eax,%eax
0x07fe6033:  jns    0x7fe6037

----------------
IN: 
0x07fe6035:  mov    %edx,%eax
0x07fe6037:  mov    %edi,(%esp)
0x07fe603a:  mov    %ebx,%ecx
0x07fe603c:  mov    %eax,%edx
0x07fe603e:  mov    $0x1,%eax
0x07fe6043:  call   0x7fe3164

----------------
IN: 
0x07fe3164:  push   %ebp
0x07fe3165:  push   %edi
0x07fe3166:  push   %esi
0x07fe3167:  push   %ebx
0x07fe3168:  push   %ebx
0x07fe3169:  mov    %eax,%esi
0x07fe316b:  mov    %edx,%ebp
0x07fe316d:  mov    %ecx,%edi
0x07fe316f:  mov    0x18(%esp),%ebx
0x07fe3173:  mov    $0x14,%eax
0x07fe3178:  call   0x7fe0c38

----------------
IN: 
0x07fe317d:  test   %eax,%eax
0x07fe317f:  jne    0x7fe3194

----------------
IN: 
0x07fe3194:  mov    %esi,(%eax)
0x07fe3196:  mov    %ebp,0x8(%eax)
0x07fe3199:  mov    %edi,0x4(%eax)
0x07fe319c:  test   %ebx,%ebx
0x07fe319e:  jne    0x7fe31a5

----------------
IN: 
0x07fe31a5:  mov    %ebx,0xc(%eax)
0x07fe31a8:  mov    0x7fefeb7,%ebx
0x07fe31ae:  movl   $0x7fefeb7,(%esp)
0x07fe31b5:  jmp    0x7fe31e5

----------------
IN: 
0x07fe31e5:  test   %ebx,%ebx
0x07fe31e7:  jne    0x7fe31b7

----------------
IN: 
0x07fe31e9:  mov    %ebx,0x10(%eax)
0x07fe31ec:  mov    (%esp),%edx
0x07fe31ef:  mov    %eax,(%edx)
0x07fe31f1:  pop    %eax
0x07fe31f2:  pop    %ebx
0x07fe31f3:  pop    %esi
0x07fe31f4:  pop    %edi
0x07fe31f5:  pop    %ebp
0x07fe31f6:  ret    

----------------
IN: 
0x07fe6048:  jmp    0x7fe608c

----------------
IN: 
0x07fe608c:  add    $0x114,%esp
0x07fe6092:  pop    %ebx
0x07fe6093:  pop    %esi
0x07fe6094:  pop    %edi
0x07fe6095:  ret    

----------------
IN: 
0x07fe7b12:  and    $0xf,%bl
0x07fe7b15:  je     0x7fe7b24

----------------
IN: 
0x07fe7b24:  mov    $0x2,%al
0x07fe7b26:  out    %al,$0xa
0x07fe7b28:  mov    $0x40,%eax
0x07fe7b2d:  call   0x7fe0aaf

----------------
IN: 
0x07fe7b32:  mov    $0xfef57,%eax
0x07fe7b37:  mov    %ax,0x38
0x07fe7b3d:  movw   $0xf000,0x3a
0x07fe7b46:  mov    $0x7d00,%eax
0x07fe7b4b:  call   0xf1bd4

----------------
IN: 
0x07fe7b50:  mov    %eax,0x7fefebf
0x07fe7b55:  mov    %edx,0x7fefec3
0x07fe7b5b:  mov    0xf5df8,%ebx
0x07fe7b61:  test   %ebx,%ebx
0x07fe7b63:  jne    0x7fe7b97

----------------
IN: 
0x07fe7b97:  xor    %ecx,%ecx
0x07fe7b99:  mov    %ebx,%edx
0x07fe7b9b:  mov    $0x7fefb2b,%eax
0x07fe7ba0:  call   0xf17ef

----------------
IN: 
0x07fe7ba5:  mov    0x4(%ebx),%ebx
0x07fe7ba8:  test   %ebx,%ebx
0x07fe7baa:  jne    0x7fe7b97

----------------
IN: 
0x07fe4fd9:  push   %ebp
0x07fe4fda:  push   %edi
0x07fe4fdb:  push   %esi
0x07fe4fdc:  push   %ebx
0x07fe4fdd:  sub    $0xc,%esp
0x07fe4fe0:  mov    %eax,%ebx
0x07fe4fe2:  movzbl 0x12(%eax),%edi
0x07fe4fe6:  movl   $0x1,0x18(%eax)
0x07fe4fed:  movzwl (%eax),%esi
0x07fe4ff0:  mov    $0x3c,%edx
0x07fe4ff5:  mov    %esi,%eax
0x07fe4ff7:  call   0xf17a8

----------------
IN: 
0x07fe4ffc:  mov    %eax,%ebp
0x07fe4ffe:  test   $0x1,%edi
0x07fe5004:  je     0x7fe5031

----------------
IN: 
0x07fe5031:  mov    $0xe,%edx
0x07fe5036:  mov    $0x3f4,%eax
0x07fe503b:  movl   $0x1f0,0x4(%esp)
0x07fe5043:  mov    %eax,(%esp)
0x07fe5046:  mov    0x4(%esp),%ecx
0x07fe504a:  mov    %ebx,%eax
0x07fe504c:  call   0x7fe4f31

----------------
IN: 
0x07fe4f31:  push   %ebp
0x07fe4f32:  push   %edi
0x07fe4f33:  push   %esi
0x07fe4f34:  push   %ebx
0x07fe4f35:  sub    $0x20,%esp
0x07fe4f38:  mov    %eax,%esi
0x07fe4f3a:  mov    %ecx,%edi
0x07fe4f3c:  mov    0x34(%esp),%ebp
0x07fe4f40:  mov    $0x10,%eax
0x07fe4f45:  mov    %edx,0x1c(%esp)
0x07fe4f49:  call   0x7fe0c1f

----------------
IN: 
0x07fe4f4e:  mov    %eax,%ebx
0x07fe4f50:  test   %eax,%eax
0x07fe4f52:  mov    0x1c(%esp),%edx
0x07fe4f56:  jne    0x7fe4f6e

----------------
IN: 
0x07fe4f6e:  mov    0x7fefec7,%eax
0x07fe4f73:  mov    %al,0x7(%ebx)
0x07fe4f76:  inc    %eax
0x07fe4f77:  mov    %eax,0x7fefec7
0x07fe4f7c:  mov    %dl,0x6(%ebx)
0x07fe4f7f:  test   %esi,%esi
0x07fe4f81:  je     0x7fe4f88

----------------
IN: 
0x07fe4f83:  movzwl (%esi),%ecx
0x07fe4f86:  jmp    0x7fe4f8b

----------------
IN: 
0x07fe4f8b:  mov    %ecx,0x8(%ebx)
0x07fe4f8e:  mov    %esi,0xc(%ebx)
0x07fe4f91:  mov    %di,(%ebx)
0x07fe4f94:  mov    %bp,0x2(%ebx)
0x07fe4f98:  movw   $0x0,0x4(%ebx)
0x07fe4f9e:  mov    %ecx,0x18(%esp)
0x07fe4fa2:  mov    %edx,0x14(%esp)
0x07fe4fa6:  movl   $0x0,0x10(%esp)
0x07fe4fae:  mov    %ebp,0xc(%esp)
0x07fe4fb2:  mov    %edi,0x8(%esp)
0x07fe4fb6:  mov    %eax,0x4(%esp)
0x07fe4fba:  movl   $0xf4728,(%esp)
0x07fe4fc1:  call   0xf2058

----------------
IN: 
0x07fe4fc6:  mov    %ebx,%edx
0x07fe4fc8:  mov    $0x7fe8d8e,%eax
0x07fe4fcd:  add    $0x20,%esp
0x07fe4fd0:  pop    %ebx
0x07fe4fd1:  pop    %esi
0x07fe4fd2:  pop    %edi
0x07fe4fd3:  pop    %ebp
0x07fe4fd4:  jmp    0x7fe1f86

----------------
IN: 
0x07fe8d8e:  push   %ebp
0x07fe8d8f:  push   %edi
0x07fe8d90:  push   %esi
0x07fe8d91:  push   %ebx
0x07fe8d92:  sub    $0x290,%esp
0x07fe8d98:  mov    %eax,0x34(%esp)
0x07fe8d9c:  lea    0x64(%esp),%ebx
0x07fe8da0:  mov    $0x2c,%ecx
0x07fe8da5:  xor    %edx,%edx
0x07fe8da7:  mov    %ebx,%eax
0x07fe8da9:  call   0xf172f

----------------
IN: 
0x07fe8dae:  mov    0x34(%esp),%eax
0x07fe8db2:  mov    %eax,0x88(%esp)
0x07fe8db9:  movb   $0x0,0x27(%esp)
0x07fe8dbe:  xor    %edi,%edi
0x07fe8dc0:  mov    0x34(%esp),%eax
0x07fe8dc4:  mov    (%eax),%ebp
0x07fe8dc6:  movzwl %bp,%edx
0x07fe8dc9:  mov    %edx,0x28(%esp)
0x07fe8dcd:  mov    %edx,%eax
0x07fe8dcf:  call   0x7fe6cf7

----------------
IN: 
0x07fe6cf7:  push   %esi
0x07fe6cf8:  push   %ebx
0x07fe6cf9:  xor    %ebx,%ebx
0x07fe6cfb:  lea    0x7(%eax),%esi
0x07fe6cfe:  mov    %esi,%edx
0x07fe6d00:  in     (%dx),%al
0x07fe6d01:  test   %al,%al
0x07fe6d03:  jns    0x7fe6d3b

----------------
IN: 
0x07fe6d3b:  movzbl %al,%eax
0x07fe6d3e:  jmp    0x7fe6d45

----------------
IN: 
0x07fe6d45:  pop    %ebx
0x07fe6d46:  pop    %esi
0x07fe6d47:  ret    

----------------
IN: 
0x07fe8dd4:  test   %eax,%eax
0x07fe8dd6:  js     0x7fe91aa

----------------
IN: 
0x07fe8ddc:  cmpb   $0x1,0x27(%esp)
0x07fe8de1:  sbb    %esi,%esi
0x07fe8de3:  and    $0xfffffff0,%esi
0x07fe8de6:  sub    $0x50,%esi
0x07fe8de9:  lea    0x6(%ebp),%edx
0x07fe8dec:  mov    %esi,%eax
0x07fe8dee:  out    %al,(%dx)
0x07fe8def:  mov    %edx,0x20(%esp)
0x07fe8df3:  call   0xf1c91

----------------
IN: 
0x000f1c91:  imul   $0x190,0xfd24c,%eax
0x000f1c9b:  mov    $0xf4240,%ecx
0x000f1ca0:  xor    %edx,%edx
0x000f1ca2:  div    %ecx
0x000f1ca4:  xor    %edx,%edx
0x000f1ca6:  jmp    0xf1c22

----------------
IN: 
0x000f1c22:  push   %edi
0x000f1c23:  push   %esi
0x000f1c24:  sub    $0x8,%esp
0x000f1c27:  mov    %eax,(%esp)
0x000f1c2a:  mov    %edx,0x4(%esp)
0x000f1c2e:  call   0xf1b38

----------------
IN: 
0x000f1c33:  mov    %eax,%esi
0x000f1c35:  mov    %edx,%edi
0x000f1c37:  add    (%esp),%esi
0x000f1c3a:  adc    0x4(%esp),%edi
0x000f1c3e:  jmp    0xf1c42

----------------
IN: 
0x000f1c42:  mov    %esi,%eax
0x000f1c44:  mov    %edi,%edx
0x000f1c46:  call   0xf1bfc

----------------
IN: 
0x000f1bfc:  push   %edi
0x000f1bfd:  push   %esi
0x000f1bfe:  mov    %eax,%esi
0x000f1c00:  mov    %edx,%edi
0x000f1c02:  call   0xf1b38

----------------
IN: 
0x000f1c07:  sub    %esi,%eax
0x000f1c09:  sbb    %edi,%edx
0x000f1c0b:  mov    %eax,%esi
0x000f1c0d:  mov    %edx,%edi
0x000f1c0f:  mov    %edi,%edi
0x000f1c11:  sar    $0x1f,%edi
0x000f1c14:  mov    %edi,%esi
0x000f1c16:  sub    %eax,%esi
0x000f1c18:  sbb    %edx,%edi
0x000f1c1a:  mov    %edi,%eax
0x000f1c1c:  shr    $0x1f,%eax
0x000f1c1f:  pop    %esi
0x000f1c20:  pop    %edi
0x000f1c21:  ret    

----------------
IN: 
0x000f1c4b:  test   %eax,%eax
0x000f1c4d:  je     0xf1c40

----------------
IN: 
0x000f1c4f:  add    $0x8,%esp
0x000f1c52:  pop    %esi
0x000f1c53:  pop    %edi
0x000f1c54:  ret    

----------------
IN: 
0x07fe8df8:  mov    0x28(%esp),%eax
0x07fe8dfc:  call   0x7fe6cf7

----------------
IN: 
0x07fe8e01:  test   %eax,%eax
0x07fe8e03:  mov    0x20(%esp),%edx
0x07fe8e07:  js     0x7fe91aa

----------------
IN: 
0x07fe8e0d:  mov    %esi,%eax
0x07fe8e0f:  out    %al,(%dx)
0x07fe8e10:  in     (%dx),%al
0x07fe8e11:  mov    %al,0x2c(%esp)
0x07fe8e15:  lea    0x2(%ebp),%ebx
0x07fe8e18:  mov    $0x55,%al
0x07fe8e1a:  mov    %ebx,%edx
0x07fe8e1c:  out    %al,(%dx)
0x07fe8e1d:  lea    0x3(%ebp),%ecx
0x07fe8e20:  mov    $0xaa,%al
0x07fe8e22:  mov    %ecx,%edx
0x07fe8e24:  out    %al,(%dx)
0x07fe8e25:  mov    %ebx,%edx
0x07fe8e27:  in     (%dx),%al
0x07fe8e28:  mov    %al,%bl
0x07fe8e2a:  mov    %ecx,%edx
0x07fe8e2c:  in     (%dx),%al
0x07fe8e2d:  cmp    $0xaa,%al
0x07fe8e2f:  jne    0x7fe91aa

----------------
IN: 
0x07fe8e35:  cmp    $0x55,%bl
0x07fe8e38:  jne    0x7fe91aa

----------------
IN: 
0x07fe8e3e:  mov    %esi,%eax
0x07fe8e40:  cmp    %al,0x2c(%esp)
0x07fe8e44:  jne    0x7fe91aa

----------------
IN: 
0x07fe8e4a:  mov    0x27(%esp),%dl
0x07fe8e4e:  mov    %dl,0x8c(%esp)
0x07fe8e55:  test   %edi,%edi
0x07fe8e57:  jne    0x7fe8f17

----------------
IN: 
0x07fe8e5d:  mov    0x88(%esp),%eax
0x07fe8e64:  mov    (%eax),%si
0x07fe8e67:  mov    0x2(%eax),%ax
0x07fe8e6b:  lea    0x2(%eax),%edi
0x07fe8e6e:  mov    $0xe,%al
0x07fe8e70:  mov    %edi,%edx
0x07fe8e72:  out    %al,(%dx)
0x07fe8e73:  mov    $0x5,%eax
0x07fe8e78:  call   0xf1c55

----------------
IN: 
0x000f1c55:  imul   0xfd24c,%eax
0x000f1c5c:  mov    $0x3e8,%ecx
0x000f1c61:  xor    %edx,%edx
0x000f1c63:  div    %ecx
0x000f1c65:  xor    %edx,%edx
0x000f1c67:  jmp    0xf1c22

----------------
IN: 
0x000f1c40:  pause  
0x000f1c42:  mov    %esi,%eax
0x000f1c44:  mov    %edi,%edx
0x000f1c46:  call   0xf1bfc

----------------
IN: 
0x07fe8e7d:  mov    $0xa,%al
0x07fe8e7f:  mov    %edi,%edx
0x07fe8e81:  out    %al,(%dx)
0x07fe8e82:  mov    $0x2,%eax
0x07fe8e87:  call   0x7fe67a6

----------------
IN: 
0x07fe67a6:  imul   0xfd24c,%eax
0x07fe67ad:  xor    %edx,%edx
0x07fe67af:  jmp    0xf2802

----------------
IN: 
0x000f2802:  push   %edi
0x000f2803:  push   %esi
0x000f2804:  sub    $0x8,%esp
0x000f2807:  mov    %eax,(%esp)
0x000f280a:  mov    %edx,0x4(%esp)
0x000f280e:  call   0xf1b38

----------------
IN: 
0x000f2813:  mov    %eax,%esi
0x000f2815:  mov    %edx,%edi
0x000f2817:  add    (%esp),%esi
0x000f281a:  adc    0x4(%esp),%edi
0x000f281e:  jmp    0xf2825

----------------
IN: 
0x000f2825:  mov    %esi,%eax
0x000f2827:  mov    %edi,%edx
0x000f2829:  call   0xf1bfc

----------------
IN: 
0x000f282e:  test   %eax,%eax
0x000f2830:  je     0xf2820

----------------
IN: 
0x000f2820:  call   0xf21d2

----------------
IN: 
0x07fe5051:  and    $0x4,%edi
0x07fe5054:  je     0x7fe507d

----------------
IN: 
0x07fe507d:  mov    $0xf,%edx
0x07fe5082:  mov    $0x374,%eax
0x07fe5087:  mov    $0x170,%edi
0x07fe508c:  mov    %eax,(%esp)
0x07fe508f:  mov    %edi,%ecx
0x07fe5091:  mov    %ebx,%eax
0x07fe5093:  call   0x7fe4f31

----------------
IN: 
0x07fe5098:  add    $0xc,%esp
0x07fe509b:  pop    %ebx
0x07fe509c:  pop    %esi
0x07fe509d:  pop    %edi
0x07fe509e:  pop    %ebp
0x07fe509f:  ret    

----------------
IN: 
0x07fe7bac:  movb   $0xc0,0x476
0x07fe7bb3:  mov    $0x40,%eax
0x07fe7bb8:  call   0x7fe0aba

----------------
IN: 
0x07fe7bbd:  mov    $0xfc76a,%eax
0x07fe7bc2:  mov    %ax,0x1d8
0x07fe7bc8:  movw   $0xf000,0x1da
0x07fe7bd1:  mov    0xf5df8,%edi
0x07fe7bd7:  jmp    0x7fe7db7

----------------
IN: 
0x07fe7db7:  test   %edi,%edi
0x07fe7db9:  jne    0x7fe7bdc

----------------
IN: 
0x07fe7bdc:  cmpw   $0x106,0x10(%edi)
0x07fe7be2:  jne    0x7fe7db4

----------------
IN: 
0x07fe7db4:  mov    0x4(%edi),%edi
0x07fe7db7:  test   %edi,%edi
0x07fe7db9:  jne    0x7fe7bdc

----------------
IN: 
0x07fe7dbf:  mov    0xf5df8,%ebx
0x07fe7dc5:  jmp    0x7fe7dda

----------------
IN: 
0x07fe7dda:  test   %ebx,%ebx
0x07fe7ddc:  jne    0x7fe7dc7

----------------
IN: 
0x07fe7dc7:  cmpl   $0x10011af4,0xc(%ebx)
0x07fe7dce:  jne    0x7fe7dd7

----------------
IN: 
0x07fe7dd7:  mov    0x4(%ebx),%ebx
0x07fe7dda:  test   %ebx,%ebx
0x07fe7ddc:  jne    0x7fe7dc7

----------------
IN: 
0x07fe7dde:  mov    0xf5df8,%esi
0x07fe7de4:  jmp    0x7fe7f11

----------------
IN: 
0x07fe7f11:  test   %esi,%esi
0x07fe7f13:  jne    0x7fe7de9

----------------
IN: 
0x07fe7de9:  cmpl   $0x10041af4,0xc(%esi)
0x07fe7df0:  jne    0x7fe7f0e

----------------
IN: 
0x07fe7f0e:  mov    0x4(%esi),%esi
0x07fe7f11:  test   %esi,%esi
0x07fe7f13:  jne    0x7fe7de9

----------------
IN: 
0x07fe7f19:  mov    0xf5df8,%esi
0x07fe7f1f:  jmp    0x7fe805c

----------------
IN: 
0x07fe805c:  test   %esi,%esi
0x07fe805e:  jne    0x7fe7f24

----------------
IN: 
0x07fe7f24:  cmpl   $0x121000,0xc(%esi)
0x07fe7f2b:  je     0x7fe7f35

----------------
IN: 
0x07fe7f2d:  mov    0x4(%esi),%esi
0x07fe7f30:  jmp    0x7fe805c

----------------
IN: 
0x07fe8064:  mov    0xf5df8,%esi
0x07fe806a:  jmp    0x7fe81a7

----------------
IN: 
0x07fe81a7:  test   %esi,%esi
0x07fe81a9:  jne    0x7fe806f

----------------
IN: 
0x07fe806f:  cmpl   $0x20201022,0xc(%esi)
0x07fe8076:  je     0x7fe8080

----------------
IN: 
0x07fe8078:  mov    0x4(%esi),%esi
0x07fe807b:  jmp    0x7fe81a7

----------------
IN: 
0x07fe81af:  mov    0xf5df8,%edi
0x07fe81b5:  jmp    0x7fe844f

----------------
IN: 
0x07fe844f:  test   %edi,%edi
0x07fe8451:  jne    0x7fe81ba

----------------
IN: 
0x07fe81ba:  mov    0xc(%edi),%eax
0x07fe81bd:  cmp    $0x1028,%ax
0x07fe81c1:  je     0x7fe81cd

----------------
IN: 
0x07fe81c3:  cmp    $0x1000,%ax
0x07fe81c7:  jne    0x7fe844c

----------------
IN: 
0x07fe844c:  mov    0x4(%edi),%edi
0x07fe844f:  test   %edi,%edi
0x07fe8451:  jne    0x7fe81ba

----------------
IN: 
0x07fe8457:  jmp    0x7fe8464

----------------
IN: 
0x07fe8464:  add    $0x50,%esp
0x07fe8467:  pop    %ebx
0x07fe8468:  pop    %esi
0x07fe8469:  pop    %edi
0x07fe846a:  pop    %ebp
0x07fe846b:  ret    

----------------
IN: 
0x07fed59a:  call   0x7fe6d8e

----------------
IN: 
0x07fe6d8e:  jmp    0x7fe6d95

----------------
IN: 
0x07fe6d95:  cmpl   $0xf5d90,0xf5d90
0x07fe6d9f:  jne    0x7fe6d90

----------------
IN: 
0x07fe6d90:  call   0xf21d2

Servicing hardware INT=0x09
----------------
IN: 
0x000fe987:  pushl  $0xb988
0x000fe98d:  jmp    0xfefdb

----------------
IN: 
0x000fefdb:  cli    
0x000fefdc:  cld    
0x000fefdd:  push   %ds
0x000fefde:  push   %eax
0x000fefe0:  mov    $0xe000,%eax
0x000fefe6:  mov    %ax,%ds
0x000fefe8:  mov    0xf7e8,%eax
0x000fefec:  sub    $0x18,%eax
0x000feff0:  addr32 popl (%eax)
0x000feff4:  addr32 popw 0x4(%eax)
0x000feff8:  addr32 mov %es,0x6(%eax)
0x000feffc:  addr32 mov %ecx,0x8(%eax)
0x000ff001:  pop    %ecx
0x000ff003:  addr32 mov %edx,0xc(%eax)
0x000ff008:  addr32 mov %esp,0x10(%eax)
0x000ff00d:  movzwl %sp,%esp
0x000ff011:  addr32 mov %ss,0x14(%eax)
0x000ff015:  mov    %ds,%dx
0x000ff017:  mov    %dx,%ss

----------------
IN: 
0x000ff019:  mov    %eax,%esp

----------------
IN: 
0x000ff01c:  calll  *%ecx

----------------
IN: 
0x000fb988:  push   %eax
0x000fb98a:  in     $0x64,%al
0x000fb98c:  test   $0x20,%al
0x000fb98e:  je     0xfb9a1

----------------
IN: 
0x000fb9a1:  in     $0x60,%al
0x000fb9a3:  mov    $0xe000,%edx
0x000fb9a9:  mov    %dx,%es
0x000fb9ab:  mov    %es:-0x874,%dl
0x000fb9b0:  and    $0x1,%dl
0x000fb9b3:  je     0xfb9ce

----------------
IN: 
0x000fb9ce:  mov    $0x20,%al
0x000fb9d0:  out    %al,$0x20
0x000fb9d2:  pop    %eax
0x000fb9d4:  retl   

----------------
IN: 
0x000ff01f:  mov    %esp,%eax
0x000ff022:  addr32 mov 0x14(%eax),%ss

----------------
IN: 
0x000ff026:  addr32 mov 0x10(%eax),%esp

----------------
IN: 
0x000ff02b:  addr32 mov 0xc(%eax),%edx
0x000ff030:  addr32 mov 0x8(%eax),%ecx
0x000ff035:  addr32 mov 0x6(%eax),%es
0x000ff039:  addr32 pushw 0x4(%eax)
0x000ff03d:  addr32 pushl (%eax)
0x000ff041:  pop    %eax
0x000ff043:  pop    %ds
0x000ff044:  iret   

----------------
IN: 
0x000f1594:  pop    %ebx
0x000f1595:  pop    %esi
0x000f1596:  pop    %edi
0x000f1597:  ret    

----------------
IN: 
0x07fe92dd:  andb   $0xef,0x7(%esp)
0x07fe92e2:  lea    0x7(%esp),%edx
0x07fe92e6:  mov    $0x1060,%eax
0x07fe92eb:  call   0x7fe2d84

----------------
IN: 
0x07fe92f0:  mov    %eax,%ebx
0x07fe92f2:  test   %eax,%eax
0x07fe92f4:  jne    0x7fe941f

----------------
IN: 
0x07fe92fa:  cmp    $0x2ff,%edi
0x07fe9300:  jne    0x7fe9348

----------------
IN: 
0x07fe9302:  mov    $0x3e8,%edx
0x07fe9307:  mov    $0xff,%eax
0x07fe930c:  call   0x7fe9266

----------------
IN: 
0x07fe9266:  push   %esi
0x07fe9267:  push   %ebx
0x07fe9268:  push   %ecx
0x07fe9269:  mov    %eax,%esi
0x07fe926b:  mov    %edx,(%esp)
0x07fe926e:  call   0xf2165

----------------
IN: 
0x07fe9273:  mov    %eax,%ebx
0x07fe9275:  test   %eax,%eax
0x07fe9277:  mov    (%esp),%edx
0x07fe927a:  jne    0x7fe929c

----------------
IN: 
0x07fe927c:  mov    %esi,%eax
0x07fe927e:  out    %al,$0x60
0x07fe9280:  mov    $0x1,%eax
0x07fe9285:  call   0x7fe91c4

----------------
IN: 
0x07fe91c4:  push   %ebp
0x07fe91c5:  push   %edi
0x07fe91c6:  push   %esi
0x07fe91c7:  push   %ebx
0x07fe91c8:  sub    $0xc,%esp
0x07fe91cb:  mov    %eax,%ebp
0x07fe91cd:  mov    %edx,%ebx
0x07fe91cf:  mov    %edx,%eax
0x07fe91d1:  call   0xf1bd4

----------------
IN: 
0x07fe91d6:  mov    %eax,%esi
0x07fe91d8:  mov    %edx,%edi
0x07fe91da:  in     $0x64,%al
0x07fe91dc:  movzbl %al,%edx
0x07fe91df:  test   $0x1,%dl
0x07fe91e2:  je     0x7fe922a

----------------
IN: 
0x07fe91e4:  in     $0x60,%al
0x07fe91e6:  test   $0x20,%dl
0x07fe91e9:  jne    0x7fe9213

----------------
IN: 
0x07fe91eb:  test   %ebp,%ebp
0x07fe91ed:  jne    0x7fe91f4

----------------
IN: 
0x07fe91f4:  cmp    $0xfa,%al
0x07fe91f6:  je     0x7fe9257

----------------
IN: 
0x07fe9257:  mov    $0xfa,%esi
0x07fe925c:  mov    %esi,%eax
0x07fe925e:  add    $0xc,%esp
0x07fe9261:  pop    %ebx
0x07fe9262:  pop    %esi
0x07fe9263:  pop    %edi
0x07fe9264:  pop    %ebp
0x07fe9265:  ret    

----------------
IN: 
0x07fe928a:  test   %eax,%eax
0x07fe928c:  js     0x7fe929a

----------------
IN: 
0x07fe928e:  cmp    $0xfa,%eax
0x07fe9293:  je     0x7fe929c

----------------
IN: 
0x07fe929c:  mov    %ebx,%eax
0x07fe929e:  pop    %edx
0x07fe929f:  pop    %ebx
0x07fe92a0:  pop    %esi
0x07fe92a1:  ret    

----------------
IN: 
0x07fe9311:  mov    %eax,%ebx
0x07fe9313:  test   %eax,%eax
0x07fe9315:  jne    0x7fe941f

----------------
IN: 
0x07fe931b:  mov    $0xfa0,%edx
0x07fe9320:  xor    %eax,%eax
0x07fe9322:  call   0x7fe91c4

----------------
IN: 
0x07fe91ef:  movzbl %al,%esi
0x07fe91f2:  jmp    0x7fe925c

----------------
IN: 
0x07fe925c:  mov    %esi,%eax
0x07fe925e:  add    $0xc,%esp
0x07fe9261:  pop    %ebx
0x07fe9262:  pop    %esi
0x07fe9263:  pop    %edi
0x07fe9264:  pop    %ebp
0x07fe9265:  ret    

----------------
IN: 
0x07fe9327:  test   %eax,%eax
0x07fe9329:  js     0x7fe941d

----------------
IN: 
0x07fe932f:  mov    %al,(%esi)
0x07fe9331:  mov    $0x64,%edx
0x07fe9336:  xor    %eax,%eax
0x07fe9338:  call   0x7fe91c4

----------------
IN: 
0x07fe922a:  mov    %esi,%eax
0x07fe922c:  mov    %edi,%edx
0x07fe922e:  call   0xf1bfc

----------------
IN: 
0x07fe9233:  test   %eax,%eax
0x07fe9235:  je     0x7fe9250

----------------
IN: 
0x07fe9250:  call   0xf21d2

----------------
IN: 
0x07fe9255:  jmp    0x7fe91da

----------------
IN: 
0x07fe91da:  in     $0x64,%al
0x07fe91dc:  movzbl %al,%edx
0x07fe91df:  test   $0x1,%dl
0x07fe91e2:  je     0x7fe922a

----------------
IN: 
0x000f2832:  add    $0x8,%esp
0x000f2835:  pop    %esi
0x000f2836:  pop    %edi
0x000f2837:  ret    

----------------
IN: 
0x07fe8e8c:  movzwl %si,%ebx
0x07fe8e8f:  mov    %ebx,%eax
0x07fe8e91:  call   0xf2aee

----------------
IN: 
0x000f2aee:  mov    %eax,%ecx
0x000f2af0:  xor    %edx,%edx
0x000f2af2:  mov    $0x80,%eax
0x000f2af7:  jmp    0xf2a90

----------------
IN: 
0x000f2a90:  push   %ebp
0x000f2a91:  push   %edi
0x000f2a92:  push   %esi
0x000f2a93:  push   %ebx
0x000f2a94:  push   %ebp
0x000f2a95:  mov    %al,0x3(%esp)
0x000f2a99:  mov    %dl,%bl
0x000f2a9b:  mov    %ecx,%ebp
0x000f2a9d:  mov    $0x7d00,%eax
0x000f2aa2:  call   0xf1bd4

----------------
IN: 
0x000f2aa7:  mov    %eax,%esi
0x000f2aa9:  mov    %edx,%edi
0x000f2aab:  add    $0x7,%ebp
0x000f2aae:  mov    %ebp,%edx
0x000f2ab0:  in     (%dx),%al
0x000f2ab1:  mov    0x3(%esp),%dl
0x000f2ab5:  and    %eax,%edx
0x000f2ab7:  cmp    %bl,%dl
0x000f2ab9:  jne    0xf2ac0

----------------
IN: 
0x000f2abb:  movzbl %al,%eax
0x000f2abe:  jmp    0xf2ae8

----------------
IN: 
0x000f2ae8:  pop    %edi
0x000f2ae9:  pop    %ebx
0x000f2aea:  pop    %esi
0x000f2aeb:  pop    %edi
0x000f2aec:  pop    %ebp
0x000f2aed:  ret    

----------------
IN: 
0x07fe8e96:  test   %eax,%eax
0x07fe8e98:  js     0x7fe8f12

----------------
IN: 
0x07fe8e9a:  cmpb   $0x0,0x27(%esp)
0x07fe8e9f:  je     0x7fe8ef4

----------------
IN: 
0x07fe8ef4:  lea    0x6(%esi),%edx
0x07fe8ef7:  mov    $0xa0,%al
0x07fe8ef9:  out    %al,(%dx)
0x07fe8efa:  cmpb   $0x2,0x64(%esp)
0x07fe8eff:  jne    0x7fe8f12

----------------
IN: 
0x07fe8f12:  mov    $0x8,%al
0x07fe8f14:  mov    %edi,%edx
0x07fe8f16:  out    %al,(%dx)
0x07fe8f17:  mov    $0xa1,%ecx
0x07fe8f1c:  lea    0x90(%esp),%edx
0x07fe8f23:  lea    0x64(%esp),%eax
0x07fe8f27:  call   0x7fe8ce0

----------------
IN: 
0x07fe8ce0:  push   %edi
0x07fe8ce1:  push   %esi
0x07fe8ce2:  push   %ebx
0x07fe8ce3:  sub    $0x20,%esp
0x07fe8ce6:  mov    %eax,%edi
0x07fe8ce8:  mov    %edx,%ebx
0x07fe8cea:  mov    %ecx,%esi
0x07fe8cec:  mov    $0x200,%ecx
0x07fe8cf1:  xor    %edx,%edx
0x07fe8cf3:  mov    %ebx,%eax
0x07fe8cf5:  call   0xf172f

----------------
IN: 
0x07fe8cfa:  mov    $0x14,%ecx
0x07fe8cff:  xor    %edx,%edx
0x07fe8d01:  lea    0xc(%esp),%eax
0x07fe8d05:  call   0xf172f

----------------
IN: 
0x07fe8d0a:  mov    %edi,0x18(%esp)
0x07fe8d0e:  movw   $0x1,0x1c(%esp)
0x07fe8d15:  movl   $0x1,0xc(%esp)
0x07fe8d1d:  movl   $0x0,0x10(%esp)
0x07fe8d25:  mov    %ebx,0x14(%esp)
0x07fe8d29:  mov    $0xc,%ecx
0x07fe8d2e:  xor    %edx,%edx
0x07fe8d30:  mov    %esp,%eax
0x07fe8d32:  call   0xf172f

----------------
IN: 
0x07fe8d37:  mov    %esi,%eax
0x07fe8d39:  mov    %al,0x6(%esp)
0x07fe8d3d:  mov    0x18(%esp),%ecx
0x07fe8d41:  mov    0x24(%ecx),%eax
0x07fe8d44:  mov    (%eax),%si
0x07fe8d47:  mov    0x2(%eax),%bx
0x07fe8d4b:  add    $0x2,%ebx
0x07fe8d4e:  mov    $0xa,%al
0x07fe8d50:  mov    %ebx,%edx
0x07fe8d52:  out    %al,(%dx)
0x07fe8d53:  mov    %esp,%edx
0x07fe8d55:  mov    %ecx,%eax
0x07fe8d57:  call   0xf2afc

----------------
IN: 
0x000f2afc:  push   %ebp
0x000f2afd:  push   %edi
0x000f2afe:  push   %esi
0x000f2aff:  push   %ebx
0x000f2b00:  mov    %edx,%edi
0x000f2b02:  mov    0x28(%eax),%bl
0x000f2b05:  mov    0x24(%eax),%eax
0x000f2b08:  mov    (%eax),%si
0x000f2b0b:  movzwl %si,%ebp
0x000f2b0e:  mov    %ebp,%eax
0x000f2b10:  call   0xf2aee

----------------
IN: 
0x000f2b15:  test   %eax,%eax
0x000f2b17:  js     0xf2bb0

----------------
IN: 
0x000f2b1d:  mov    0x5(%edi),%al
0x000f2b20:  and    $0x4f,%eax
0x000f2b23:  cmp    $0x1,%bl
0x000f2b26:  sbb    %ecx,%ecx
0x000f2b28:  and    $0xfffffff0,%ecx
0x000f2b2b:  sub    $0x50,%ecx
0x000f2b2e:  or     %eax,%ecx
0x000f2b30:  lea    0x6(%esi),%edx
0x000f2b33:  in     (%dx),%al
0x000f2b34:  mov    %al,%bl
0x000f2b36:  mov    %cl,%al
0x000f2b38:  out    %al,(%dx)
0x000f2b39:  xor    %ecx,%ebx
0x000f2b3b:  and    $0x10,%bl
0x000f2b3e:  jne    0xf2b51

----------------
IN: 
0x000f2b40:  mov    0x6(%edi),%cl
0x000f2b43:  mov    %ecx,%eax
0x000f2b45:  and    $0xee,%eax
0x000f2b4a:  cmp    $0x24,%eax
0x000f2b4d:  jne    0xf2b86

----------------
IN: 
0x000f2b86:  mov    (%edi),%al
0x000f2b88:  lea    0x1(%esi),%edx
0x000f2b8b:  out    %al,(%dx)
0x000f2b8c:  mov    0x1(%edi),%al
0x000f2b8f:  lea    0x2(%esi),%edx
0x000f2b92:  out    %al,(%dx)
0x000f2b93:  mov    0x2(%edi),%al
0x000f2b96:  lea    0x3(%esi),%edx
0x000f2b99:  out    %al,(%dx)
0x000f2b9a:  mov    0x3(%edi),%al
0x000f2b9d:  lea    0x4(%esi),%edx
0x000f2ba0:  out    %al,(%dx)
0x000f2ba1:  mov    0x4(%edi),%al
0x000f2ba4:  lea    0x5(%esi),%edx
0x000f2ba7:  out    %al,(%dx)
0x000f2ba8:  lea    0x7(%esi),%edx
0x000f2bab:  mov    %cl,%al
0x000f2bad:  out    %al,(%dx)
0x000f2bae:  xor    %eax,%eax
0x000f2bb0:  pop    %ebx
0x000f2bb1:  pop    %esi
0x000f2bb2:  pop    %edi
0x000f2bb3:  pop    %ebp
0x000f2bb4:  ret    

----------------
IN: 
0x07fe8d5c:  mov    %eax,%ecx
0x07fe8d5e:  test   %eax,%eax
0x07fe8d60:  jne    0x7fe8d80

----------------
IN: 
0x07fe8d62:  movzwl %si,%eax
0x07fe8d65:  call   0xf2c4f

----------------
IN: 
0x000f2c4f:  push   %ebx
0x000f2c50:  mov    %eax,%ebx
0x000f2c52:  call   0xf1c91

----------------
IN: 
0x000f2c57:  movzwl %bx,%eax
0x000f2c5a:  call   0xf2aee

----------------
IN: 
0x000f2c5f:  test   %eax,%eax
0x000f2c61:  js     0xf2c79

----------------
IN: 
0x000f2c63:  test   $0x1,%al
0x000f2c65:  jne    0xf2c74

----------------
IN: 
0x000f2c74:  mov    $0xfffffffc,%eax
0x000f2c79:  pop    %ebx
0x000f2c7a:  ret    

----------------
IN: 
0x07fe8d6a:  mov    %eax,%ecx
0x07fe8d6c:  test   %eax,%eax
0x07fe8d6e:  jne    0x7fe8d80

----------------
IN: 
0x07fe8d80:  mov    $0x8,%al
0x07fe8d82:  mov    %ebx,%edx
0x07fe8d84:  out    %al,(%dx)
0x07fe8d85:  mov    %ecx,%eax
0x07fe8d87:  add    $0x20,%esp
0x07fe8d8a:  pop    %ebx
0x07fe8d8b:  pop    %esi
0x07fe8d8c:  pop    %edi
0x07fe8d8d:  ret    

----------------
IN: 
0x07fe8f2c:  test   %eax,%eax
0x07fe8f2e:  jne    0x7fe902e

----------------
IN: 
0x07fe902e:  lea    0x7(%ebp),%edx
0x07fe9031:  in     (%dx),%al
0x07fe9032:  test   %al,%al
0x07fe9034:  jne    0x7fe903b

----------------
IN: 
0x07fe903b:  mov    0x28(%esp),%ecx
0x07fe903f:  mov    $0x40,%edx
0x07fe9044:  mov    $0x40,%eax
0x07fe9049:  call   0xf2a90

----------------
IN: 
0x07fe904e:  test   %eax,%eax
0x07fe9050:  js     0x7fe91a5

----------------
IN: 
0x07fe9056:  mov    $0xec,%ecx
0x07fe905b:  lea    0x90(%esp),%edx
0x07fe9062:  lea    0x64(%esp),%eax
0x07fe9066:  call   0x7fe8ce0

----------------
IN: 
0x000f2c67:  and    $0x8,%eax
0x000f2c6a:  cmp    $0x1,%eax
0x000f2c6d:  sbb    %eax,%eax
0x000f2c6f:  and    $0xfffffffb,%eax
0x000f2c72:  jmp    0xf2c79

----------------
IN: 
0x000f2c79:  pop    %ebx
0x000f2c7a:  ret    

----------------
IN: 
0x07fe8d70:  mov    $0x200,%edx
0x07fe8d75:  lea    0xc(%esp),%eax
0x07fe8d79:  call   0xf2bb5

----------------
IN: 
0x000f2bb5:  push   %ebp
0x000f2bb6:  push   %edi
0x000f2bb7:  push   %esi
0x000f2bb8:  push   %ebx
0x000f2bb9:  sub    $0x10,%esp
0x000f2bbc:  mov    %eax,%ebx
0x000f2bbe:  mov    %edx,(%esp)
0x000f2bc1:  mov    0xc(%eax),%eax
0x000f2bc4:  mov    0x24(%eax),%eax
0x000f2bc7:  mov    (%eax),%dx
0x000f2bca:  mov    %dx,0x8(%esp)
0x000f2bcf:  mov    0x2(%eax),%di
0x000f2bd3:  movzwl 0x10(%ebx),%esi
0x000f2bd7:  mov    0x8(%ebx),%ebp
0x000f2bda:  mov    $0x2,%ecx
0x000f2bdf:  mov    (%esp),%eax
0x000f2be2:  cltd   
0x000f2be3:  idiv   %ecx
0x000f2be5:  mov    %eax,0x4(%esp)
0x000f2be9:  add    $0x2,%edi
0x000f2bec:  mov    %di,0xa(%esp)
0x000f2bf1:  movzwl 0x8(%esp),%edx
0x000f2bf6:  mov    %edx,0xc(%esp)
0x000f2bfa:  mov    0x4(%esp),%ecx
0x000f2bfe:  mov    %ebp,%edi
0x000f2c00:  mov    0x8(%esp),%edx
0x000f2c04:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000f2c04:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000f2c07:  add    (%esp),%ebp
0x000f2c0a:  mov    0xa(%esp),%dx
0x000f2c0f:  in     (%dx),%al
0x000f2c10:  mov    0xc(%esp),%eax
0x000f2c14:  call   0xf2aee

----------------
IN: 
0x000f2c19:  test   %eax,%eax
0x000f2c1b:  jns    0xf2c23

----------------
IN: 
0x000f2c23:  dec    %esi
0x000f2c24:  je     0xf2c3b

----------------
IN: 
0x000f2c3b:  and    $0x89,%eax
0x000f2c40:  je     0xf2c47

----------------
IN: 
0x000f2c47:  add    $0x10,%esp
0x000f2c4a:  pop    %ebx
0x000f2c4b:  pop    %esi
0x000f2c4c:  pop    %edi
0x000f2c4d:  pop    %ebp
0x000f2c4e:  ret    

----------------
IN: 
0x07fe8d7e:  mov    %eax,%ecx
0x07fe8d80:  mov    $0x8,%al
0x07fe8d82:  mov    %ebx,%edx
0x07fe8d84:  out    %al,(%dx)
0x07fe8d85:  mov    %ecx,%eax
0x07fe8d87:  add    $0x20,%esp
0x07fe8d8a:  pop    %ebx
0x07fe8d8b:  pop    %esi
0x07fe8d8c:  pop    %edi
0x07fe8d8d:  ret    

----------------
IN: 
0x07fe906b:  test   %eax,%eax
0x07fe906d:  jne    0x7fe91a5

----------------
IN: 
0x07fe9073:  lea    0x90(%esp),%edx
0x07fe907a:  lea    0x64(%esp),%eax
0x07fe907e:  call   0x7fe3591

----------------
IN: 
0x07fe3591:  push   %edi
0x07fe3592:  push   %esi
0x07fe3593:  push   %ebx
0x07fe3594:  mov    %eax,%esi
0x07fe3596:  mov    %edx,%edi
0x07fe3598:  mov    $0x2c,%eax
0x07fe359d:  call   0x7fe0c1f

----------------
IN: 
0x07fe35a2:  mov    %eax,%ebx
0x07fe35a4:  test   %eax,%eax
0x07fe35a6:  jne    0x7fe35b9

----------------
IN: 
0x07fe35b9:  mov    $0x2c,%ecx
0x07fe35be:  xor    %edx,%edx
0x07fe35c0:  call   0xf172f

----------------
IN: 
0x07fe35c5:  mov    0x24(%esi),%eax
0x07fe35c8:  mov    %eax,0x24(%ebx)
0x07fe35cb:  mov    0x28(%esi),%dl
0x07fe35ce:  mov    %dl,0x28(%ebx)
0x07fe35d1:  movzbl 0x7(%eax),%edx
0x07fe35d5:  movzbl 0x28(%esi),%eax
0x07fe35d9:  lea    (%eax,%edx,2),%eax
0x07fe35dc:  mov    %eax,0x14(%ebx)
0x07fe35df:  mov    (%edi),%ax
0x07fe35e2:  shr    $0x7,%ax
0x07fe35e6:  and    $0x1,%eax
0x07fe35e9:  mov    %al,0x18(%ebx)
0x07fe35ec:  mov    %ebx,%eax
0x07fe35ee:  pop    %ebx
0x07fe35ef:  pop    %esi
0x07fe35f0:  pop    %edi
0x07fe35f1:  ret    

----------------
IN: 
0x07fe9083:  mov    %eax,%ebx
0x07fe9085:  test   %eax,%eax
0x07fe9087:  je     0x7fe91a5

----------------
IN: 
0x07fe908d:  movb   $0x2,(%eax)
0x07fe9090:  movw   $0x200,0x1a(%eax)
0x07fe9096:  mov    0x92(%esp),%ax
0x07fe909e:  mov    %ax,0x1e(%ebx)
0x07fe90a2:  mov    0x96(%esp),%ax
0x07fe90aa:  mov    %ax,0x1c(%ebx)
0x07fe90ae:  mov    0x9c(%esp),%eax
0x07fe90b5:  mov    %ax,0x20(%ebx)
0x07fe90b9:  testb  $0x4,0x137(%esp)
0x07fe90c1:  je     0x7fe90d3

----------------
IN: 
0x07fe90c3:  mov    0x158(%esp),%esi
0x07fe90ca:  mov    0x15c(%esp),%edi
0x07fe90d1:  jmp    0x7fe90dc

----------------
IN: 
0x07fe90dc:  mov    %esi,0xc(%ebx)
0x07fe90df:  mov    %edi,0x10(%ebx)
0x07fe90e2:  shrd   $0xb,%edi,%esi
0x07fe90e6:  shr    $0xb,%edi
0x07fe90e9:  cmp    $0x0,%edi
0x07fe90ec:  ja     0x7fe90fb

----------------
IN: 
0x07fe90ee:  mov    $0x4d,%ebp
0x07fe90f3:  cmp    $0xffff,%esi
0x07fe90f9:  jbe    0x7fe9107

----------------
IN: 
0x07fe9107:  lea    0x90(%esp),%eax
0x07fe910e:  call   0x7fe0d6f

----------------
IN: 
0x07fe0d6f:  mov    $0xf,%edx
0x07fe0d74:  movzwl 0xa0(%eax),%ecx
0x07fe0d7b:  movzbl %dl,%eax
0x07fe0d7e:  bt     %edx,%ecx
0x07fe0d81:  jb     0x7fe0d88

----------------
IN: 
0x07fe0d83:  dec    %edx
0x07fe0d84:  jne    0x7fe0d7b

----------------
IN: 
0x07fe0d7b:  movzbl %dl,%eax
0x07fe0d7e:  bt     %edx,%ecx
0x07fe0d81:  jb     0x7fe0d88

----------------
IN: 
0x07fe0d88:  ret    

----------------
IN: 
0x07fe9113:  mov    %eax,%edi
0x07fe9115:  lea    0x90(%esp),%edx
0x07fe911c:  lea    0x3b(%esp),%eax
0x07fe9120:  call   0x7fe1df1

----------------
IN: 
0x07fe1df1:  push   %ebx
0x07fe1df2:  mov    %eax,%ebx
0x07fe1df4:  xor    %ecx,%ecx
0x07fe1df6:  mov    0x36(%edx,%ecx,2),%ax
0x07fe1dfb:  xchg   %ah,%al
0x07fe1dfd:  mov    %ax,(%ebx,%ecx,2)
0x07fe1e01:  inc    %ecx
0x07fe1e02:  cmp    $0x14,%ecx
0x07fe1e05:  jne    0x7fe1df6

----------------
IN: 
0x07fe1df6:  mov    0x36(%edx,%ecx,2),%ax
0x07fe1dfb:  xchg   %ah,%al
0x07fe1dfd:  mov    %ax,(%ebx,%ecx,2)
0x07fe1e01:  inc    %ecx
0x07fe1e02:  cmp    $0x14,%ecx
0x07fe1e05:  jne    0x7fe1df6

----------------
IN: 
0x07fe1e07:  movb   $0x0,0x28(%ebx)
0x07fe1e0b:  mov    %ebx,%eax
0x07fe1e0d:  call   0x7fe0d52

----------------
IN: 
0x07fe0d52:  push   %ebx
0x07fe0d53:  mov    %eax,%ebx
0x07fe0d55:  call   0xf16dc

----------------
IN: 
0x07fe0d5a:  lea    -0x1(%ebx,%eax,1),%edx
0x07fe0d5e:  jmp    0x7fe0d64

----------------
IN: 
0x07fe0d64:  cmp    %ebx,%edx
0x07fe0d66:  jb     0x7fe0d6d

----------------
IN: 
0x07fe0d68:  cmpb   $0x20,(%edx)
0x07fe0d6b:  jle    0x7fe0d60

----------------
IN: 
0x07fe0d60:  movb   $0x0,(%edx)
0x07fe0d63:  dec    %edx
0x07fe0d64:  cmp    %ebx,%edx
0x07fe0d66:  jb     0x7fe0d6d

----------------
IN: 
0x07fe0d6d:  pop    %ebx
0x07fe0d6e:  ret    

----------------
IN: 
0x07fe1e12:  mov    %ebx,%eax
0x07fe1e14:  pop    %ebx
0x07fe1e15:  ret    

----------------
IN: 
0x07fe9125:  mov    %ebp,%edx
0x07fe9127:  movsbl %dl,%ebp
0x07fe912a:  mov    %ebp,0x1c(%esp)
0x07fe912e:  mov    %esi,0x18(%esp)
0x07fe9132:  mov    %edi,0x14(%esp)
0x07fe9136:  mov    %eax,0x10(%esp)
0x07fe913a:  movzbl 0x28(%ebx),%eax
0x07fe913e:  mov    %eax,0xc(%esp)
0x07fe9142:  mov    0x24(%ebx),%eax
0x07fe9145:  movzbl 0x7(%eax),%eax
0x07fe9149:  mov    %eax,0x8(%esp)
0x07fe914d:  movl   $0xf4f87,0x4(%esp)
0x07fe9155:  movl   $0x50,(%esp)
0x07fe915c:  call   0x7fe5d7d

----------------
IN: 
0x07fe9161:  mov    %eax,%esi
0x07fe9163:  mov    %eax,0x4(%esp)
0x07fe9167:  movl   $0xf5943,(%esp)
0x07fe916e:  call   0xf2058

----------------
IN: 
0x07fe9173:  mov    0x24(%ebx),%eax
0x07fe9176:  movzbl 0x28(%ebx),%ecx
0x07fe917a:  movzbl 0x7(%eax),%edx
0x07fe917e:  mov    0xc(%eax),%eax
0x07fe9181:  call   0x7fe2cca

----------------
IN: 
0x07fe2cca:  test   %eax,%eax
0x07fe2ccc:  je     0x7fe2d1a

----------------
IN: 
0x07fe2cce:  push   %esi
0x07fe2ccf:  push   %ebx
0x07fe2cd0:  sub    $0x114,%esp
0x07fe2cd6:  mov    %edx,%ebx
0x07fe2cd8:  mov    %ecx,%esi
0x07fe2cda:  mov    %eax,%ecx
0x07fe2cdc:  mov    $0xf44e9,%edx
0x07fe2ce1:  lea    0x14(%esp),%eax
0x07fe2ce5:  call   0x7fe24aa

----------------
IN: 
0x07fe2555:  mov    %edi,0xc(%esp)
0x07fe2559:  movl   $0xf42e0,0x8(%esp)
0x07fe2561:  sub    %esi,%ebx
0x07fe2563:  mov    %ebx,0x4(%esp)
0x07fe2567:  mov    %esi,(%esp)
0x07fe256a:  call   0x7fe2079

----------------
IN: 
0x07fe256f:  add    %eax,%esi
0x07fe2571:  mov    %esi,%eax
0x07fe2573:  add    $0x14,%esp
0x07fe2576:  pop    %ebx
0x07fe2577:  pop    %esi
0x07fe2578:  pop    %edi
0x07fe2579:  pop    %ebp
0x07fe257a:  ret    

----------------
IN: 
0x07fe2cea:  mov    %esi,0x10(%esp)
0x07fe2cee:  mov    %ebx,0xc(%esp)
0x07fe2cf2:  movl   $0xf44fa,0x8(%esp)
0x07fe2cfa:  lea    0x114(%esp),%edx
0x07fe2d01:  sub    %eax,%edx
0x07fe2d03:  mov    %edx,0x4(%esp)
0x07fe2d07:  mov    %eax,(%esp)
0x07fe2d0a:  call   0x7fe2079

----------------
IN: 
0x07fe2d0f:  lea    0x14(%esp),%eax
0x07fe2d13:  call   0x7fe2af3

----------------
IN: 
0x07fe2d18:  jmp    0x7fe2d1e

----------------
IN: 
0x07fe2d1e:  add    $0x114,%esp
0x07fe2d24:  pop    %ebx
0x07fe2d25:  pop    %esi
0x07fe2d26:  ret    

----------------
IN: 
0x07fe9186:  mov    %eax,%ecx
0x07fe9188:  mov    %esi,%edx
0x07fe918a:  mov    %ebx,%eax
0x07fe918c:  call   0x7fe321b

----------------
IN: 
0x07fe321b:  push   %ebx
0x07fe321c:  push   %ebx
0x07fe321d:  mov    %ecx,%ebx
0x07fe321f:  mov    0x7fefd1b,%ecx
0x07fe3225:  test   %ebx,%ebx
0x07fe3227:  jns    0x7fe322b

----------------
IN: 
0x07fe3229:  mov    %ecx,%ebx
0x07fe322b:  mov    %edx,(%esp)
0x07fe322e:  mov    %eax,%ecx
0x07fe3230:  mov    %ebx,%edx
0x07fe3232:  mov    $0x2,%eax
0x07fe3237:  call   0x7fe3164

----------------
IN: 
0x07fe31b7:  cmp    0x8(%ebx),%ebp
0x07fe31ba:  jl     0x7fe31e9

----------------
IN: 
0x07fe323c:  pop    %eax
0x07fe323d:  pop    %ebx
0x07fe323e:  ret    

----------------
IN: 
0x07fe9191:  test   %ebx,%ebx
0x07fe9193:  jne    0x7fe9016

----------------
IN: 
0x07fe9016:  mov    0x14a(%esp),%ax
0x07fe901e:  cmpb   $0x0,0x27(%esp)
0x07fe9023:  je     0x7fe919b

----------------
IN: 
0x07fe919b:  and    $0xdf61,%ax
0x07fe919f:  cmp    $0x4041,%ax
0x07fe91a3:  je     0x7fe91b9

----------------
IN: 
0x07fe91a5:  mov    $0x1,%edi
0x07fe91aa:  incb   0x27(%esp)
0x07fe91ae:  cmpb   $0x2,0x27(%esp)
0x07fe91b3:  jne    0x7fe8dc0

----------------
IN: 
0x07fe8dc0:  mov    0x34(%esp),%eax
0x07fe8dc4:  mov    (%eax),%ebp
0x07fe8dc6:  movzwl %bp,%edx
0x07fe8dc9:  mov    %edx,0x28(%esp)
0x07fe8dcd:  mov    %edx,%eax
0x07fe8dcf:  call   0x7fe6cf7

----------------
IN: 
0x07fe8f17:  mov    $0xa1,%ecx
0x07fe8f1c:  lea    0x90(%esp),%edx
0x07fe8f23:  lea    0x64(%esp),%eax
0x07fe8f27:  call   0x7fe8ce0

----------------
IN: 
0x07fe9036:  jmp    0x7fe91a5

----------------
IN: 
0x07fe91b9:  add    $0x290,%esp
0x07fe91bf:  pop    %ebx
0x07fe91c0:  pop    %esi
0x07fe91c1:  pop    %edi
0x07fe91c2:  pop    %ebp
0x07fe91c3:  ret    

----------------
IN: 
0x07fe1fef:  mov    (%ebx),%ecx
0x07fe1ff1:  mov    0x4(%ecx),%esp
0x07fe1ff4:  mov    %ebx,%eax
0x07fe1ff6:  call   0x7fe4e74

----------------
IN: 
0x07fe4e74:  push   %edx
0x07fe4e75:  mov    (%eax),%edx
0x07fe4e77:  mov    0x8(%eax),%ecx
0x07fe4e7a:  mov    %ecx,0x8(%edx)
0x07fe4e7d:  mov    0x8(%eax),%ecx
0x07fe4e80:  mov    %edx,(%ecx)
0x07fe4e82:  call   0x7fe0ca5

----------------
IN: 
0x07fe4e87:  cmpl   $0xf5d90,0xf5d90
0x07fe4e91:  jne    0x7fe4e9f

----------------
IN: 
0x07fe4e9f:  pop    %eax
0x07fe4ea0:  ret    

----------------
IN: 
0x07fe1ffb:  pop    %ebp
0x07fe1ffc:  ret    

----------------
IN: 
0x07fe8f34:  lea    0x90(%esp),%edx
0x07fe8f3b:  lea    0x64(%esp),%eax
0x07fe8f3f:  call   0x7fe3591

----------------
IN: 
0x07fe8f44:  mov    %eax,%ebx
0x07fe8f46:  test   %eax,%eax
0x07fe8f48:  je     0x7fe902e

----------------
IN: 
0x07fe8f4e:  movb   $0x3,(%eax)
0x07fe8f51:  movw   $0x800,0x1a(%eax)
0x07fe8f57:  movl   $0xffffffff,0xc(%eax)
0x07fe8f5e:  movl   $0xffffffff,0x10(%eax)
0x07fe8f65:  movzbl 0x91(%esp),%eax
0x07fe8f6d:  and    $0x1f,%eax
0x07fe8f70:  cmp    $0x5,%ax
0x07fe8f74:  sete   %cl
0x07fe8f77:  mov    $0xf4f5e,%esi
0x07fe8f7c:  test   %cl,%cl
0x07fe8f7e:  je     0x7fe8f85

----------------
IN: 
0x07fe8f80:  mov    $0xf4f57,%esi
0x07fe8f85:  lea    0x90(%esp),%eax
0x07fe8f8c:  mov    %cl,0x20(%esp)
0x07fe8f90:  call   0x7fe0d6f

----------------
IN: 
0x07fe8f95:  mov    %eax,%edi
0x07fe8f97:  lea    0x90(%esp),%edx
0x07fe8f9e:  lea    0x3b(%esp),%eax
0x07fe8fa2:  call   0x7fe1df1

----------------
IN: 
0x07fe8fa7:  mov    %esi,0x18(%esp)
0x07fe8fab:  mov    %edi,0x14(%esp)
0x07fe8faf:  mov    %eax,0x10(%esp)
0x07fe8fb3:  movzbl 0x28(%ebx),%eax
0x07fe8fb7:  mov    %eax,0xc(%esp)
0x07fe8fbb:  mov    0x24(%ebx),%eax
0x07fe8fbe:  movzbl 0x7(%eax),%eax
0x07fe8fc2:  mov    %eax,0x8(%esp)
0x07fe8fc6:  movl   $0xf4f65,0x4(%esp)
0x07fe8fce:  movl   $0x50,(%esp)
0x07fe8fd5:  call   0x7fe5d7d

----------------
IN: 
0x07fe8fda:  mov    %eax,%esi
0x07fe8fdc:  mov    %eax,0x4(%esp)
0x07fe8fe0:  movl   $0xf5943,(%esp)
0x07fe8fe7:  call   0xf2058

----------------
IN: 
0x07fe8fec:  mov    0x20(%esp),%cl
0x07fe8ff0:  test   %cl,%cl
0x07fe8ff2:  je     0x7fe9012

----------------
IN: 
0x07fe8ff4:  mov    0x24(%ebx),%eax
0x07fe8ff7:  movzbl 0x28(%ebx),%ecx
0x07fe8ffb:  movzbl 0x7(%eax),%edx
0x07fe8fff:  mov    0xc(%eax),%eax
0x07fe9002:  call   0x7fe2cca

----------------
IN: 
0x07fe9007:  mov    %eax,%ecx
0x07fe9009:  mov    %esi,%edx
0x07fe900b:  mov    %ebx,%eax
0x07fe900d:  call   0x7fe31f7

----------------
IN: 
0x07fe31f7:  push   %ebx
0x07fe31f8:  push   %ebx
0x07fe31f9:  mov    %ecx,%ebx
0x07fe31fb:  mov    0x7fefd1f,%ecx
0x07fe3201:  test   %ebx,%ebx
0x07fe3203:  jns    0x7fe3207

----------------
IN: 
0x07fe3205:  mov    %ecx,%ebx
0x07fe3207:  mov    %edx,(%esp)
0x07fe320a:  mov    %eax,%ecx
0x07fe320c:  mov    %ebx,%edx
0x07fe320e:  mov    $0x3,%eax
0x07fe3213:  call   0x7fe3164

----------------
IN: 
0x07fe31bc:  jg     0x7fe31dc

----------------
IN: 
0x07fe31dc:  lea    0x10(%ebx),%edx
0x07fe31df:  mov    %edx,(%esp)
0x07fe31e2:  mov    0x10(%ebx),%ebx
0x07fe31e5:  test   %ebx,%ebx
0x07fe31e7:  jne    0x7fe31b7

----------------
IN: 
0x07fe3218:  pop    %eax
0x07fe3219:  pop    %ebx
0x07fe321a:  ret    

----------------
IN: 
0x07fe9012:  test   %ebx,%ebx
0x07fe9014:  je     0x7fe902e

Servicing hardware INT=0x08
----------------
IN: 
0x000ffea5:  pushl  $0xe990
0x000ffeab:  jmp    0xfefdb

----------------
IN: 
0x000fe990:  push   %ebp
0x000fe992:  push   %edi
0x000fe994:  push   %esi
0x000fe996:  push   %ebx
0x000fe998:  sub    $0x44,%esp
0x000fe99c:  mov    $0x40,%edx
0x000fe9a2:  mov    %dx,%es
0x000fe9a4:  mov    %es:0x40,%al
0x000fe9a8:  test   %al,%al
0x000fe9aa:  je     0xfe9c2

----------------
IN: 
0x000fe9c2:  mov    $0x40,%edx
0x000fe9c8:  mov    %dx,%es
0x000fe9ca:  mov    %es:0x6c,%eax
0x000fe9cf:  inc    %eax
0x000fe9d1:  cmp    $0x1800af,%eax
0x000fe9d7:  jbe    0xfe9e6

----------------
IN: 
0x000fe9e6:  mov    $0x40,%edx
0x000fe9ec:  mov    %dx,%es
0x000fe9ee:  mov    %eax,%es:0x6c
0x000fe9f3:  mov    %cs:-0x3050,%edi
0x000fe9f9:  test   %edi,%edi
0x000fe9fc:  je     0xfeb79

----------------
IN: 
0x000feb79:  mov    %cs:-0x3054,%esi
0x000feb7f:  test   %esi,%esi
0x000feb82:  je     0xfebf0

----------------
IN: 
0x000febf0:  mov    $0x26,%ecx
0x000febf6:  xor    %edx,%edx
0x000febf9:  addr32 lea 0x1e(%esp),%eax
0x000febff:  calll  0xf64bd

----------------
IN: 
0x000f64bd:  jmp    0xf64c5

----------------
IN: 
0x000f64c5:  test   %ecx,%ecx
0x000f64c8:  jne    0xf64bf

----------------
IN: 
0x000f64bf:  dec    %ecx
0x000f64c1:  addr32 mov %dl,(%eax,%ecx,1)
0x000f64c5:  test   %ecx,%ecx
0x000f64c8:  jne    0xf64bf

----------------
IN: 
0x000f64ca:  retl   

----------------
IN: 
0x000fec05:  addr32 movw $0x200,0x42(%esp)
0x000fec0c:  addr32 mov %cs,0x40(%esp)
0x000fec11:  mov    $0xf83b,%eax
0x000fec17:  addr32 mov %ax,0x3e(%esp)
0x000fec1c:  addr32 lea 0x1e(%esp),%eax
0x000fec22:  calll  0xfff45

----------------
IN: 
0x000fff45:  mov    %ss,%dx
0x000fff47:  mov    %dx,%es
0x000fff49:  mov    $0x64a1,%edx
0x000fff4f:  jmp    0xf6cb3

----------------
IN: 
0x000f6cb3:  push   %edi
0x000f6cb5:  push   %esi
0x000f6cb7:  push   %ebx
0x000f6cb9:  mov    %edx,%ecx
0x000f6cbc:  mov    %ss,%dx
0x000f6cbe:  movzwl %dx,%edx
0x000f6cc2:  cmp    $0xe000,%edx
0x000f6cc9:  jne    0xf6d06

----------------
IN: 
0x000f6ccb:  mov    %esp,%edx
0x000f6cce:  cmp    $0xf7f0,%edx
0x000f6cd5:  jbe    0xf6d06

----------------
IN: 
0x000f6cd7:  xor    %edx,%edx
0x000f6cda:  mov    -0x818,%esi
0x000f6cdf:  mov    %ss,%bx
0x000f6ce1:  mov    %esp,-0x818
0x000f6ce6:  addr32 mov -0x4(%esi),%edi
0x000f6ceb:  mov    %di,%ss

----------------
IN: 
0x000f6ced:  addr32 mov -0x8(%esi),%sp

----------------
IN: 
0x000f6cf1:  mov    %di,%ds
0x000f6cf3:  calll  *%ecx

----------------
IN: 
0x000ff83b:  int    $0x1c

----------------
IN: 
0x000fff53:  iret   

----------------
IN: 
0x000ff83d:  lret   

----------------
IN: 
0x000f6cf6:  mov    %bx,%ds
0x000f6cf8:  mov    %bx,%ss

----------------
IN: 
0x000f6cfa:  mov    -0x818,%esp

----------------
IN: 
0x000f6cff:  mov    %esi,-0x818
0x000f6d04:  jmp    0xf6d0c

----------------
IN: 
0x000f6d0c:  pop    %ebx
0x000f6d0e:  pop    %esi
0x000f6d10:  pop    %edi
0x000f6d12:  retl   

----------------
IN: 
0x000fec28:  mov    $0x20,%al
0x000fec2a:  out    %al,$0x20
0x000fec2c:  add    $0x44,%esp
0x000fec30:  pop    %ebx
0x000fec32:  pop    %esi
0x000fec34:  pop    %edi
0x000fec36:  pop    %ebp
0x000fec38:  retl   

Servicing hardware INT=0x08
----------------
IN: 
0x07fe9237:  or     $0xffffffff,%esi
0x07fe923a:  cmp    $0x64,%ebx
0x07fe923d:  jle    0x7fe925c

----------------
IN: 
0x07fe933d:  mov    %eax,%edx
0x07fe933f:  not    %edx
0x07fe9341:  sar    $0x1f,%edx
0x07fe9344:  and    %edx,%eax
0x07fe9346:  jmp    0x7fe93ae

----------------
IN: 
0x07fe93ae:  mov    %al,0x1(%esi)
0x07fe93b1:  jmp    0x7fe941f

----------------
IN: 
0x07fe941f:  lea    0x6(%esp),%edx
0x07fe9423:  mov    $0x1060,%eax
0x07fe9428:  call   0x7fe2d84

----------------
IN: 
0x07fe942d:  test   %eax,%eax
0x07fe942f:  je     0x7fe9433

----------------
IN: 
0x07fe9433:  mov    %ebx,%eax
0x07fe9435:  add    $0x8,%esp
0x07fe9438:  pop    %ebx
0x07fe9439:  pop    %esi
0x07fe943a:  pop    %edi
0x07fe943b:  pop    %ebp
0x07fe943c:  ret    

----------------
IN: 
0x07fe94e0:  test   %eax,%eax
0x07fe94e2:  je     0x7fe9514

----------------
IN: 
0x07fe9514:  movzbl 0xa(%esp),%eax
0x07fe9519:  cmp    $0xaa,%al
0x07fe951b:  je     0x7fe952f

----------------
IN: 
0x07fe952f:  xor    %edx,%edx
0x07fe9531:  mov    $0xf5,%eax
0x07fe9536:  call   0x7fe92a2

----------------
IN: 
0x07fe9348:  cmp    $0x2f2,%edi
0x07fe934e:  jne    0x7fe93b9

----------------
IN: 
0x07fe93b9:  mov    %edi,%eax
0x07fe93bb:  and    $0xff,%eax
0x07fe93c0:  mov    $0xc8,%edx
0x07fe93c5:  call   0x7fe9266

----------------
IN: 
0x07fe93ca:  mov    %eax,%ebx
0x07fe93cc:  test   %eax,%eax
0x07fe93ce:  jne    0x7fe941f

----------------
IN: 
0x07fe93d0:  mov    %edi,%ecx
0x07fe93d2:  sar    $0xc,%ecx
0x07fe93d5:  and    $0xf,%ecx
0x07fe93d8:  xor    %ebp,%ebp
0x07fe93da:  jmp    0x7fe93f5

----------------
IN: 
0x07fe93f5:  cmp    %ecx,%ebp
0x07fe93f7:  jl     0x7fe93dc

----------------
IN: 
0x07fe93f9:  sar    $0x8,%edi
0x07fe93fc:  and    $0xf,%edi
0x07fe93ff:  xor    %ebp,%ebp
0x07fe9401:  jmp    0x7fe9417

----------------
IN: 
0x07fe9417:  cmp    %edi,%ebp
0x07fe9419:  jl     0x7fe9403

----------------
IN: 
0x07fe941b:  jmp    0x7fe941f

----------------
IN: 
0x07fe953b:  test   %eax,%eax
0x07fe953d:  jne    0x7fe958d

----------------
IN: 
0x07fe953f:  movb   $0x2,0xa(%esp)
0x07fe9544:  mov    %ebx,%edx
0x07fe9546:  mov    $0x10f0,%ax
0x07fe954a:  call   0x7fe92a2

----------------
IN: 
0x07fe93dc:  movzbl (%esi,%ebp,1),%eax
0x07fe93e0:  mov    $0xc8,%edx
0x07fe93e5:  mov    %ecx,(%esp)
0x07fe93e8:  call   0x7fe9266

----------------
IN: 
0x07fe93ed:  test   %eax,%eax
0x07fe93ef:  mov    (%esp),%ecx
0x07fe93f2:  jne    0x7fe941d

----------------
IN: 
0x07fe93f4:  inc    %ebp
0x07fe93f5:  cmp    %ecx,%ebp
0x07fe93f7:  jl     0x7fe93dc

----------------
IN: 
0x07fe954f:  test   %eax,%eax
0x07fe9551:  jne    0x7fe958d

----------------
IN: 
0x07fe9553:  movb   $0x61,0xef78c
0x07fe955a:  xor    %edx,%edx
0x07fe955c:  mov    $0xf4,%al
0x07fe955e:  call   0x7fe92a2

----------------
IN: 
0x07fe9563:  test   %eax,%eax
0x07fe9565:  jne    0x7fe958d

----------------
IN: 
0x07fe9567:  movl   $0xf5091,(%esp)
0x07fe956e:  call   0xf2058

----------------
IN: 
0x07fe9573:  jmp    0x7fe958d

----------------
IN: 
0x07fe958d:  add    $0xc,%esp
0x07fe9590:  pop    %ebx
0x07fe9591:  pop    %esi
0x07fe9592:  pop    %edi
0x07fe9593:  pop    %ebp
0x07fe9594:  ret    

----------------
IN: 
0x07fe4e93:  movl   $0xf46e8,(%esp)
0x07fe4e9a:  call   0xf2058

----------------
IN: 
0x07fe6da1:  ret    

----------------
IN: 
0x07fed59f:  call   0x7fe9aae

----------------
IN: 
0x07fe9aae:  push   %ebp
0x07fe9aaf:  mov    %esp,%ebp
0x07fe9ab1:  push   %edi
0x07fe9ab2:  push   %esi
0x07fe9ab3:  push   %ebx
0x07fe9ab4:  and    $0xfffffff8,%esp
0x07fe9ab7:  sub    $0x314,%esp
0x07fe9abd:  movl   $0xf5157,(%esp)
0x07fe9ac4:  call   0xf2058

----------------
IN: 
0x07fe9ac9:  lea    0x14(%esp),%edi
0x07fe9acd:  mov    $0x300,%ecx
0x07fe9ad2:  xor    %edx,%edx
0x07fe9ad4:  mov    %edi,%eax
0x07fe9ad6:  call   0xf172f

----------------
IN: 
0x07fe9adb:  mov    0xf5da0,%ebx
0x07fe9ae1:  mov    0xf5df8,%esi
0x07fe9ae7:  jmp    0x7fe9b05

----------------
IN: 
0x07fe9b05:  test   %esi,%esi
0x07fe9b07:  jne    0x7fe9ae9

----------------
IN: 
0x07fe9ae9:  cmpw   $0x300,0x10(%esi)
0x07fe9aef:  je     0x7fe9b02

----------------
IN: 
0x07fe9af1:  cmpl   $0x0,0x18(%esi)
0x07fe9af5:  jne    0x7fe9b02

----------------
IN: 
0x07fe9af7:  mov    %edi,%ecx
0x07fe9af9:  xor    %edx,%edx
0x07fe9afb:  mov    %esi,%eax
0x07fe9afd:  call   0x7fe9884

----------------
IN: 
0x07fe99ed:  mov    %esi,%ecx
0x07fe99ef:  mov    $0x30,%edx
0x07fe99f4:  mov    %ebp,%eax
0x07fe99f6:  call   0xf173a

----------------
IN: 
0x07fe99fb:  jmp    0x7fe9a2e

----------------
IN: 
0x07fe9a2e:  or     $0xffffffff,%eax
0x07fe9a31:  add    $0x3c,%esp
0x07fe9a34:  pop    %ebx
0x07fe9a35:  pop    %esi
0x07fe9a36:  pop    %edi
0x07fe9a37:  pop    %ebp
0x07fe9a38:  ret    

----------------
IN: 
0x07fe9b02:  mov    0x4(%esi),%esi
0x07fe9b05:  test   %esi,%esi
0x07fe9b07:  jne    0x7fe9ae9

----------------
IN: 
0x07fe9a04:  lea    -0xc0000(%edi),%eax
0x07fe9a0a:  shr    $0xb,%eax
0x07fe9a0d:  mov    0x1c(%esp),%ecx
0x07fe9a11:  mov    %ebx,(%ecx,%eax,8)
0x07fe9a14:  movl   $0x2,0x4(%ecx,%eax,8)
0x07fe9a1c:  movzwl 0x22(%esp),%edx
0x07fe9a21:  mov    0x24(%esp),%ecx
0x07fe9a25:  mov    %edi,%eax
0x07fe9a27:  call   0x7fe97d0

----------------
IN: 
0x07fe9823:  movzwl 0x1a(%ebx),%eax
0x07fe9827:  add    %ebx,%eax
0x07fe9829:  cmpl   $0x506e5024,(%eax)
0x07fe982f:  jne    0x7fe9844

----------------
IN: 
0x07fe9831:  test   %eax,%eax
0x07fe9833:  je     0x7fe9844

----------------
IN: 
0x000c9003:  jmp    0xc90a5

----------------
IN: 
0x000c90a5:  pusha  
0x000c90a6:  push   %ds
0x000c90a7:  push   %es
0x000c90a8:  push   %fs
0x000c90aa:  push   %gs
0x000c90ac:  cld    
0x000c90ad:  push   %cs
0x000c90ae:  pop    %ds
0x000c90af:  mov    %bx,%gs
0x000c90b1:  mov    %di,%bx
0x000c90b3:  mov    %ax,0x34c
0x000c90b6:  mov    $0x2f9,%si
0x000c90b9:  xor    %di,%di
0x000c90bb:  call   0xc94de

----------------
IN: 
0x000c94de:  push   %ax
0x000c94df:  lods   %ds:(%si),%al
0x000c94e0:  test   %al,%al
0x000c94e2:  je     0xc94e9

----------------
IN: 
0x000c94e4:  call   0xc94bf

----------------
IN: 
0x000c94bf:  push   %ax
0x000c94c0:  push   %bx
0x000c94c1:  push   %bp
0x000c94c2:  test   %di,%di
0x000c94c4:  je     0xc94cb

----------------
IN: 
0x000c94cb:  mov    $0x7,%bx
0x000c94ce:  mov    $0xe,%ah
0x000c94d0:  cmp    $0xa,%al
0x000c94d2:  jne    0xc94d8

----------------
IN: 
0x000c94d4:  int    $0x10

----------------
IN: 
0x000c94d6:  mov    $0xd,%al
0x000c94d8:  int    $0x10

----------------
IN: 
0x000c94da:  pop    %bp
0x000c94db:  pop    %bx
0x000c94dc:  pop    %ax
0x000c94dd:  ret    

----------------
IN: 
0x000c94e7:  jmp    0xc94df

----------------
IN: 
0x000c94df:  lods   %ds:(%si),%al
0x000c94e0:  test   %al,%al
0x000c94e2:  je     0xc94e9

----------------
IN: 
0x000c94d8:  int    $0x10

----------------
IN: 
0x000c94e9:  pop    %ax
0x000c94ea:  ret    

----------------
IN: 
0x000c90be:  call   0xc9513

----------------
IN: 
0x000c9513:  push   %ax
0x000c9514:  xchg   %al,%ah
0x000c9516:  call   0xc94fd

----------------
IN: 
0x000c94fd:  ror    $0x4,%al
0x000c9500:  call   0xc9506

----------------
IN: 
0x000c9506:  push   %ax
0x000c9507:  and    $0xf,%al
0x000c9509:  cmp    $0xa,%al
0x000c950b:  sbb    $0x69,%al
0x000c950d:  das    
0x000c950e:  call   0xc94bf

----------------
IN: 
0x000c9511:  pop    %ax
0x000c9512:  ret    

----------------
IN: 
0x000c9503:  ror    $0x4,%al
0x000c9506:  push   %ax
0x000c9507:  and    $0xf,%al
0x000c9509:  cmp    $0xa,%al
0x000c950b:  sbb    $0x69,%al
0x000c950d:  das    
0x000c950e:  call   0xc94bf

----------------
IN: 
0x000c9519:  mov    $0x3a,%al
0x000c951b:  call   0xc94bf

----------------
IN: 
0x000c951e:  mov    %ah,%al
0x000c9520:  shr    $0x3,%al
0x000c9523:  call   0xc94fd

----------------
IN: 
0x000c9526:  mov    $0x2e,%al
0x000c9528:  call   0xc94bf

----------------
IN: 
0x000c952b:  mov    %ah,%al
0x000c952d:  and    $0x7,%al
0x000c952f:  call   0xc9506

----------------
IN: 
0x000c9532:  pop    %ax
0x000c9533:  ret    

----------------
IN: 
0x000c90c1:  mov    $0x7a,%di
0x000c90c4:  call   0xc9513

----------------
IN: 
0x000c94c6:  mov    %al,(%di)
0x000c94c8:  inc    %di
0x000c94c9:  jmp    0xc94da

----------------
IN: 
0x000c90c7:  movb   $0x20,0x74
0x000c90cc:  mov    $0x20,%al
0x000c90ce:  xor    %di,%di
0x000c90d0:  call   0xc94bf

----------------
IN: 
0x000c90d3:  mov    %cs,%ax
0x000c90d5:  call   0xc94f6

----------------
IN: 
0x000c94f6:  xchg   %al,%ah
0x000c94f8:  call   0xc94fd

----------------
IN: 
0x000c94fb:  xchg   %al,%ah
0x000c94fd:  ror    $0x4,%al
0x000c9500:  call   0xc9506

----------------
IN: 
0x000c90d8:  push   %ebx
0x000c90da:  push   %edx
0x000c90dc:  push   %edi
0x000c90de:  stc    
0x000c90df:  mov    $0xb101,%ax
0x000c90e2:  int    $0x1a

----------------
IN: 
0x000ffe6e:  pushl  $0xb2bb
0x000ffe74:  jmp    0xfc720

----------------
IN: 
0x000fc720:  cli    
0x000fc721:  cld    
0x000fc722:  push   %ecx
0x000fc724:  push   %edx
0x000fc726:  push   %ebx
0x000fc728:  push   %ebp
0x000fc72a:  push   %esi
0x000fc72c:  push   %edi
0x000fc72e:  push   %es
0x000fc72f:  push   %ds
0x000fc730:  mov    %ss,%cx
0x000fc732:  mov    %cx,%ds
0x000fc734:  mov    %esp,%ebx
0x000fc737:  movzwl %sp,%esp
0x000fc73b:  addr32 mov 0x1c(%esp),%ecx
0x000fc741:  addr32 mov %eax,0x1c(%esp)
0x000fc747:  mov    %esp,%eax
0x000fc74a:  calll  *%ecx

----------------
IN: 
0x000fb2bb:  push   %ebp
0x000fb2bd:  push   %edi
0x000fb2bf:  push   %esi
0x000fb2c1:  push   %ebx
0x000fb2c3:  mov    %eax,%ebx
0x000fb2c6:  addr32 mov 0x1d(%eax),%al
0x000fb2ca:  cmp    $0x4,%al
0x000fb2cc:  je     0xfb40b

----------------
IN: 
0x000fb2d0:  ja     0xfb2e7

----------------
IN: 
0x000fb2e7:  cmp    $0x6,%al
0x000fb2e9:  je     0xfb49e

----------------
IN: 
0x000fb2ed:  jb     0xfb44c

----------------
IN: 
0x000fb2f1:  cmp    $0x7,%al
0x000fb2f3:  je     0xfb4f6

----------------
IN: 
0x000fb2f7:  cmp    $0xb1,%al
0x000fb2f9:  jne    0xfb878

----------------
IN: 
0x000fb2fd:  jmp    0xfb518

----------------
IN: 
0x000fb518:  addr32 mov 0x1c(%ebx),%al
0x000fb51c:  cmp    $0x9,%al
0x000fb51e:  je     0xfb6d5

----------------
IN: 
0x000fb522:  ja     0xfb541

----------------
IN: 
0x000fb524:  cmp    $0x2,%al
0x000fb526:  je     0xfb590

----------------
IN: 
0x000fb528:  ja     0xfb532

----------------
IN: 
0x000fb52a:  dec    %al
0x000fb52c:  jne    0xfb864

----------------
IN: 
0x000fb530:  jmp    0xfb567

----------------
IN: 
0x000fb567:  addr32 movb $0x1,0x1c(%ebx)
0x000fb56c:  addr32 movw $0x210,0x10(%ebx)
0x000fb572:  mov    %cs:0xd250,%eax
0x000fb577:  addr32 mov %al,0x18(%ebx)
0x000fb57b:  addr32 movl $0x20494350,0x14(%ebx)
0x000fb584:  addr32 movl $0xfc6c7,0x4(%ebx)
0x000fb58d:  jmp    0xfb856

----------------
IN: 
0x000fb856:  mov    %ebx,%eax
0x000fb859:  pop    %ebx
0x000fb85b:  pop    %esi
0x000fb85d:  pop    %edi
0x000fb85f:  pop    %ebp
0x000fb861:  jmp    0xf748d

----------------
IN: 
0x000f748d:  addr32 movb $0x0,0x1d(%eax)
0x000f7492:  addr32 andw $0xfffffffe,0x24(%eax)
0x000f7497:  retl   

----------------
IN: 
0x000fc74d:  mov    %ebx,%esp
0x000fc750:  pop    %ds
0x000fc751:  pop    %es
0x000fc752:  pop    %edi
0x000fc754:  pop    %esi
0x000fc756:  pop    %ebp
0x000fc758:  pop    %ebx
0x000fc75a:  pop    %edx
0x000fc75c:  pop    %ecx
0x000fc75e:  pop    %eax
0x000fc760:  iret   

----------------
IN: 
0x000c90e4:  jb     0xc913c

----------------
IN: 
0x000c90e6:  cmp    $0x20494350,%edx
0x000c90ed:  jne    0xc913c

----------------
IN: 
0x000c90ef:  test   %ah,%ah
0x000c90f1:  jne    0xc913c

----------------
IN: 
0x000c90f3:  mov    $0x313,%si
0x000c90f6:  xor    %di,%di
0x000c90f8:  call   0xc94de

----------------
IN: 
0x000c90fb:  mov    %bh,%al
0x000c90fd:  call   0xc9506

----------------
IN: 
0x000c9100:  mov    $0x2e,%al
0x000c9102:  call   0xc94bf

----------------
IN: 
0x000c9105:  mov    %bl,%al
0x000c9107:  call   0xc94fd

----------------
IN: 
0x000c910a:  cmp    $0x3,%bh
0x000c910d:  jb     0xc913c

----------------
IN: 
0x000c913c:  push   %cs
0x000c913d:  pop    %gs
0x000c913f:  pop    %edi
0x000c9141:  pop    %edx
0x000c9143:  pop    %ebx
0x000c9145:  mov    $0xefff,%bx
0x000c9148:  inc    %bx
0x000c9149:  je     0xc9175

----------------
IN: 
0x000c914b:  mov    %bx,%es
0x000c914d:  cmpl   $0x506e5024,%es:0x0
0x000c9157:  jne    0xc9148

----------------
IN: 
0x000c9148:  inc    %bx
0x000c9149:  je     0xc9175

----------------
IN: 
0x000c9159:  xor    %dx,%dx
0x000c915b:  xor    %si,%si
0x000c915d:  movzbw %es:0x5,%cx
0x000c9163:  lods   %es:(%si),%al
0x000c9165:  add    %al,%dl
0x000c9167:  loop   0xc9163

----------------
IN: 
0x000c9163:  lods   %es:(%si),%al
0x000c9165:  add    %al,%dl
0x000c9167:  loop   0xc9163

----------------
IN: 
0x000c9169:  jne    0xc9148

----------------
IN: 
0x000c916b:  mov    $0x318,%si
0x000c916e:  xor    %di,%di
0x000c9170:  call   0xc94de

----------------
IN: 
0x000c9173:  jmp    0xc9175

----------------
IN: 
0x000c9175:  mov    $0xdfff,%bx
0x000c9178:  inc    %bx
0x000c9179:  je     0xc921c

----------------
IN: 
0x000c917d:  mov    %bx,%es
0x000c917f:  cmpl   $0x4d4d5024,%es:0x0
0x000c9189:  jne    0xc9178

----------------
IN: 
0x000c9178:  inc    %bx
0x000c9179:  je     0xc921c

----------------
IN: 
0x000c918b:  xor    %dx,%dx
0x000c918d:  xor    %si,%si
0x000c918f:  movzbw %es:0x5,%cx
0x000c9195:  lods   %es:(%si),%al
0x000c9197:  add    %al,%dl
0x000c9199:  loop   0xc9195

----------------
IN: 
0x000c9195:  lods   %es:(%si),%al
0x000c9197:  add    %al,%dl
0x000c9199:  loop   0xc9195

----------------
IN: 
0x000c919b:  jne    0xc9178

----------------
IN: 
0x000c919d:  mov    $0x31d,%si
0x000c91a0:  xor    %di,%di
0x000c91a2:  call   0xc94de

----------------
IN: 
0x000c91a5:  pushal 
0x000c91a7:  movzbl 0x2,%ecx
0x000c91ad:  add    0x352,%cx
0x000c91b1:  add    $0x7,%cx
0x000c91b4:  and    $0xfffffff8,%cx
0x000c91b7:  shl    $0x5,%ecx
0x000c91bb:  mov    $0x18ae1000,%ebx
0x000c91c1:  mov    $0x2e0,%bp
0x000c91c4:  call   0xc928c

----------------
IN: 
0x000c928c:  push   %eax
0x000c928e:  push   %di
0x000c928f:  mov    $0x20,%di
0x000c9292:  push   %ebx
0x000c9294:  push   $0x1
0x000c9296:  lcall  *%es:0x7

----------------
IN: 
0x000fc5d3:  push   %esp
0x000fc5d5:  movzwl %sp,%esp
0x000fc5d9:  pushfl 
0x000fc5db:  cli    
0x000fc5dc:  cld    
0x000fc5dd:  push   %eax
0x000fc5df:  push   %ecx
0x000fc5e1:  push   %edx
0x000fc5e3:  push   %es
0x000fc5e4:  push   %ds
0x000fc5e5:  mov    %ss,%cx
0x000fc5e7:  mov    %cx,%ds
0x000fc5e9:  mov    $0x7feb52d,%eax
0x000fc5ef:  addr32 lea 0x1c(%esp),%edx
0x000fc5f5:  mov    $0xffffffff,%ecx
0x000fc5fb:  calll  0xfa015

----------------
IN: 
0x000fa015:  push   %ebx
0x000fa017:  mov    %cr0,%ebx
0x000fa01a:  and    $0x1,%bl
0x000fa01d:  jne    0xfa024

----------------
IN: 
0x000fa01f:  pop    %ebx
0x000fa021:  jmp    0xfff5d

----------------
IN: 
0x000fff5d:  push   %ebp
0x000fff5f:  push   %edi
0x000fff61:  push   %esi
0x000fff63:  push   %ebx
0x000fff65:  sub    $0x10,%esp
0x000fff69:  mov    %eax,%esi
0x000fff6c:  in     $0x70,%al
0x000fff6e:  addr32 mov %al,0x3(%esp)
0x000fff73:  or     $0xffffff80,%eax
0x000fff77:  out    %al,$0x70
0x000fff79:  in     $0x71,%al
0x000fff7b:  addr32 mov %fs,0x4(%esp)
0x000fff80:  addr32 mov %gs,0x6(%esp)
0x000fff85:  addr32 sgdtl 0xa(%esp)
0x000fff8c:  mov    %edx,%eax
0x000fff8f:  mov    %ss,%edi
0x000fff92:  mov    %esp,%ebp
0x000fff95:  shl    $0x4,%edi
0x000fff99:  add    %edi,%esp
0x000fff9c:  shr    $0x4,%edi
0x000fffa0:  mov    $0xfffa9,%edx
0x000fffa6:  jmp    0xfc450

----------------
IN: 
0x000fc483:  mov    $0x10,%eax
0x000fc488:  mov    %eax,%ds

----------------
IN: 
0x000fc48a:  mov    %eax,%es

----------------
IN: 
0x000fffa9:  call   *%esi

----------------
IN: 
0x07feb52d:  push   %ebp
0x07feb52e:  push   %edi
0x07feb52f:  push   %esi
0x07feb530:  push   %ebx
0x07feb531:  sub    $0x8,%esp
0x07feb534:  mov    %eax,%ebx
0x07feb536:  mov    (%eax),%si
0x07feb539:  movzwl %si,%eax
0x07feb53c:  mov    %eax,0x4(%esp)
0x07feb540:  movl   $0xf5485,(%esp)
0x07feb547:  call   0xf2058

----------------
IN: 
0x07feb54c:  cmp    $0x1,%si
0x07feb550:  je     0x7feb63b

----------------
IN: 
0x07feb63b:  mov    0x2(%ebx),%ecx
0x07feb63e:  xor    %eax,%eax
0x07feb640:  cmp    $0xffffffff,%ecx
0x07feb643:  je     0x7feb67f

----------------
IN: 
0x07feb645:  xor    %edx,%edx
0x07feb647:  mov    0x7fee3af(,%edx,4),%eax
0x07feb64e:  jmp    0x7feb65f

----------------
IN: 
0x07feb65f:  mov    (%eax),%eax
0x07feb661:  test   %eax,%eax
0x07feb663:  jne    0x7feb650

----------------
IN: 
0x07feb650:  cmp    %eax,0x8(%eax)
0x07feb653:  jne    0x7feb65f

----------------
IN: 
0x07feb665:  inc    %edx
0x07feb666:  cmp    $0x5,%edx
0x07feb669:  jne    0x7feb647

----------------
IN: 
0x07feb647:  mov    0x7fee3af(,%edx,4),%eax
0x07feb64e:  jmp    0x7feb65f

----------------
IN: 
0x07feb655:  cmp    %ecx,0x28(%eax)
0x07feb658:  jne    0x7feb65f

----------------
IN: 
0x07feb66b:  jmp    0x7feb67f

----------------
IN: 
0x07feb67f:  add    $0x8,%esp
0x07feb682:  pop    %ebx
0x07feb683:  pop    %esi
0x07feb684:  pop    %edi
0x07feb685:  pop    %ebp
0x07feb686:  ret    

----------------
IN: 
0x000fffab:  mov    $0xffb5,%edx
0x000fffb0:  jmp    0xfc4ad

----------------
IN: 
0x000fffb5:  mov    %di,%ds
0x000fffb7:  mov    %di,%ss

----------------
IN: 
0x000fffb9:  mov    %ebp,%esp

----------------
IN: 
0x000fffbc:  mov    %eax,%ebx
0x000fffbf:  addr32 lgdtl 0xa(%esp)
0x000fffc6:  addr32 mov 0x4(%esp),%fs
0x000fffcb:  addr32 mov 0x6(%esp),%gs
0x000fffd0:  addr32 mov 0x3(%esp),%al
0x000fffd5:  out    %al,$0x70
0x000fffd7:  in     $0x71,%al
0x000fffd9:  mov    %ebx,%eax
0x000fffdc:  add    $0x10,%esp
0x000fffe0:  pop    %ebx
0x000fffe2:  pop    %esi
0x000fffe4:  pop    %edi
0x000fffe6:  pop    %ebp
0x000fffe8:  retl   

----------------
IN: 
0x000fc601:  addr32 mov %ax,0xc(%esp)
0x000fc606:  shr    $0x10,%eax
0x000fc60a:  addr32 mov %ax,0x4(%esp)
0x000fc60f:  pop    %ds
0x000fc610:  pop    %es
0x000fc611:  pop    %edx
0x000fc613:  pop    %ecx
0x000fc615:  pop    %eax
0x000fc617:  popfl  

----------------
IN: 
0x000fc619:  pop    %esp
0x000fc61b:  lret   

----------------
IN: 
0x000c929b:  add    $0x6,%sp
0x000c929e:  push   %dx
0x000c929f:  push   %ax
0x000c92a0:  pop    %esi
0x000c92a2:  inc    %esi
0x000c92a4:  je     0xc92b2

----------------
IN: 
0x000c92a6:  dec    %esi
0x000c92a8:  je     0xc92b2

----------------
IN: 
0x000c92b2:  push   $0x2
0x000c92b4:  push   %ebx
0x000c92b6:  push   %ecx
0x000c92b8:  push   $0x0
0x000c92ba:  lcall  *%es:0x7

----------------
IN: 
0x07feb556:  jb     0x7feb56a

----------------
IN: 
0x07feb56a:  mov    0x2(%ebx),%esi
0x07feb56d:  mov    0x6(%ebx),%edi
0x07feb570:  mov    0xa(%ebx),%dx
0x07feb574:  test   $0x8,%dl
0x07feb577:  je     0x7feb585

----------------
IN: 
0x07feb585:  mov    $0x7fefe6f,%ebp
0x07feb58a:  mov    $0x7fefe67,%eax
0x07feb58f:  test   %esi,%esi
0x07feb591:  jne    0x7feb5d7

----------------
IN: 
0x07feb5d7:  shl    $0x4,%esi
0x07feb5da:  test   %esi,%esi
0x07feb5dc:  jle    0x7feb637

----------------
IN: 
0x07feb5de:  mov    $0x10,%ebx
0x07feb5e3:  test   $0x4,%dl
0x07feb5e6:  je     0x7feb5f9

----------------
IN: 
0x07feb5f9:  and    $0x3,%edx
0x07feb5fc:  cmp    $0x2,%dx
0x07feb600:  je     0x7feb615

----------------
IN: 
0x07feb615:  mov    %ebx,(%esp)
0x07feb618:  mov    %esi,%ecx
0x07feb61a:  mov    %edi,%edx
0x07feb61c:  mov    %ebp,%eax
0x07feb61e:  call   0x7fe0b6f

----------------
IN: 
0x07feb623:  jmp    0x7feb67f

----------------
IN: 
0x000c92bf:  add    $0xc,%sp
0x000c92c2:  push   %dx
0x000c92c3:  push   %ax
0x000c92c4:  pop    %esi
0x000c92c6:  mov    $0x2b,%di
0x000c92c9:  mov    %di,%ax
0x000c92cb:  xor    %di,%di
0x000c92cd:  call   0xc94bf

----------------
IN: 
0x000c92d0:  mov    %esi,%eax
0x000c92d3:  call   0xc94eb

----------------
IN: 
0x000c94eb:  ror    $0x10,%eax
0x000c94ef:  call   0xc94f6

----------------
IN: 
0x000c94f2:  ror    $0x10,%eax
0x000c94f6:  xchg   %al,%ah
0x000c94f8:  call   0xc94fd

----------------
IN: 
0x000c92d6:  inc    %esi
0x000c92d8:  je     0xc92dc

----------------
IN: 
0x000c92da:  dec    %esi
0x000c92dc:  pop    %di
0x000c92dd:  pop    %eax
0x000c92df:  ret    

----------------
IN: 
0x000c91c7:  mov    %esi,0x34e
0x000c91cc:  je     0xc91ee

----------------
IN: 
0x000c91ce:  push   %es
0x000c91cf:  xor    %ax,%ax
0x000c91d1:  mov    %ax,%es
0x000c91d3:  mov    %esi,%edi
0x000c91d6:  xor    %esi,%esi
0x000c91d9:  movzbl 0x2,%ecx
0x000c91df:  shl    $0x7,%ecx
0x000c91e3:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000c91e3:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000c91e7:  pop    %es
0x000c91e8:  mov    0x9f,%al
0x000c91eb:  mov    %al,0x2
0x000c91ee:  mov    $0x98c5,%ecx
0x000c91f4:  add    $0x1fff,%ecx
0x000c91fb:  and    $0xffffe000,%ecx
0x000c9202:  mov    %ecx,%ebx
0x000c9205:  shr    $0xc,%bx
0x000c9208:  or     $0x18ae2000,%ebx
0x000c920f:  mov    $0x2f7,%bp
0x000c9212:  call   0xc928c

----------------
IN: 
0x000c9215:  mov    %esi,0x354
0x000c921a:  popal  
0x000c921c:  xor    %bx,%bx
0x000c921e:  xor    %si,%si
0x000c9220:  movzbw 0x2,%cx
0x000c9225:  shl    $0x9,%cx
0x000c9228:  lods   %ds:(%si),%al
0x000c9229:  add    %al,%bl
0x000c922b:  loop   0xc9228

----------------
IN: 
0x000c9228:  lods   %ds:(%si),%al
0x000c9229:  add    %al,%bl
0x000c922b:  loop   0xc9228

----------------
IN: 
0x000c922d:  sub    %bl,0x6
0x000c9231:  mov    $0x20,%al
0x000c9233:  xor    %di,%di
0x000c9235:  call   0xc94bf

----------------
IN: 
0x000c9238:  mov    %gs,%ax
0x000c923a:  call   0xc94f6

----------------
IN: 
0x000c923d:  movzbw 0x2,%cx
0x000c9242:  shl    $0x9,%cx
0x000c9245:  mov    %ax,%es
0x000c9247:  xor    %si,%si
0x000c9249:  xor    %di,%di
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924b:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000c924e:  mov    $0x329,%si
0x000c9251:  xor    %di,%di
0x000c9253:  call   0xc94de

----------------
IN: 
0x000c94de:  push   %ax
0x000c94df:  lods   %ds:(%si),%al
0x000c94e0:  test   %al,%al
0x000c94e2:  je     0xc94e9

----------------
IN: 
0x000c94e4:  call   0xc94bf

----------------
IN: 
0x000c94bf:  push   %ax
0x000c94c0:  push   %bx
0x000c94c1:  push   %bp
0x000c94c2:  test   %di,%di
0x000c94c4:  je     0xc94cb

----------------
IN: 
0x000c94cb:  mov    $0x7,%bx
0x000c94ce:  mov    $0xe,%ah
0x000c94d0:  cmp    $0xa,%al
0x000c94d2:  jne    0xc94d8

----------------
IN: 
0x000c94d4:  int    $0x10

----------------
IN: 
0x000c94d6:  mov    $0xd,%al
0x000c94d8:  int    $0x10

----------------
IN: 
0x000c94da:  pop    %bp
0x000c94db:  pop    %bx
0x000c94dc:  pop    %ax
0x000c94dd:  ret    

----------------
IN: 
0x000c94e7:  jmp    0xc94df

----------------
IN: 
0x000c94df:  lods   %ds:(%si),%al
0x000c94e0:  test   %al,%al
0x000c94e2:  je     0xc94e9

----------------
IN: 
0x000c94d8:  int    $0x10

----------------
IN: 
0x000c94e9:  pop    %ax
0x000c94ea:  ret    

----------------
IN: 
0x000c9256:  mov    $0x70,%si
0x000c9259:  call   0xc94de

----------------
IN: 
0x000c925c:  mov    $0x345,%si
0x000c925f:  call   0xc94de

----------------
IN: 
0x000c9262:  mov    $0xff02,%bx
0x000c9265:  call   0xc942a

----------------
IN: 
0x000c942a:  push   %cx
0x000c942b:  push   %ax
0x000c942c:  mov    $0x1,%ah
0x000c942e:  int    $0x16

----------------
IN: 
0x000fe82e:  pushl  $0xae02
0x000fe834:  jmp    0xfc720

----------------
IN: 
0x000fae02:  push   %ebx
0x000fae04:  mov    %eax,%ebx
0x000fae07:  calll  0xf79bf

----------------
IN: 
0x000f79bf:  push   %esi
0x000f79c1:  push   %ebx
0x000f79c3:  push   %esi
0x000f79c5:  mov    $0x40,%ebx
0x000f79cb:  mov    %bx,%es
0x000f79cd:  mov    %es:0x17,%al
0x000f79d1:  shr    $0x4,%al
0x000f79d4:  and    $0x7,%eax
0x000f79d8:  addr32 mov %al,0x3(%esp)
0x000f79dd:  mov    %es:0x97,%dl
0x000f79e2:  mov    %edx,%esi
0x000f79e5:  and    $0x7,%edx
0x000f79e9:  cmp    %dl,%al
0x000f79eb:  je     0xf7a16

----------------
IN: 
0x000f7a16:  pop    %ebx
0x000f7a18:  pop    %ebx
0x000f7a1a:  pop    %esi
0x000f7a1c:  retl   

----------------
IN: 
0x000fae0d:  addr32 mov 0x1d(%ebx),%al
0x000fae11:  cmp    $0xa,%al
0x000fae13:  je     0xfae9f

----------------
IN: 
0x000fae17:  ja     0xfae37

----------------
IN: 
0x000fae19:  cmp    $0x2,%al
0x000fae1b:  je     0xfae64

----------------
IN: 
0x000fae1d:  ja     0xfae2b

----------------
IN: 
0x000fae1f:  test   %al,%al
0x000fae21:  je     0xfae5a

----------------
IN: 
0x000fae23:  dec    %al
0x000fae25:  jne    0xfaf0c

----------------
IN: 
0x000fae29:  jmp    0xfae5f

----------------
IN: 
0x000fae5f:  xor    %ecx,%ecx
0x000fae62:  jmp    0xfaebd

----------------
IN: 
0x000faebd:  xor    %edx,%edx
0x000faec0:  mov    %ebx,%eax
0x000faec3:  pop    %ebx
0x000faec5:  jmp    0xf72ce

----------------
IN: 
0x000f72ce:  push   %ebp
0x000f72d0:  push   %edi
0x000f72d2:  push   %esi
0x000f72d4:  push   %ebx
0x000f72d6:  push   %ebp
0x000f72d8:  mov    %eax,%ebx
0x000f72db:  mov    %edx,%ebp
0x000f72de:  mov    %ecx,%edi
0x000f72e1:  calll  0xf6d77

----------------
IN: 
0x000f6d77:  mov    $0x64b5,%edx
0x000f6d7d:  xor    %eax,%eax
0x000f6d80:  jmp    0xf6cb3

----------------
IN: 
0x000f6d06:  xor    %edx,%edx
0x000f6d09:  calll  *%ecx

----------------
IN: 
0x000f72e7:  mov    $0x40,%eax
0x000f72ed:  mov    $0x40,%ecx
0x000f72f3:  mov    %ax,%es
0x000f72f5:  mov    %es:0x1a,%si
0x000f72fa:  mov    %es:0x1c,%dx
0x000f72ff:  cmp    %dx,%si
0x000f7301:  jne    0xf7322

----------------
IN: 
0x000f7303:  test   %ebp,%ebp
0x000f7306:  jne    0xf7310

----------------
IN: 
0x000f7308:  addr32 orw $0x40,0x24(%ebx)
0x000f730d:  jmp    0xf7390

----------------
IN: 
0x000f7390:  pop    %edi
0x000f7392:  pop    %ebx
0x000f7394:  pop    %esi
0x000f7396:  pop    %edi
0x000f7398:  pop    %ebp
0x000f739a:  retl   

----------------
IN: 
0x000c9430:  je     0xc9438

----------------
IN: 
0x000c9438:  mov    $0x0,%cx
0x000c943b:  dec    %cx
0x000c943c:  js     0xc9453

----------------
IN: 
0x000c9453:  pop    %ax
0x000c9454:  pop    %cx
0x000c9455:  ret    

----------------
IN: 
0x000c9268:  pushf  
0x000c9269:  xor    %di,%di
0x000c926b:  call   0xc9534

----------------
IN: 
0x000c9534:  push   %ax
0x000c9535:  push   %cx
0x000c9536:  mov    $0xd,%al
0x000c9538:  call   0xc94bf

----------------
IN: 
0x000c953b:  mov    $0x20,%al
0x000c953d:  mov    $0x4f,%cx
0x000c9540:  call   0xc94bf

----------------
IN: 
0x000c9543:  loop   0xc9540

----------------
IN: 
0x000c9540:  call   0xc94bf

----------------
IN: 
0x000c9545:  mov    $0xd,%al
0x000c9547:  call   0xc94bf

----------------
IN: 
0x000c954a:  pop    %cx
0x000c954b:  pop    %ax
0x000c954c:  ret    

----------------
IN: 
0x000c926e:  mov    $0x349,%si
0x000c9271:  call   0xc94de

----------------
IN: 
0x000c9274:  popf   

----------------
IN: 
0x000c9275:  jne    0xc9281

----------------
IN: 
0x000c9281:  pop    %gs
0x000c9283:  pop    %fs
0x000c9285:  pop    %es
0x000c9286:  pop    %ds
0x000c9287:  popa   
0x000c9288:  mov    $0x20,%ax
0x000c928b:  lret   

----------------
IN: 
0x07fe9b09:  lea    0x14(%esp),%esi
0x07fe9b0d:  mov    %esi,%ecx
0x07fe9b0f:  xor    %edx,%edx
0x07fe9b11:  mov    $0xf516d,%eax
0x07fe9b16:  call   0x7fe9a39

----------------
IN: 
0x07fe9a9b:  mov    %ebx,%eax
0x07fe9a9d:  call   0x7fe304f

----------------
IN: 
0x07fe304f:  push   %edi
0x07fe3050:  push   %esi
0x07fe3051:  push   %ebx
0x07fe3052:  mov    %eax,%esi
0x07fe3054:  mov    0x84(%eax),%edi
0x07fe305a:  mov    %edi,%eax
0x07fe305c:  call   0x7fe0b32

----------------
IN: 
0x07fe3061:  mov    %eax,%ebx
0x07fe3063:  test   %eax,%eax
0x07fe3065:  jne    0x7fe3078

----------------
IN: 
0x07fe3078:  mov    %edi,%ecx
0x07fe307a:  mov    %eax,%edx
0x07fe307c:  mov    %esi,%eax
0x07fe307e:  call   *0x88(%esi)

----------------
IN: 
0x07fe3084:  test   %eax,%eax
0x07fe3086:  setg   %al
0x07fe3089:  movzbl %al,%eax
0x07fe308c:  neg    %eax
0x07fe308e:  and    %eax,%ebx
0x07fe3090:  mov    %ebx,%eax
0x07fe3092:  pop    %ebx
0x07fe3093:  pop    %esi
0x07fe3094:  pop    %edi
0x07fe3095:  ret    

----------------
IN: 
0x07fe9aa2:  test   %eax,%eax
0x07fe9aa4:  jne    0x7fe9a77

----------------
IN: 
0x07fe9a77:  test   %esi,%esi
0x07fe9a79:  je     0x7fe9a8f

----------------
IN: 
0x07fe9a7b:  lea    -0xc0000(%eax),%edx
0x07fe9a81:  shr    $0xb,%edx
0x07fe9a84:  mov    %ebx,(%esi,%edx,8)
0x07fe9a87:  movl   $0x0,0x4(%esi,%edx,8)
0x07fe9a8f:  mov    (%esp),%ecx
0x07fe9a92:  xor    %edx,%edx
0x07fe9a94:  call   0x7fe97d0

----------------
IN: 
0x07fe9a99:  jmp    0x7fe9a47

----------------
IN: 
0x07fe9a47:  mov    %edi,%eax
0x07fe9a49:  call   0xf16dc

----------------
IN: 
0x07fe9a59:  mov    (%ebx),%eax
0x07fe9a5b:  mov    %eax,%ebx
0x07fe9a5d:  jmp    0x7fe9a71

----------------
IN: 
0x07fe9b1b:  xor    %eax,%eax
0x07fe9b1d:  call   0x7fe0b32

----------------
IN: 
0x07fe9b22:  jmp    0x7fe9c97

----------------
IN: 
0x07fe9c97:  cmp    0xf5da0,%ebx
0x07fe9c9d:  jb     0x7fe9b27

----------------
IN: 
0x07fe9b27:  cmpw   $0xaa55,(%ebx)
0x07fe9b2c:  je     0x7fe9b3d

----------------
IN: 
0x07fe9b3d:  mov    %ebx,%eax
0x07fe9b3f:  call   0xf206b

----------------
IN: 
0x07fe9b44:  test   %eax,%eax
0x07fe9b46:  je     0x7fe9b2e

----------------
IN: 
0x07fe9b48:  movzbl 0x2(%ebx),%eax
0x07fe9b4c:  shl    $0x9,%eax
0x07fe9b4f:  add    $0x7ff,%eax
0x07fe9b54:  and    $0xfffff800,%eax
0x07fe9b59:  add    %ebx,%eax
0x07fe9b5b:  mov    %eax,0xc(%esp)
0x07fe9b5f:  movzwl 0x1a(%ebx),%esi
0x07fe9b63:  add    %ebx,%esi
0x07fe9b65:  cmpl   $0x506e5024,(%esi)
0x07fe9b6b:  jne    0x7fe9b71

----------------
IN: 
0x07fe9b6d:  test   %esi,%esi
0x07fe9b6f:  jne    0x7fe9bad

----------------
IN: 
0x07fe9bad:  mov    %ebx,%eax
0x07fe9baf:  shr    $0x4,%eax
0x07fe9bb2:  and    $0xffff,%eax
0x07fe9bb7:  mov    %eax,%edx
0x07fe9bb9:  shl    $0x4,%edx
0x07fe9bbc:  mov    %edx,0x8(%esp)
0x07fe9bc0:  movl   $0x1,0x10(%esp)
0x07fe9bc8:  shl    $0x10,%eax
0x07fe9bcb:  mov    %eax,0x4(%esp)
0x07fe9bcf:  mov    0x10(%esp),%ecx
0x07fe9bd3:  dec    %ecx
0x07fe9bd4:  cmpw   $0x0,0x1a(%esi)
0x07fe9bd9:  je     0x7fe9c2a

----------------
IN: 
0x07fe9bdb:  mov    %ebx,%edx
0x07fe9bdd:  lea    0x14(%esp),%eax
0x07fe9be1:  call   0x7fe2c11

----------------
IN: 
0x07fe2c11:  push   %esi
0x07fe2c12:  push   %ebx
0x07fe2c13:  sub    $0x110,%esp
0x07fe2c19:  mov    %ecx,%ebx
0x07fe2c1b:  sub    $0xc0000,%edx
0x07fe2c21:  shr    $0xb,%edx
0x07fe2c24:  mov    (%eax,%edx,8),%ecx
0x07fe2c27:  mov    0x4(%eax,%edx,8),%eax
0x07fe2c2b:  mov    %eax,%edx
0x07fe2c2d:  or     %ecx,%edx
0x07fe2c2f:  je     0x7fe2cbe

----------------
IN: 
0x07fe2c35:  test   $0x2,%al
0x07fe2c37:  je     0x7fe2c69

----------------
IN: 
0x07fe2c39:  mov    $0xf44e9,%edx
0x07fe2c3e:  lea    0x10(%esp),%eax
0x07fe2c42:  call   0x7fe24aa

----------------
IN: 
0x07fe2c47:  test   %ebx,%ebx
0x07fe2c49:  je     0x7fe2cb3

----------------
IN: 
0x07fe2cb3:  lea    0x10(%esp),%eax
0x07fe2cb7:  call   0x7fe2af3

----------------
IN: 
0x07fe2cbc:  jmp    0x7fe2cc1

----------------
IN: 
0x07fe2cc1:  add    $0x110,%esp
0x07fe2cc7:  pop    %ebx
0x07fe2cc8:  pop    %esi
0x07fe2cc9:  ret    

----------------
IN: 
0x07fe9be6:  mov    0x10(%esi),%di
0x07fe9bea:  movzwl 0x1a(%esi),%ecx
0x07fe9bee:  mov    $0xf513d,%edx
0x07fe9bf3:  test   %di,%di
0x07fe9bf6:  je     0x7fe9bff

----------------
IN: 
0x07fe9bf8:  movzwl %di,%edx
0x07fe9bfb:  add    0x8(%esp),%edx
0x07fe9bff:  or     0x4(%esp),%ecx
0x07fe9c03:  mov    0x7fefd17,%edi
0x07fe9c09:  test   %eax,%eax
0x07fe9c0b:  jns    0x7fe9c0f

----------------
IN: 
0x07fe9c0d:  mov    %edi,%eax
0x07fe9c0f:  mov    %edx,(%esp)
0x07fe9c12:  mov    %eax,%edx
0x07fe9c14:  mov    $0x80,%eax
0x07fe9c19:  call   0x7fe3164

----------------
IN: 
0x07fe9c1e:  movl   $0x270f,0x7fefd17
0x07fe9c28:  jmp    0x7fe9c74

----------------
IN: 
0x07fe9c74:  movzwl 0x6(%esi),%esi
0x07fe9c78:  test   %si,%si
0x07fe9c7b:  je     0x7fe9c93

----------------
IN: 
0x07fe9c93:  mov    0xc(%esp),%ebx
0x07fe9c97:  cmp    0xf5da0,%ebx
0x07fe9c9d:  jb     0x7fe9b27

----------------
IN: 
0x07fe9b71:  xor    %ecx,%ecx
0x07fe9b73:  mov    %ebx,%edx
0x07fe9b75:  lea    0x14(%esp),%eax
0x07fe9b79:  call   0x7fe2c11

----------------
IN: 
0x07fe2c69:  add    $0x4,%ecx
0x07fe2c6c:  mov    %ecx,0xc(%esp)
0x07fe2c70:  movl   $0xf44f2,0x8(%esp)
0x07fe2c78:  movl   $0x100,0x4(%esp)
0x07fe2c80:  lea    0x10(%esp),%esi
0x07fe2c84:  mov    %esi,(%esp)
0x07fe2c87:  call   0x7fe2079

----------------
IN: 
0x07fe2c8c:  test   %ebx,%ebx
0x07fe2c8e:  je     0x7fe2cb3

----------------
IN: 
0x07fe9b7e:  mov    %ebx,%ecx
0x07fe9b80:  shr    $0x4,%ecx
0x07fe9b83:  shl    $0x10,%ecx
0x07fe9b86:  or     $0x3,%ecx
0x07fe9b89:  mov    0x7fefd1b,%edx
0x07fe9b8f:  test   %eax,%eax
0x07fe9b91:  jns    0x7fe9b95

----------------
IN: 
0x07fe9b93:  mov    %edx,%eax
0x07fe9b95:  movl   $0xf5145,(%esp)
0x07fe9b9c:  mov    %eax,%edx
0x07fe9b9e:  mov    $0x81,%eax
0x07fe9ba3:  call   0x7fe3164

----------------
IN: 
0x07fe31be:  cmp    (%ebx),%esi
0x07fe31c0:  jl     0x7fe31e9

----------------
IN: 
0x07fe31c2:  jg     0x7fe31dc

----------------
IN: 
0x07fe9ba8:  jmp    0x7fe9c93

----------------
IN: 
0x07fe9ca3:  lea    -0xc(%ebp),%esp
0x07fe9ca6:  pop    %ebx
0x07fe9ca7:  pop    %esi
0x07fe9ca8:  pop    %edi
0x07fe9ca9:  pop    %ebp
0x07fe9caa:  ret    

----------------
IN: 
0x07fed5a4:  cmpl   $0x0,0x7fefe7b
0x07fed5ab:  je     0x7fed5d8

----------------
IN: 
0x07fed5ad:  mov    $0x510,%edx
0x07fed5b2:  mov    $0xe,%eax
0x07fed5b7:  out    %ax,(%dx)
0x07fed5b9:  mov    $0x2,%ecx
0x07fed5be:  lea    0x8a(%esp),%edi
0x07fed5c5:  mov    $0x11,%dl
0x07fed5c7:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fed5c7:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x07fed5c9:  cmpw   $0x0,0x8a(%esp)
0x07fed5d2:  je     0x7fed6e4

----------------
IN: 
0x07fed6e4:  call   0x7fe6d8e

----------------
IN: 
0x07fed6e9:  mov    $0xf5947,%eax
0x07fed6ee:  call   0x7fe2af3

----------------
IN: 
0x07fed6f3:  test   %eax,%eax
0x07fed6f5:  js     0x7fed70c

----------------
IN: 
0x07fed70c:  mov    0x7fefeb7,%ebp
0x07fed712:  jmp    0x7fedae8

----------------
IN: 
0x07fedae8:  test   %ebp,%ebp
0x07fedaea:  jne    0x7fed717

----------------
IN: 
0x07fed717:  mov    0x0(%ebp),%eax
0x07fed71a:  cmp    $0x2,%eax
0x07fed71d:  je     0x7fed7ab

----------------
IN: 
0x07fed7ab:  mov    0x4(%ebp),%ebx
0x07fed7ae:  movzbl 0x475,%esi
0x07fed7b5:  mov    %esi,0x68(%esp)
0x07fed7b9:  mov    %ebx,%ecx
0x07fed7bb:  mov    $0x475,%edx
0x07fed7c0:  mov    $0xfd304,%eax
0x07fed7c5:  call   0x7fe35f2

----------------
IN: 
0x07fe35f2:  push   %ebx
0x07fe35f3:  movzbl (%edx),%ebx
0x07fe35f6:  cmp    $0xf,%bl
0x07fe35f9:  jbe    0x7fe360b

----------------
IN: 
0x07fe360b:  mov    %ecx,(%eax,%ebx,4)
0x07fe360e:  incb   (%edx)
0x07fe3610:  pop    %ebx
0x07fe3611:  ret    

----------------
IN: 
0x07fed7ca:  cmpb   $0x2,(%ebx)
0x07fed7cd:  jne    0x7fed7f3

----------------
IN: 
0x07fed7cf:  mov    0x14(%ebx),%ecx
0x07fed7d2:  mov    %cl,%al
0x07fed7d4:  shr    $0x2,%al
0x07fed7d7:  add    $0x39,%eax
0x07fed7da:  or     $0xffffff80,%eax
0x07fed7dd:  out    %al,$0x70
0x07fed7df:  in     $0x71,%al
0x07fed7e1:  movzbl %al,%eax
0x07fed7e4:  and    $0x3,%ecx
0x07fed7e7:  shl    %ecx
0x07fed7e9:  sar    %cl,%eax
0x07fed7eb:  and    $0x3,%eax
0x07fed7ee:  jmp    0x7fed874

----------------
IN: 
0x07fed874:  mov    %al,0x19(%ebx)
0x07fed877:  mov    0x1c(%ebx),%cx
0x07fed87b:  mov    %cx,0x50(%esp)
0x07fed880:  movzwl 0x1e(%ebx),%ecx
0x07fed884:  mov    0x20(%ebx),%si
0x07fed888:  mov    %si,0x58(%esp)
0x07fed88d:  mov    0xc(%ebx),%edi
0x07fed890:  mov    %edi,0x60(%esp)
0x07fed894:  mov    0x10(%ebx),%edx
0x07fed897:  cmp    $0x2,%al
0x07fed899:  je     0x7fed954

----------------
IN: 
0x07fed954:  mov    %ecx,%edi
0x07fed956:  mov    0x50(%esp),%esi
0x07fed95a:  mov    $0xf5516,%eax
0x07fed95f:  cmp    $0x400,%di
0x07fed964:  ja     0x7fed947

----------------
IN: 
0x07fed966:  mov    0x58(%esp),%edx
0x07fed96a:  mov    %dx,0x48(%esp)
0x07fed96f:  jmp    0x7fed99c

----------------
IN: 
0x07fed99c:  mov    0x60(%esp),%edx
0x07fed9a0:  mov    %edx,0x24(%esp)
0x07fed9a4:  movzwl 0x48(%esp),%edx
0x07fed9a9:  mov    %edx,0x20(%esp)
0x07fed9ad:  movzwl %si,%edx
0x07fed9b0:  mov    %edx,0x1c(%esp)
0x07fed9b4:  movzwl %di,%edx
0x07fed9b7:  mov    %edx,0x18(%esp)
0x07fed9bb:  mov    %eax,0x14(%esp)
0x07fed9bf:  movzwl 0x58(%esp),%eax
0x07fed9c4:  mov    %eax,0x10(%esp)
0x07fed9c8:  movzwl 0x50(%esp),%eax
0x07fed9cd:  mov    %eax,0xc(%esp)
0x07fed9d1:  mov    %ecx,0x8(%esp)
0x07fed9d5:  mov    %ebx,0x4(%esp)
0x07fed9d9:  movl   $0xf594c,(%esp)
0x07fed9e0:  call   0xf2058

----------------
IN: 
0x07fed9e5:  mov    %si,0x2(%ebx)
0x07fed9e9:  mov    %di,0x4(%ebx)
0x07fed9ed:  mov    0x48(%esp),%ecx
0x07fed9f1:  mov    %cx,0x6(%ebx)
0x07fed9f5:  cmpl   $0x1,0x68(%esp)
0x07fed9fa:  jg     0x7fedabf

----------------
IN: 
0x07feda00:  mov    0x1e(%ebx),%dx
0x07feda04:  mov    0x1c(%ebx),%ax
0x07feda08:  mov    %ax,0x50(%esp)
0x07feda0d:  mov    0x20(%ebx),%bx
0x07feda11:  mov    %bx,0x58(%esp)
0x07feda16:  movzwl 0x40e,%eax
0x07feda1d:  mov    0x68(%esp),%ebx
0x07feda21:  lea    0x3(%ebx,%eax,1),%ecx
0x07feda25:  shl    $0x4,%ecx
0x07feda28:  lea    0xd(%ecx),%ebx
0x07feda2b:  movw   $0xffff,0x5(%ebx)
0x07feda31:  cmpw   $0x9,0x50(%esp)
0x07feda37:  sbb    %eax,%eax
0x07feda39:  and    $0xfffffff8,%eax
0x07feda3c:  sub    $0x38,%eax
0x07feda3f:  mov    %al,0x8(%ebx)
0x07feda42:  mov    %dx,0xc(%ebx)
0x07feda46:  mov    %di,0xd(%ecx)
0x07feda4a:  mov    %esi,%eax
0x07feda4c:  mov    %al,0x2(%ebx)
0x07feda4f:  mov    0x48(%esp),%cl
0x07feda53:  mov    %cl,0xe(%ebx)
0x07feda56:  cmp    0x50(%esp),%si
0x07feda5b:  jne    0x7feda6d

----------------
IN: 
0x07feda5d:  cmp    %dx,%di
0x07feda60:  jne    0x7feda6d

----------------
IN: 
0x07feda62:  mov    0x58(%esp),%eax
0x07feda66:  cmp    %ax,0x48(%esp)
0x07feda6b:  je     0x7feda92

----------------
IN: 
0x07feda92:  cmpl   $0x0,0x68(%esp)
0x07feda97:  mov    0x40e,%ax
0x07feda9d:  jne    0x7fedab0

----------------
IN: 
0x07feda9f:  movw   $0x3d,0x104
0x07fedaa8:  mov    %ax,0x106
0x07fedaae:  jmp    0x7fedabf

----------------
IN: 
0x07fedabf:  xor    %edx,%edx
0x07fedac1:  mov    $0x2,%eax
0x07fedac6:  jmp    0x7fedae0

----------------
IN: 
0x07fedae0:  call   0x7fe0f81

----------------
IN: 
0x07fe0f81:  push   %ebx
0x07fe0f82:  cmp    $0x2,%eax
0x07fe0f85:  jne    0x7fe0fa7

----------------
IN: 
0x07fe0f87:  mov    0x7fefed3,%ecx
0x07fe0f8d:  lea    0x1(%ecx),%ebx
0x07fe0f90:  mov    %ebx,0x7fefed3
0x07fe0f96:  test   %ecx,%ecx
0x07fe0f98:  jne    0x7fe0fd4

----------------
IN: 
0x07fe0f9a:  mov    0xf5e14,%ecx
0x07fe0fa0:  cmp    $0x13,%ecx
0x07fe0fa3:  jbe    0x7fe0fbd

----------------
IN: 
0x07fe0fbd:  lea    0x1(%ecx),%ebx
0x07fe0fc0:  mov    %ebx,0xf5e14
0x07fe0fc6:  mov    %eax,0xf5e18(,%ecx,8)
0x07fe0fcd:  mov    %edx,0xf5e1c(,%ecx,8)
0x07fe0fd4:  pop    %ebx
0x07fe0fd5:  ret    

----------------
IN: 
0x07fedae5:  mov    0x10(%ebp),%ebp
0x07fedae8:  test   %ebp,%ebp
0x07fedaea:  jne    0x7fed717

----------------
IN: 
0x07fed723:  jg     0x7fed72e

----------------
IN: 
0x07fed72e:  cmp    $0x3,%eax
0x07fed731:  je     0x7fedac8

----------------
IN: 
0x07fed737:  cmp    $0x81,%eax
0x07fed73c:  jne    0x7fedada

----------------
IN: 
0x07fed742:  movzwl 0x4(%ebp),%edx
0x07fed746:  movzwl 0x6(%ebp),%eax
0x07fed74a:  shl    $0x4,%eax
0x07fed74d:  xor    %ecx,%ecx
0x07fed74f:  call   0xf3a45

----------------
IN: 
0x000ca003:  push   %es
0x000ca004:  push   %cs
0x000ca005:  pop    %es
0x000ca006:  xor    %ax,%ax
0x000ca008:  mov    $0x1000,%cx
0x000ca00b:  lea    0x300,%di
0x000ca00f:  cld    
0x000ca010:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000ca010:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000ca012:  pop    %es
0x000ca013:  mov    $0x20,%ax
0x000ca016:  out    %ax,$0x7e
0x000ca018:  lret   

----------------
IN: 
0x07fed754:  jmp    0x7fedabf

----------------
IN: 
0x07fe0fd4:  pop    %ebx
0x07fe0fd5:  ret    

----------------
IN: 
0x07fed725:  dec    %eax
0x07fed726:  jne    0x7fedada

----------------
IN: 
0x07fed72c:  jmp    0x7fed759

----------------
IN: 
0x07fed759:  mov    0x4(%ebp),%ecx
0x07fed75c:  mov    $0xfd384,%edx
0x07fed761:  mov    $0xfd2c4,%eax
0x07fed766:  call   0x7fe35f2

----------------
IN: 
0x07fed76b:  cmpb   $0x1,0xfd384
0x07fed772:  jne    0x7fed78e

----------------
IN: 
0x07fed774:  mov    0x410,%eax
0x07fed779:  and    $0xffffffbe,%eax
0x07fed77c:  or     $0x1,%eax
0x07fed77f:  mov    %ax,0x410
0x07fed785:  movb   $0x7,0x48f
0x07fed78c:  jmp    0x7fed79f

----------------
IN: 
0x07fed79f:  xor    %edx,%edx
0x07fed7a1:  mov    $0x1,%eax
0x07fed7a6:  jmp    0x7fedae0

----------------
IN: 
0x07fe0fa7:  cmp    $0x1,%eax
0x07fe0faa:  jne    0x7fe0f9a

----------------
IN: 
0x07fe0fac:  mov    0x7fefed7,%ecx
0x07fe0fb2:  lea    0x1(%ecx),%ebx
0x07fe0fb5:  mov    %ebx,0x7fefed7
0x07fe0fbb:  jmp    0x7fe0f96

----------------
IN: 
0x07fe0f96:  test   %ecx,%ecx
0x07fe0f98:  jne    0x7fe0fd4

----------------
IN: 
0x07fedac8:  mov    0x4(%ebp),%ecx
0x07fedacb:  mov    $0x7fefecf,%edx
0x07fedad0:  mov    $0xfd344,%eax
0x07fedad5:  call   0x7fe35f2

----------------
IN: 
0x07fedada:  mov    0x4(%ebp),%edx
0x07fedadd:  mov    0x0(%ebp),%eax
0x07fedae0:  call   0x7fe0f81

----------------
IN: 
0x07fedaf0:  xor    %edx,%edx
0x07fedaf2:  mov    $0x1,%eax
0x07fedaf7:  call   0x7fe0f81

----------------
IN: 
0x07fedafc:  xor    %edx,%edx
0x07fedafe:  mov    $0x2,%eax
0x07fedb03:  call   0x7fe0f81

----------------
IN: 
0x07fedb08:  cmpb   $0x0,0x7fefecf
0x07fedb0f:  je     0x7fedb6a

----------------
IN: 
0x07fedb11:  call   0x7fe3612

----------------
IN: 
0x07fe3612:  push   %ebx
0x07fe3613:  xor    %ebx,%ebx
0x07fe3615:  cmpl   $0x0,0xfd2c0
0x07fe361c:  jne    0x7fe3642

----------------
IN: 
0x07fe361e:  mov    $0x800,%eax
0x07fe3623:  call   0x7fe0c8c

----------------
IN: 
0x07fe0c8c:  push   %ecx
0x07fe0c8d:  movl   $0x10,(%esp)
0x07fe0c94:  mov    %eax,%ecx
0x07fe0c96:  or     $0xffffffff,%edx
0x07fe0c99:  mov    $0x7fefe6b,%eax
0x07fe0c9e:  call   0x7fe0b6f

----------------
IN: 
0x07fe0ca3:  pop    %edx
0x07fe0ca4:  ret    

----------------
IN: 
0x07fe3628:  test   %eax,%eax
0x07fe362a:  jne    0x7fe363d

----------------
IN: 
0x07fe363d:  mov    %eax,0xfd2c0
0x07fe3642:  mov    %ebx,%eax
0x07fe3644:  pop    %ebx
0x07fe3645:  ret    

----------------
IN: 
0x07fedb16:  test   %eax,%eax
0x07fedb18:  js     0x7fedb6a

----------------
IN: 
0x07fedb1a:  mov    $0x24,%eax
0x07fedb1f:  call   0x7fe0c1f

----------------
IN: 
0x07fedb24:  mov    %eax,%ebx
0x07fedb26:  test   %eax,%eax
0x07fedb28:  jne    0x7fedb42

----------------
IN: 
0x07fedb42:  mov    %eax,0xfd244
0x07fedb47:  mov    $0x24,%ecx
0x07fedb4c:  xor    %edx,%edx
0x07fedb4e:  call   0xf172f

----------------
IN: 
0x07fedb53:  movb   $0x5,(%ebx)
0x07fedb56:  movw   $0x200,0x1a(%ebx)
0x07fedb5c:  movl   $0xffffffff,0xc(%ebx)
0x07fedb63:  movl   $0xffffffff,0x10(%ebx)
0x07fedb6a:  movl   $0x0,0xfd390
0x07fedb74:  movw   $0x0,0xfd397
0x07fedb7d:  mov    0xf5e08,%eax
0x07fedb82:  mov    0x10(%eax),%ebx
0x07fedb85:  sub    $0x10,%ebx
0x07fedb88:  and    $0xfffff800,%ebx
0x07fedb8e:  movw   $0xaa55,(%ebx)
0x07fedb93:  mov    $0xf0000,%eax
0x07fedb98:  sub    %ebx,%eax
0x07fedb9a:  shr    $0x9,%eax
0x07fedb9d:  cmp    $0xff,%eax
0x07fedba2:  jle    0x7fedba9

----------------
IN: 
0x07fedba9:  mov    %al,0x2(%ebx)
0x07fedbac:  mov    0xf5da0,%esi
0x07fedbb2:  mov    %ebx,%ecx
0x07fedbb4:  sub    %esi,%ecx
0x07fedbb6:  xor    %edx,%edx
0x07fedbb8:  mov    %esi,%eax
0x07fedbba:  call   0xf172f

----------------
IN: 
0x07fedbbf:  mov    %ebx,0x8(%esp)
0x07fedbc3:  mov    %esi,0x4(%esp)
0x07fedbc7:  movl   $0xf5987,(%esp)
0x07fedbce:  call   0xf2058

----------------
IN: 
0x07fedbd3:  mov    0x7fefe77,%edx
0x07fedbd9:  test   %edx,%edx
0x07fedbdb:  jne    0x7fedbe1

----------------
IN: 
0x07fedbe1:  mov    (%edx),%eax
0x07fedbe3:  test   %eax,%eax
0x07fedbe5:  jne    0x7fedbdf

----------------
IN: 
0x07fedbdf:  mov    %eax,%edx
0x07fedbe1:  mov    (%edx),%eax
0x07fedbe3:  test   %eax,%eax
0x07fedbe5:  jne    0x7fedbdf

----------------
IN: 
0x07fedbe7:  mov    0xc(%edx),%eax
0x07fedbea:  mov    0x10(%edx),%ecx
0x07fedbed:  sub    %eax,%ecx
0x07fedbef:  xor    %edx,%edx
0x07fedbf1:  call   0xf172f

----------------
IN: 
0x07fedbf6:  mov    0x7fefe73,%edx
0x07fedbfc:  test   %edx,%edx
0x07fedbfe:  jne    0x7fedc04

----------------
IN: 
0x07fedc04:  mov    (%edx),%eax
0x07fedc06:  test   %eax,%eax
0x07fedc08:  jne    0x7fedc02

----------------
IN: 
0x07fedc02:  mov    %eax,%edx
0x07fedc04:  mov    (%edx),%eax
0x07fedc06:  test   %eax,%eax
0x07fedc08:  jne    0x7fedc02

----------------
IN: 
0x07fedc0a:  test   %edx,%edx
0x07fedc0c:  je     0x7fedc4a

----------------
IN: 
0x07fedc0e:  mov    0xc(%edx),%eax
0x07fedc11:  mov    0x10(%edx),%edx
0x07fedc14:  sub    %eax,%edx
0x07fedc16:  mov    %edx,%ebx
0x07fedc18:  and    $0xfffff000,%ebx
0x07fedc1e:  je     0x7fedc3a

----------------
IN: 
0x07fedc20:  movl   $0x1,0x8(%esp)
0x07fedc28:  mov    %ebx,(%esp)
0x07fedc2b:  movl   $0x0,0x4(%esp)
0x07fedc33:  xor    %edx,%edx
0x07fedc35:  call   0x7fe32d3

----------------
IN: 
0x07fe3350:  incl   0x1c(%esp)
0x07fe3354:  jmp    0x7fe340b

----------------
IN: 
0x07fe3388:  mov    0x20(%esp),%edi
0x07fe338c:  mov    0x24(%esp),%ebp
0x07fe3390:  sub    0x14(%esp),%edi
0x07fe3394:  sbb    0x18(%esp),%ebp
0x07fe3398:  mov    0x14(%esp),%eax
0x07fe339c:  mov    0x18(%esp),%edx
0x07fe33a0:  mov    %eax,0x28(%esp)
0x07fe33a4:  mov    %edx,0x2c(%esp)
0x07fe33a8:  jmp    0x7fe3485

----------------
IN: 
0x07fe3437:  add    0x8(%ecx),%eax
0x07fe343a:  adc    0xc(%ecx),%edx
0x07fe343d:  cmp    %edx,0x24(%esp)
0x07fe3441:  jb     0x7fe3456

----------------
IN: 
0x07fe3443:  ja     0x7fe344b

----------------
IN: 
0x07fe3445:  cmp    %eax,0x20(%esp)
0x07fe3449:  jb     0x7fe3456

----------------
IN: 
0x07fe344b:  mov    0x1c(%esp),%eax
0x07fe344f:  call   0x7fe1589

----------------
IN: 
0x07fe1589:  mov    0xfcd28,%ecx
0x07fe158f:  dec    %ecx
0x07fe1590:  mov    %ecx,0xfcd28
0x07fe1596:  sub    %eax,%ecx
0x07fe1598:  imul   $0x14,%ecx,%ecx
0x07fe159b:  lea    0x1(%eax),%edx
0x07fe159e:  imul   $0x14,%edx,%edx
0x07fe15a1:  add    $0xfcd2c,%edx
0x07fe15a7:  imul   $0x14,%eax,%eax
0x07fe15aa:  add    $0xfcd2c,%eax
0x07fe15af:  jmp    0x7fe154c

----------------
IN: 
0x07fe1554:  mov    %eax,%edi
0x07fe1556:  mov    %edx,%esi
0x07fe1558:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe1558:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x07fe155a:  jmp    0x7fe1584

----------------
IN: 
0x07fe1584:  pop    %ebx
0x07fe1585:  pop    %esi
0x07fe1586:  pop    %edi
0x07fe1587:  pop    %ebp
0x07fe1588:  ret    

----------------
IN: 
0x07fe3454:  jmp    0x7fe348a

----------------
IN: 
0x07fe348a:  mov    0x1c(%esp),%eax
0x07fe348e:  cmp    0xfcd28,%eax
0x07fe3494:  jl     0x7fe3417

----------------
IN: 
0x07fe3456:  mov    0x20(%esp),%ebx
0x07fe345a:  mov    0x24(%esp),%esi
0x07fe345e:  mov    %ebx,(%ecx)
0x07fe3460:  mov    %esi,0x4(%ecx)
0x07fe3463:  sub    %ebx,%eax
0x07fe3465:  sbb    %esi,%edx
0x07fe3467:  mov    %eax,0x8(%ecx)
0x07fe346a:  mov    %edx,0xc(%ecx)
0x07fe346d:  mov    0x30(%esp),%esi
0x07fe3471:  cmp    0x10(%ecx),%esi
0x07fe3474:  jne    0x7fe3496

----------------
IN: 
0x07fedc3a:  mov    %ebx,0x4(%esp)
0x07fedc3e:  movl   $0xf59ab,(%esp)
0x07fedc45:  call   0xf2058

----------------
IN: 
0x07fedc4a:  mov    0xfcd28,%eax
0x07fedc4f:  mov    %eax,0x4(%esp)
0x07fedc53:  movl   $0xf59ca,(%esp)
0x07fedc5a:  call   0xf2058

----------------
IN: 
0x07fedc5f:  xor    %ebp,%ebp
0x07fedc61:  jmp    0x7fedcff

----------------
IN: 
0x07fedcff:  cmp    0xfcd28,%ebp
0x07fedd05:  jl     0x7fedc66

----------------
IN: 
0x07fedc66:  imul   $0x14,%ebp,%eax
0x07fedc69:  lea    0xfcd2c(%eax),%esi
0x07fedc6f:  mov    0xfcd30(%eax),%edx
0x07fedc75:  mov    0xfcd2c(%eax),%eax
0x07fedc7b:  mov    %eax,%ecx
0x07fedc7d:  mov    %edx,%ebx
0x07fedc7f:  add    0x8(%esi),%ecx
0x07fedc82:  adc    0xc(%esi),%ebx
0x07fedc85:  mov    0x10(%esi),%edi
0x07fedc88:  cmp    $0x3,%edi
0x07fedc8b:  je     0x7fedcb5

----------------
IN: 
0x07fedc8d:  ja     0x7fedc9b

----------------
IN: 
0x07fedc8f:  cmp    $0x1,%edi
0x07fedc92:  je     0x7fedcae

----------------
IN: 
0x07fedcae:  mov    $0xf5525,%esi
0x07fedcb3:  jmp    0x7fedcd6

----------------
IN: 
0x07fedcd6:  mov    %esi,0x1c(%esp)
0x07fedcda:  mov    %edi,0x18(%esp)
0x07fedcde:  mov    %ecx,0x10(%esp)
0x07fedce2:  mov    %ebx,0x14(%esp)
0x07fedce6:  mov    %eax,0x8(%esp)
0x07fedcea:  mov    %edx,0xc(%esp)
0x07fedcee:  mov    %ebp,0x4(%esp)
0x07fedcf2:  movl   $0xf59e2,(%esp)
0x07fedcf9:  call   0xf2058

----------------
IN: 
0x07fedcfe:  inc    %ebp
0x07fedcff:  cmp    0xfcd28,%ebp
0x07fedd05:  jl     0x7fedc66

----------------
IN: 
0x07fedc94:  cmp    $0x2,%edi
0x07fedc97:  jne    0x7fedcca

----------------
IN: 
0x07fedc99:  jmp    0x7fedcd1

----------------
IN: 
0x07fedcd1:  mov    $0xf5529,%esi
0x07fedcd6:  mov    %esi,0x1c(%esp)
0x07fedcda:  mov    %edi,0x18(%esp)
0x07fedcde:  mov    %ecx,0x10(%esp)
0x07fedce2:  mov    %ebx,0x14(%esp)
0x07fedce6:  mov    %eax,0x8(%esp)
0x07fedcea:  mov    %edx,0xc(%esp)
0x07fedcee:  mov    %ebp,0x4(%esp)
0x07fedcf2:  movl   $0xf59e2,(%esp)
0x07fedcf9:  call   0xf2058

----------------
IN: 
0x000f1f98:  sub    $0x8,%ecx
0x000f1f9b:  mov    %eax,(%esp)
0x000f1f9e:  mov    0x4(%esp),%eax
0x000f1fa2:  call   0xf163e

----------------
IN: 
0x000f1fa7:  mov    $0x8,%ecx
0x000f1fac:  mov    %edi,%edx
0x000f1fae:  mov    0x4(%esp),%eax
0x000f1fb2:  call   0xf15bb

----------------
IN: 
0x07fedd0b:  mov    0xfffff,%bl
0x07fedd11:  mov    $0x10000,%edx
0x07fedd16:  mov    $0xf0000,%eax
0x07fedd1b:  call   0xf1a9c

----------------
IN: 
0x07fedd20:  sub    %eax,%ebx
0x07fedd22:  mov    %bl,0xfffff
0x07fedd28:  cmpl   $0x0,0xf5df4
0x07fedd2f:  jne    0x7fedd36

----------------
IN: 
0x07fedd31:  call   0xf20c0

----------------
IN: 
0x000f20c0:  push   %eax
0x000f20c1:  mov    $0xf5cb4,%eax
0x000f20c6:  call   0xf1cab

----------------
IN: 
0x000f1de3:  movzwl (%eax),%eax
0x000f1de6:  mov    $0x59,%edx
0x000f1deb:  jmp    0xf1d3a

----------------
IN: 
0x000f1d3a:  push   %ebp
0x000f1d3b:  push   %edi
0x000f1d3c:  push   %esi
0x000f1d3d:  push   %ebx
0x000f1d3e:  sub    $0xc,%esp
0x000f1d41:  mov    %edx,%ebp
0x000f1d43:  mov    %ax,0x2(%esp)
0x000f1d48:  wbinvd 
0x000f1d4a:  mov    0xf5da0,%eax
0x000f1d4f:  mov    %eax,0x4(%esp)
0x000f1d53:  mov    0xf5e08,%eax
0x000f1d58:  mov    0x10(%eax),%edi
0x000f1d5b:  sub    $0x10,%edi
0x000f1d5e:  and    $0xfffff800,%edi
0x000f1d64:  lea    0x1(%edx),%esi
0x000f1d67:  mov    $0xc4000,%ebx
0x000f1d6c:  movzwl 0x2(%esp),%eax
0x000f1d71:  mov    %eax,0x8(%esp)
0x000f1d75:  lea    -0x4000(%ebx),%eax
0x000f1d7b:  cmp    %ebx,0x4(%esp)
0x000f1d7f:  ja     0xf1d89

----------------
IN: 
0x000f1d89:  lea    0x4000(%ebx),%edx
0x000f1d8f:  cmp    %edx,%edi
0x000f1d91:  ja     0xf1dac

----------------
IN: 
0x000f1dac:  mov    $0x11,%ecx
0x000f1db1:  mov    %esi,%edx
0x000f1db3:  mov    0x8(%esp),%eax
0x000f1db7:  call   0xf175d

----------------
IN: 
0x000f1dbc:  inc    %esi
0x000f1dbd:  add    $0x8000,%ebx
0x000f1dc3:  cmp    $0xf4000,%ebx
0x000f1dc9:  jne    0xf1d75

----------------
IN: 
0x000f1d75:  lea    -0x4000(%ebx),%eax
0x000f1d7b:  cmp    %ebx,0x4(%esp)
0x000f1d7f:  ja     0xf1d89

----------------
IN: 
0x000f1d81:  cmp    %eax,0x4(%esp)
0x000f1d85:  ja     0xf1d95

----------------
IN: 
0x000f1d87:  jmp    0xf1dcb

----------------
IN: 
0x000f1dcb:  movzwl 0x2(%esp),%eax
0x000f1dd0:  mov    $0x10,%ecx
0x000f1dd5:  mov    %ebp,%edx
0x000f1dd7:  add    $0xc,%esp
0x000f1dda:  pop    %ebx
0x000f1ddb:  pop    %esi
0x000f1ddc:  pop    %edi
0x000f1ddd:  pop    %ebp
0x000f1dde:  jmp    0xf175d

----------------
IN: 
0x000f20cb:  test   %eax,%eax
0x000f20cd:  jne    0xf20db

----------------
IN: 
0x000f20db:  pop    %eax
0x000f20dc:  ret    

----------------
IN: 
0x07fedd36:  call   0xf40a3

----------------
IN: 
0x000f40a3:  sub    $0x28,%esp
0x000f40a6:  mov    $0x89000,%ecx
0x000f40ab:  xor    %edx,%edx
0x000f40ad:  mov    $0x7000,%eax
0x000f40b2:  call   0xf172f

----------------
IN: 
0x000f40b7:  mov    $0x26,%ecx
0x000f40bc:  xor    %edx,%edx
0x000f40be:  lea    0x2(%esp),%eax
0x000f40c2:  call   0xf172f

----------------
IN: 
0x000f40c7:  movw   $0x200,0x26(%esp)
0x000f40ce:  movw   $0xf000,0x24(%esp)
0x000f40d5:  mov    $0xff83e,%eax
0x000f40da:  mov    %ax,0x22(%esp)
0x000f40df:  lea    0x2(%esp),%eax
0x000f40e3:  call   0xf3bfa

Servicing hardware INT=0x08
----------------
IN: 
0x000ff83e:  int    $0x19

----------------
IN: 
0x000fe6f2:  jmp    0xfc7a0

----------------
IN: 
0x000fc7a0:  xor    %ax,%ax
0x000fc7a2:  mov    %ax,%ss

----------------
IN: 
0x000fc7a4:  mov    $0x7000,%esp

----------------
IN: 
0x000fc7aa:  mov    $0xf4242,%edx
0x000fc7b0:  jmp    0xfc450

----------------
IN: 
0x000f4242:  sub    $0x8,%esp
0x000f4245:  movl   $0xf5d84,0x4(%esp)
0x000f424d:  movl   $0xf5bf8,(%esp)
0x000f4254:  call   0xf2058

----------------
IN: 
0x000f4259:  movl   $0xf5c03,(%esp)
0x000f4260:  call   0xf2058

----------------
IN: 
0x000f4265:  movl   $0x0,0xef780
0x000f426f:  xor    %eax,%eax
0x000f4271:  add    $0x8,%esp
0x000f4274:  jmp    0xf3d88

----------------
IN: 
0x000f3d88:  push   %ebx
0x000f3d89:  sub    $0x30,%esp
0x000f3d8c:  mov    %eax,%ebx
0x000f3d8e:  cmp    0xf5e14,%eax
0x000f3d94:  jl     0xf3d9b

----------------
IN: 
0x000f3d9b:  lea    0xf5e18(,%ebx,8),%edx
0x000f3da2:  mov    0xf5e18(,%ebx,8),%eax
0x000f3da9:  cmp    $0x3,%eax
0x000f3dac:  je     0xf3e0e

----------------
IN: 
0x000f3dae:  jg     0xf3dc0

----------------
IN: 
0x000f3db0:  cmp    $0x1,%eax
0x000f3db3:  je     0xf3ddb

----------------
IN: 
0x000f3db5:  cmp    $0x2,%eax
0x000f3db8:  jne    0xf3e7e

----------------
IN: 
0x000f3dbe:  jmp    0xf3df1

----------------
IN: 
0x000f3df1:  movl   $0xf5409,(%esp)
0x000f3df8:  call   0xf2045

----------------
IN: 
0x000f3dfd:  mov    $0x1,%edx
0x000f3e02:  mov    $0x80,%eax
0x000f3e07:  call   0xf3c7b

----------------
IN: 
0x000f3c7b:  push   %edi
0x000f3c7c:  push   %esi
0x000f3c7d:  push   %ebx
0x000f3c7e:  sub    $0x2c,%esp
0x000f3c81:  mov    %eax,%ebx
0x000f3c83:  mov    %edx,%edi
0x000f3c85:  mov    $0x26,%ecx
0x000f3c8a:  xor    %edx,%edx
0x000f3c8c:  lea    0x6(%esp),%eax
0x000f3c90:  call   0xf172f

----------------
IN: 
0x000f3c95:  movw   $0x200,0x2a(%esp)
0x000f3c9c:  mov    %bl,0x1a(%esp)
0x000f3ca0:  movw   $0x7c0,0x8(%esp)
0x000f3ca7:  movb   $0x2,0x23(%esp)
0x000f3cac:  movb   $0x1,0x22(%esp)
0x000f3cb1:  movb   $0x1,0x1e(%esp)
0x000f3cb6:  movw   $0xf000,0x28(%esp)
0x000f3cbd:  mov    $0xfc5b2,%eax
0x000f3cc2:  mov    %ax,0x26(%esp)
0x000f3cc7:  lea    0x6(%esp),%eax
0x000f3ccb:  call   0xf3bfa

----------------
IN: 
0x000fc5b2:  int    $0x13

----------------
IN: 
0x000fe3fe:  jmp    0xfc761

----------------
IN: 
0x000fc761:  pushl  $0xc2a2
0x000fc767:  jmp    0xfc720

----------------
IN: 
0x000fc2a2:  push   %esi
0x000fc2a4:  push   %ebx
0x000fc2a6:  addr32 mov 0x14(%eax),%dl
0x000fc2aa:  addr32 cmpb $0x4b,0x1d(%eax)
0x000fc2af:  jne    0xfc3e4

----------------
IN: 
0x000fc3e4:  mov    $0xe000,%ecx
0x000fc3ea:  mov    %cx,%es
0x000fc3ec:  mov    %es:-0x862,%bl
0x000fc3f1:  test   %bl,%bl
0x000fc3f3:  je     0xfc434

----------------
IN: 
0x000fc434:  movzbl %dl,%edx
0x000fc438:  pop    %ebx
0x000fc43a:  pop    %esi
0x000fc43c:  jmp    0xf9e95

----------------
IN: 
0x000f9e95:  test   %dl,%dl
0x000f9e97:  js     0xf9eed

----------------
IN: 
0x000f9eed:  cmp    $0xdf,%dl
0x000f9ef0:  jbe    0xf9f0b

----------------
IN: 
0x000f9f0b:  add    $0xffffff80,%edx
0x000f9f0f:  cmp    $0xf,%dl
0x000f9f12:  ja     0xf9f36

----------------
IN: 
0x000f9f14:  movzbl %dl,%edx
0x000f9f18:  addr32 mov %cs:0xd304(,%edx,4),%edx
0x000f9f22:  test   %edx,%edx
0x000f9f25:  je     0xf9f36

----------------
IN: 
0x000f9f27:  sub    $0xf0000,%edx
0x000f9f2e:  test   %edx,%edx
0x000f9f31:  je     0xf9f36

----------------
IN: 
0x000f9f33:  jmp    0xf9b6e

----------------
IN: 
0x000f9b6e:  push   %ebx
0x000f9b70:  mov    %eax,%ebx
0x000f9b73:  mov    $0x40,%ecx
0x000f9b79:  mov    %cx,%es
0x000f9b7b:  xor    %eax,%eax
0x000f9b7e:  mov    %al,%es:0x8e
0x000f9b82:  addr32 mov 0x1d(%ebx),%al
0x000f9b86:  cmp    $0x14,%al
0x000f9b88:  je     0xf9ccf

----------------
IN: 
0x000f9b8c:  ja     0xf9be8

----------------
IN: 
0x000f9b8e:  cmp    $0x5,%al
0x000f9b90:  je     0xf9c93

----------------
IN: 
0x000f9b94:  ja     0xf9bbc

----------------
IN: 
0x000f9b96:  cmp    $0x2,%al
0x000f9b98:  je     0xf9c75

----------------
IN: 
0x000f9c75:  mov    $0x2,%ecx
0x000f9c7b:  jmp    0xf9c83

----------------
IN: 
0x000f9c83:  mov    %ebx,%eax
0x000f9c86:  pop    %ebx
0x000f9c88:  jmp    0xf7790

----------------
IN: 
0x000f7790:  push   %ebp
0x000f7792:  push   %edi
0x000f7794:  push   %esi
0x000f7796:  push   %ebx
0x000f7798:  sub    $0x28,%esp
0x000f779c:  mov    %eax,%ebx
0x000f779f:  mov    %edx,%eax
0x000f77a2:  addr32 mov %edx,0x20(%esp)
0x000f77a8:  addr32 mov %cl,0x26(%esp)
0x000f77ad:  addr32 movzbl 0x1c(%ebx),%edx
0x000f77b3:  addr32 movzbl 0x19(%ebx),%esi
0x000f77b9:  addr32 mov 0x18(%ebx),%cl
0x000f77bd:  addr32 mov %cl,(%esp)
0x000f77c1:  and    $0x3f,%ecx
0x000f77c5:  mov    %ecx,%ebp
0x000f77c8:  movzbl %cl,%edi
0x000f77cc:  addr32 mov 0x15(%ebx),%cl
0x000f77d0:  addr32 mov %cl,0x13(%esp)
0x000f77d5:  mov    %dl,%cl
0x000f77d7:  dec    %cl
0x000f77d9:  js     0xf77df

----------------
IN: 
0x000f77db:  test   %di,%di
0x000f77dd:  jne    0xf77e8

----------------
IN: 
0x000f77e8:  addr32 mov (%esp),%cl
0x000f77ec:  shl    $0x2,%ecx
0x000f77f0:  and    $0x300,%ecx
0x000f77f7:  and    $0xff,%si
0x000f77fb:  or     %ecx,%esi
0x000f77fe:  addr32 mov %dx,0x24(%esp)
0x000f7803:  calll  0xf696a

----------------
IN: 
0x000f696a:  mov    %cs:-0x2dbc,%edx
0x000f6970:  sub    $0xf0000,%edx
0x000f6977:  cmp    %edx,%eax
0x000f697a:  jne    0xf69a3

----------------
IN: 
0x000f69a3:  push   %ebx
0x000f69a5:  addr32 mov %cs:0x4(%eax),%cx
0x000f69aa:  addr32 mov %cs:0x2(%eax),%bx
0x000f69af:  addr32 mov %cs:0x6(%eax),%dx
0x000f69b4:  shl    $0x10,%ecx
0x000f69b8:  movzwl %bx,%eax
0x000f69bc:  or     %ecx,%eax
0x000f69bf:  movzwl %dx,%edx
0x000f69c3:  pop    %ebx
0x000f69c5:  retl   

----------------
IN: 
0x000f7809:  movzwl %ax,%ecx
0x000f780d:  shr    $0x10,%eax
0x000f7811:  cmp    %ax,%si
0x000f7813:  jae    0xf7824

----------------
IN: 
0x000f7815:  addr32 movzbl 0x13(%esp),%eax
0x000f781c:  cmp    %cx,%ax
0x000f781e:  jae    0xf7824

----------------
IN: 
0x000f7820:  cmp    %dx,%di
0x000f7822:  jbe    0xf782c

----------------
IN: 
0x000f782c:  and    $0xff,%ebp
0x000f7833:  movzwl %si,%esi
0x000f7837:  imul   %ecx,%esi
0x000f783b:  addr32 movzbl 0x13(%esp),%eax
0x000f7842:  add    %eax,%esi
0x000f7845:  movzwl %dx,%edx
0x000f7849:  imul   %edx,%esi
0x000f784d:  addr32 lea -0x1(%ebp,%esi,1),%eax
0x000f7853:  addr32 mov %eax,0x14(%esp)
0x000f7859:  addr32 movl $0x0,0x18(%esp)
0x000f7863:  addr32 movzwl 0x2(%ebx),%eax
0x000f7869:  shl    $0x4,%eax
0x000f786d:  addr32 movzwl 0x10(%ebx),%edx
0x000f7873:  add    %edx,%eax
0x000f7876:  addr32 mov %eax,0x1c(%esp)
0x000f787c:  addr32 lea 0x14(%esp),%eax
0x000f7882:  calll  0xf7781

----------------
IN: 
0x000f7781:  mov    %ss,%dx
0x000f7783:  movzwl %dx,%edx
0x000f7787:  mov    $0xad59,%ecx
0x000f778d:  jmp    0xf772d

----------------
IN: 
0x000f772d:  push   %edi
0x000f772f:  push   %esi
0x000f7731:  push   %ebx
0x000f7733:  mov    %ss,%bx
0x000f7735:  movzwl %bx,%ebx
0x000f7739:  cmp    $0xe000,%ebx
0x000f7740:  jne    0xf774e

----------------
IN: 
0x000f774e:  mov    $0xe000,%ebx
0x000f7754:  mov    %ss,%si
0x000f7756:  mov    %esp,%edi
0x000f7759:  mov    %bx,%ds
0x000f775b:  mov    %bx,%ss

----------------
IN: 
0x000f775d:  mov    -0x818,%esp

----------------
IN: 
0x000f7762:  push   %esi
0x000f7764:  push   %edi
0x000f7766:  calll  *%ecx

----------------
IN: 
0x000fad59:  push   %ebp
0x000fad5b:  push   %edi
0x000fad5d:  push   %esi
0x000fad5f:  push   %ebx
0x000fad61:  sub    $0x14,%esp
0x000fad65:  mov    %eax,%ebp
0x000fad68:  mov    %edx,%ebx
0x000fad6b:  mov    %ss,%ax
0x000fad6d:  mov    %ax,%es
0x000fad6f:  mov    $0x14,%ecx
0x000fad75:  mov    %ebp,%esi
0x000fad78:  addr32 lea (%esp),%edi
0x000fad7d:  mov    %ds,%ax
0x000fad7f:  mov    %dx,%ds
0x000fad81:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000fad81:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000fad83:  mov    %ax,%ds
0x000fad85:  mov    %esp,%eax
0x000fad88:  calll  0xfa7c2

----------------
IN: 
0x000fa7c2:  push   %ebp
0x000fa7c4:  push   %edi
0x000fa7c6:  push   %esi
0x000fa7c8:  push   %ebx
0x000fa7ca:  sub    $0x18,%esp
0x000fa7ce:  mov    %eax,%esi
0x000fa7d1:  addr32 mov 0xc(%eax),%ebx
0x000fa7d6:  addr32 mov %cs:(%ebx),%al
0x000fa7da:  cmp    $0x6,%al
0x000fa7dc:  je     0xfaae1

----------------
IN: 
0x000fa7e0:  ja     0xfa806

----------------
IN: 
0x000fa7e2:  cmp    $0x3,%al
0x000fa7e4:  je     0xfab35

----------------
IN: 
0x000fa7e8:  ja     0xfa7f7

----------------
IN: 
0x000fa7ea:  cmp    $0x1,%al
0x000fa7ec:  je     0xfa826

----------------
IN: 
0x000fa7ee:  cmp    $0x2,%al
0x000fa7f0:  jne    0xfab57

----------------
IN: 
0x000fa7f4:  jmp    0xfa8f1

----------------
IN: 
0x000fa8f1:  addr32 mov 0x12(%esi),%al
0x000fa8f5:  cmp    $0x5,%al
0x000fa8f7:  ja     0xfa90c

----------------
IN: 
0x000fa8f9:  cmp    $0x4,%al
0x000fa8fb:  jae    0xfab65

----------------
IN: 
0x000fa8ff:  cmp    $0x2,%al
0x000fa901:  je     0xfa91b

----------------
IN: 
0x000fa91b:  xor    %edx,%edx
0x000fa91e:  jmp    0xfa926

----------------
IN: 
0x000fa926:  mov    %esi,%eax
0x000fa929:  calll  0xf86d6

----------------
IN: 
0x000f86d6:  push   %ebp
0x000f86d8:  push   %edi
0x000f86da:  push   %esi
0x000f86dc:  push   %ebx
0x000f86de:  sub    $0xc,%esp
0x000f86e2:  mov    %eax,%ebx
0x000f86e5:  mov    %edx,%ebp
0x000f86e8:  addr32 mov (%eax),%esi
0x000f86ec:  addr32 mov 0x4(%eax),%edi
0x000f86f1:  mov    $0xc,%ecx
0x000f86f7:  xor    %edx,%edx
0x000f86fa:  mov    %esp,%eax
0x000f86fd:  calll  0xf64bd

----------------
IN: 
0x000f8703:  addr32 mov 0x10(%ebx),%ecx
0x000f8708:  cmp    $0xff,%cx
0x000f870c:  ja     0xf8729

----------------
IN: 
0x000f870e:  movzwl %cx,%eax
0x000f8712:  xor    %edx,%edx
0x000f8715:  add    %esi,%eax
0x000f8718:  adc    %edi,%edx
0x000f871b:  cmp    $0x0,%edx
0x000f871f:  ja     0xf8729

----------------
IN: 
0x000f8721:  cmp    $0xfffffff,%eax
0x000f8727:  jbe    0xf8779

----------------
IN: 
0x000f8779:  cmp    $0x1,%ebp
0x000f877d:  sbb    %eax,%eax
0x000f8780:  and    $0xfffffff0,%eax
0x000f8784:  add    $0x30,%eax
0x000f8788:  addr32 mov %al,0x6(%esp)
0x000f878d:  addr32 mov %cl,0x1(%esp)
0x000f8792:  mov    %esi,%eax
0x000f8795:  addr32 mov %al,0x2(%esp)
0x000f879a:  mov    %esi,%eax
0x000f879d:  mov    %edi,%edx
0x000f87a0:  shrd   $0x8,%edx,%eax
0x000f87a5:  shr    $0x8,%edx
0x000f87a9:  addr32 mov %al,0x3(%esp)
0x000f87ae:  mov    %esi,%eax
0x000f87b1:  mov    %edi,%edx
0x000f87b4:  shrd   $0x10,%edx,%eax
0x000f87b9:  shr    $0x10,%edx
0x000f87bd:  addr32 mov %al,0x4(%esp)
0x000f87c2:  shrd   $0x18,%edi,%esi
0x000f87c7:  shr    $0x18,%edi
0x000f87cb:  mov    %esi,%eax
0x000f87ce:  and    $0xf,%eax
0x000f87d2:  or     $0x40,%eax
0x000f87d6:  addr32 mov %al,0x5(%esp)
0x000f87db:  addr32 mov 0xc(%ebx),%ecx
0x000f87e0:  addr32 mov %cs:0x24(%ecx),%eax
0x000f87e6:  addr32 mov %cs:-0xf0000(%eax),%di
0x000f87ee:  addr32 mov %cs:-0xefffe(%eax),%si
0x000f87f6:  add    $0x2,%esi
0x000f87fa:  mov    $0xa,%al
0x000f87fc:  mov    %esi,%edx
0x000f87ff:  out    %al,(%dx)
0x000f8800:  mov    %esp,%edx
0x000f8803:  mov    %ecx,%eax
0x000f8806:  calll  0xf8322

----------------
IN: 
0x000f8322:  push   %ebp
0x000f8324:  push   %edi
0x000f8326:  push   %esi
0x000f8328:  push   %ebx
0x000f832a:  mov    %edx,%edi
0x000f832d:  addr32 mov %cs:0x24(%eax),%edx
0x000f8333:  addr32 mov %cs:0x28(%eax),%bl
0x000f8338:  addr32 mov %cs:-0xf0000(%edx),%si
0x000f8340:  movzwl %si,%ebp
0x000f8344:  mov    %ebp,%eax
0x000f8347:  calll  0xf8313

----------------
IN: 
0x000f8313:  mov    %eax,%ecx
0x000f8316:  xor    %edx,%edx
0x000f8319:  mov    $0x80,%eax
0x000f831f:  jmp    0xf8296

----------------
IN: 
0x000f8296:  push   %ebp
0x000f8298:  push   %edi
0x000f829a:  push   %esi
0x000f829c:  push   %ebx
0x000f829e:  push   %esi
0x000f82a0:  addr32 mov %al,0x3(%esp)
0x000f82a5:  mov    %dl,%bl
0x000f82a7:  mov    %ecx,%ebp
0x000f82aa:  mov    $0x7d00,%eax
0x000f82b0:  calll  0xf6a9a

----------------
IN: 
0x000f6a9a:  push   %ebp
0x000f6a9c:  mov    %esp,%ebp
0x000f6a9f:  push   %edi
0x000f6aa1:  push   %esi
0x000f6aa3:  push   %ebx
0x000f6aa5:  mov    %eax,%edi
0x000f6aa8:  mov    %cs:-0x2db4,%esi
0x000f6aae:  calll  0xf69c7

----------------
IN: 
0x000f69c7:  push   %ebp
0x000f69c9:  mov    %esp,%ebp
0x000f69cc:  push   %edi
0x000f69ce:  push   %esi
0x000f69d0:  push   %ebx
0x000f69d2:  mov    %cs:0xd24a,%al
0x000f69d6:  test   %al,%al
0x000f69d8:  je     0xf6a3a

----------------
IN: 
0x000f6a3a:  mov    %cs:-0x2db8,%dx
0x000f6a3f:  test   %dx,%dx
0x000f6a41:  je     0xf6a8e

----------------
IN: 
0x000f6a43:  mov    $0xe000,%ebx
0x000f6a49:  mov    %bx,%es
0x000f6a4b:  mov    %es:-0x83c,%ecx
0x000f6a51:  in     (%dx),%eax
0x000f6a53:  mov    %eax,%esi
0x000f6a56:  and    $0xffffff,%esi
0x000f6a5d:  mov    %es:0xf7c0,%eax
0x000f6a62:  cmp    %eax,%esi
0x000f6a65:  jae    0xf6a6f

----------------
IN: 
0x000f6a6f:  mov    %bx,%es
0x000f6a71:  mov    %esi,%es:-0x840
0x000f6a77:  xor    %ebx,%ebx
0x000f6a7a:  shld   $0x18,%ecx,%ebx
0x000f6a7f:  shl    $0x18,%ecx
0x000f6a83:  mov    %ecx,%eax
0x000f6a86:  or     %esi,%eax
0x000f6a89:  mov    %ebx,%edx
0x000f6a8c:  jmp    0xf6a90

----------------
IN: 
0x000f6a90:  pop    %ebx
0x000f6a92:  pop    %esi
0x000f6a94:  pop    %edi
0x000f6a96:  pop    %ebp
0x000f6a98:  retl   

----------------
IN: 
0x000f6ab4:  mov    %eax,%ecx
0x000f6ab7:  mov    %edx,%ebx
0x000f6aba:  mov    %esi,%eax
0x000f6abd:  mul    %edi
0x000f6ac0:  mov    %eax,%esi
0x000f6ac3:  mov    %edx,%edi
0x000f6ac6:  add    %ecx,%esi
0x000f6ac9:  adc    %ebx,%edi
0x000f6acc:  mov    %esi,%eax
0x000f6acf:  mov    %edi,%edx
0x000f6ad2:  pop    %ebx
0x000f6ad4:  pop    %esi
0x000f6ad6:  pop    %edi
0x000f6ad8:  pop    %ebp
0x000f6ada:  retl   

----------------
IN: 
0x000f82b6:  mov    %eax,%esi
0x000f82b9:  mov    %edx,%edi
0x000f82bc:  add    $0x7,%ebp
0x000f82c0:  mov    %ebp,%edx
0x000f82c3:  in     (%dx),%al
0x000f82c4:  addr32 mov 0x3(%esp),%dl
0x000f82c9:  and    %eax,%edx
0x000f82cc:  cmp    %bl,%dl
0x000f82ce:  jne    0xf82d6

----------------
IN: 
0x000f82d0:  movzbl %al,%eax
0x000f82d4:  jmp    0xf8307

----------------
IN: 
0x000f8307:  pop    %ebx
0x000f8309:  pop    %ebx
0x000f830b:  pop    %esi
0x000f830d:  pop    %edi
0x000f830f:  pop    %ebp
0x000f8311:  retl   

----------------
IN: 
0x000f834d:  test   %eax,%eax
0x000f8350:  js     0xf8419

----------------
IN: 
0x000f8354:  addr32 mov 0x5(%edi),%al
0x000f8358:  and    $0x4f,%eax
0x000f835c:  cmp    $0x1,%bl
0x000f835f:  sbb    %ecx,%ecx
0x000f8362:  and    $0xfffffff0,%ecx
0x000f8366:  sub    $0x50,%ecx
0x000f836a:  or     %eax,%ecx
0x000f836d:  addr32 lea 0x6(%esi),%edx
0x000f8372:  in     (%dx),%al
0x000f8373:  mov    %al,%bl
0x000f8375:  mov    %cl,%al
0x000f8377:  out    %al,(%dx)
0x000f8378:  xor    %ecx,%ebx
0x000f837b:  and    $0x10,%bl
0x000f837e:  jne    0xf8395

----------------
IN: 
0x000f8395:  calll  0xf6b5e

----------------
IN: 
0x000f6b5e:  mov    %cs:0xd24c,%eax
0x000f6b63:  imul   $0x190,%eax,%eax
0x000f6b6a:  mov    $0xf4240,%ecx
0x000f6b70:  xor    %edx,%edx
0x000f6b73:  div    %ecx
0x000f6b76:  xor    %edx,%edx
0x000f6b79:  jmp    0xf6b15

----------------
IN: 
0x000f6b15:  push   %edi
0x000f6b17:  push   %esi
0x000f6b19:  sub    $0x8,%esp
0x000f6b1d:  addr32 mov %eax,(%esp)
0x000f6b22:  addr32 mov %edx,0x4(%esp)
0x000f6b28:  calll  0xf69c7

----------------
IN: 
0x000f6b2e:  mov    %eax,%esi
0x000f6b31:  mov    %edx,%edi
0x000f6b34:  addr32 add (%esp),%esi
0x000f6b39:  addr32 adc 0x4(%esp),%edi
0x000f6b3f:  jmp    0xf6b43

----------------
IN: 
0x000f6b43:  mov    %esi,%eax
0x000f6b46:  mov    %edi,%edx
0x000f6b49:  calll  0xf6adc

----------------
IN: 
0x000f6adc:  push   %edi
0x000f6ade:  push   %esi
0x000f6ae0:  mov    %eax,%esi
0x000f6ae3:  mov    %edx,%edi
0x000f6ae6:  calll  0xf69c7

----------------
IN: 
0x000f6aec:  sub    %esi,%eax
0x000f6aef:  sbb    %edi,%edx
0x000f6af2:  mov    %eax,%esi
0x000f6af5:  mov    %edx,%edi
0x000f6af8:  mov    %edi,%edi
0x000f6afb:  sar    $0x1f,%edi
0x000f6aff:  mov    %edi,%esi
0x000f6b02:  sub    %eax,%esi
0x000f6b05:  sbb    %edx,%edi
0x000f6b08:  mov    %edi,%eax
0x000f6b0b:  shr    $0x1f,%eax
0x000f6b0f:  pop    %esi
0x000f6b11:  pop    %edi
0x000f6b13:  retl   

----------------
IN: 
0x000f6b4f:  test   %eax,%eax
0x000f6b52:  je     0xf6b41

----------------
IN: 
0x000f6b54:  add    $0x8,%esp
0x000f6b58:  pop    %esi
0x000f6b5a:  pop    %edi
0x000f6b5c:  retl   

----------------
IN: 
0x000f839b:  mov    %ebp,%eax
0x000f839e:  calll  0xf8313

----------------
IN: 
0x000f83a4:  test   %eax,%eax
0x000f83a7:  jns    0xf8380

----------------
IN: 
0x000f8380:  addr32 mov 0x6(%edi),%cl
0x000f8384:  mov    %ecx,%eax
0x000f8387:  and    $0xee,%eax
0x000f838d:  cmp    $0x24,%eax
0x000f8391:  jne    0xf83dd

----------------
IN: 
0x000f83dd:  addr32 mov (%edi),%al
0x000f83e0:  addr32 lea 0x1(%esi),%edx
0x000f83e5:  out    %al,(%dx)
0x000f83e6:  addr32 mov 0x1(%edi),%al
0x000f83ea:  addr32 lea 0x2(%esi),%edx
0x000f83ef:  out    %al,(%dx)
0x000f83f0:  addr32 mov 0x2(%edi),%al
0x000f83f4:  addr32 lea 0x3(%esi),%edx
0x000f83f9:  out    %al,(%dx)
0x000f83fa:  addr32 mov 0x3(%edi),%al
0x000f83fe:  addr32 lea 0x4(%esi),%edx
0x000f8403:  out    %al,(%dx)
0x000f8404:  addr32 mov 0x4(%edi),%al
0x000f8408:  addr32 lea 0x5(%esi),%edx
0x000f840d:  out    %al,(%dx)
0x000f840e:  addr32 lea 0x7(%esi),%edx
0x000f8413:  mov    %cl,%al
0x000f8415:  out    %al,(%dx)
0x000f8416:  xor    %eax,%eax
0x000f8419:  pop    %ebx
0x000f841b:  pop    %esi
0x000f841d:  pop    %edi
0x000f841f:  pop    %ebp
0x000f8421:  retl   

----------------
IN: 
0x000f880c:  mov    %eax,%ecx
0x000f880f:  test   %eax,%eax
0x000f8812:  jne    0xf8838

----------------
IN: 
0x000f8814:  movzwl %di,%eax
0x000f8818:  calll  0xf8560

----------------
IN: 
0x000f8560:  push   %ebx
0x000f8562:  mov    %eax,%ebx
0x000f8565:  calll  0xf6b5e

----------------
IN: 
0x000f856b:  movzwl %bx,%eax
0x000f856f:  calll  0xf8313

----------------
IN: 
0x000f8575:  test   %eax,%eax
0x000f8578:  js     0xf8595

----------------
IN: 
0x000f857a:  test   $0x1,%al
0x000f857c:  jne    0xf858f

----------------
IN: 
0x000f857e:  and    $0x8,%eax
0x000f8582:  cmp    $0x1,%eax
0x000f8586:  sbb    %eax,%eax
0x000f8589:  and    $0xfffffffb,%eax
0x000f858d:  jmp    0xf8595

----------------
IN: 
0x000f8595:  pop    %ebx
0x000f8597:  retl   

----------------
IN: 
0x000f881e:  mov    %eax,%ecx
0x000f8821:  test   %eax,%eax
0x000f8824:  jne    0xf8838

----------------
IN: 
0x000f8826:  mov    $0x200,%cx
0x000f8829:  mov    %ebp,%edx
0x000f882c:  mov    %ebx,%eax
0x000f882f:  calll  0xf8423

----------------
IN: 
0x000f8423:  push   %ebp
0x000f8425:  push   %edi
0x000f8427:  push   %esi
0x000f8429:  push   %ebx
0x000f842b:  sub    $0x18,%esp
0x000f842f:  mov    %eax,%ebx
0x000f8432:  addr32 mov %edx,0xc(%esp)
0x000f8438:  addr32 mov %ecx,0x4(%esp)
0x000f843e:  addr32 mov 0xc(%eax),%eax
0x000f8443:  addr32 mov %cs:0x24(%eax),%eax
0x000f8449:  addr32 mov %cs:-0xf0000(%eax),%dx
0x000f8451:  addr32 mov %dx,0x10(%esp)
0x000f8456:  addr32 mov %cs:-0xefffe(%eax),%si
0x000f845e:  addr32 movzwl 0x10(%ebx),%ebp
0x000f8464:  addr32 mov 0x8(%ebx),%eax
0x000f8469:  addr32 mov %eax,(%esp)
0x000f846e:  mov    $0x2,%ecx
0x000f8474:  addr32 mov 0x4(%esp),%eax
0x000f847a:  cltd   
0x000f847c:  idiv   %ecx
0x000f847f:  and    $0xffff,%eax
0x000f8485:  addr32 mov %eax,0x8(%esp)
0x000f848b:  add    $0x2,%esi
0x000f848f:  addr32 mov %si,0x12(%esp)
0x000f8494:  addr32 movzwl 0x10(%esp),%edx
0x000f849b:  addr32 mov %edx,0x14(%esp)
0x000f84a1:  addr32 mov (%esp),%eax
0x000f84a6:  shr    $0x4,%eax
0x000f84aa:  addr32 cmpl $0x0,0xc(%esp)
0x000f84b1:  je     0xf84d0

----------------
IN: 
0x000f84d0:  mov    %ax,%es
0x000f84d2:  addr32 mov (%esp),%edi
0x000f84d7:  and    $0xf,%edi
0x000f84db:  addr32 mov 0x8(%esp),%ecx
0x000f84e1:  addr32 mov 0x10(%esp),%edx
0x000f84e7:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x000f84e7:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x000f84ea:  addr32 mov 0x4(%esp),%eax
0x000f84f0:  addr32 add %eax,(%esp)
0x000f84f5:  addr32 mov 0x12(%esp),%dx
0x000f84fa:  in     (%dx),%al
0x000f84fb:  addr32 mov 0x14(%esp),%eax
0x000f8501:  calll  0xf8313

----------------
IN: 
0x000f8507:  test   %eax,%eax
0x000f850a:  jns    0xf8512

----------------
IN: 
0x000f8512:  dec    %ebp
0x000f8514:  je     0xf8530

----------------
IN: 
0x000f8530:  addr32 cmpl $0x0,0xc(%esp)
0x000f8537:  je     0xf8541

----------------
IN: 
0x000f8541:  and    $0x89,%eax
0x000f8547:  test   %eax,%eax
0x000f854a:  je     0xf8552

----------------
IN: 
0x000f8552:  add    $0x18,%esp
0x000f8556:  pop    %ebx
0x000f8558:  pop    %esi
0x000f855a:  pop    %edi
0x000f855c:  pop    %ebp
0x000f855e:  retl   

----------------
IN: 
0x000f8835:  mov    %eax,%ecx
0x000f8838:  mov    $0x8,%al
0x000f883a:  mov    %esi,%edx
0x000f883d:  out    %al,(%dx)
0x000f883e:  cmp    $0x1,%ecx
0x000f8842:  sbb    %eax,%eax
0x000f8845:  not    %eax
0x000f8848:  and    $0xc,%eax
0x000f884c:  add    $0xc,%esp
0x000f8850:  pop    %ebx
0x000f8852:  pop    %esi
0x000f8854:  pop    %edi
0x000f8856:  pop    %ebp
0x000f8858:  retl   

----------------
IN: 
0x000fa92f:  jmp    0xfab4a

----------------
IN: 
0x000fab4a:  mov    %eax,%ebx
0x000fab4d:  jmp    0xfab68

----------------
IN: 
0x000fab68:  mov    %ebx,%eax
0x000fab6b:  add    $0x18,%esp
0x000fab6f:  pop    %ebx
0x000fab71:  pop    %esi
0x000fab73:  pop    %edi
0x000fab75:  pop    %ebp
0x000fab77:  retl   

----------------
IN: 
0x000fad8e:  mov    %bx,%es
0x000fad90:  addr32 mov 0x10(%esp),%edx
0x000fad96:  addr32 mov %dx,%es:0x10(%ebp)
0x000fad9b:  add    $0x14,%esp
0x000fad9f:  pop    %ebx
0x000fada1:  pop    %esi
0x000fada3:  pop    %edi
0x000fada5:  pop    %ebp
0x000fada7:  retl   

----------------
IN: 
0x000f7769:  pop    %edi
0x000f776b:  pop    %esi
0x000f776d:  mov    %si,%ds
0x000f776f:  mov    %si,%ss

----------------
IN: 
0x000f7771:  mov    %edi,%esp

----------------
IN: 
0x000f7774:  jmp    0xf7779

----------------
IN: 
0x000f7779:  pop    %ebx
0x000f777b:  pop    %esi
0x000f777d:  pop    %edi
0x000f777f:  retl   

----------------
IN: 
0x000f7888:  addr32 mov 0x24(%esp),%edx
0x000f788e:  addr32 mov %dl,0x1c(%ebx)
0x000f7892:  or     $0x77,%ah
0x000f7895:  mov    %eax,%edx
0x000f7898:  mov    %ebx,%eax
0x000f789b:  calll  0xff06e

----------------
IN: 
0x000ff06e:  push   %ebx
0x000ff070:  mov    %dl,%cl
0x000ff072:  mov    $0x40,%ebx
0x000ff078:  addr32 cmpb $0x0,0x14(%eax)
0x000ff07d:  js     0xff088

----------------
IN: 
0x000ff088:  mov    %bx,%es
0x000ff08a:  mov    %dl,%es:0x74
0x000ff08f:  test   %cl,%cl
0x000ff091:  je     0xff09f

----------------
IN: 
0x000ff09f:  pop    %ebx
0x000ff0a1:  jmp    0xf748d

----------------
IN: 
0x000f78a1:  add    $0x28,%esp
0x000f78a5:  pop    %ebx
0x000f78a7:  pop    %esi
0x000f78a9:  pop    %edi
0x000f78ab:  pop    %ebp
0x000f78ad:  retl   

----------------
IN: 
0x000fc5b4:  lret   

----------------
IN: 
0x000f3cd0:  testb  $0x1,0x2a(%esp)
0x000f3cd5:  je     0xf3ce0

----------------
IN: 
0x000f3ce0:  mov    %ebx,%esi
0x000f3ce2:  test   %edi,%edi
0x000f3ce4:  je     0xf3cff

----------------
IN: 
0x000f3ce6:  cmpw   $0xaa55,0x7dfe
0x000f3cef:  je     0xf3cff

----------------
IN: 
0x000f3cff:  mov    %esi,%eax
0x000f3d01:  movzbl %al,%edx
0x000f3d04:  mov    $0x7c00,%eax
0x000f3d09:  call   0xf3c1f

----------------
IN: 
0x000f3c1f:  push   %esi
0x000f3c20:  push   %ebx
0x000f3c21:  sub    $0x34,%esp
0x000f3c24:  mov    %eax,%ebx
0x000f3c26:  mov    %edx,%esi
0x000f3c28:  movzwl %ax,%eax
0x000f3c2b:  mov    %eax,0x8(%esp)
0x000f3c2f:  mov    %ebx,%eax
0x000f3c31:  shr    $0x10,%eax
0x000f3c34:  mov    %eax,0x4(%esp)
0x000f3c38:  movl   $0xf51f3,(%esp)
0x000f3c3f:  call   0xf2058

----------------
IN: 
0x000f3c44:  mov    $0x26,%ecx
0x000f3c49:  xor    %edx,%edx
0x000f3c4b:  lea    0xe(%esp),%eax
0x000f3c4f:  call   0xf172f

----------------
IN: 
0x000f3c54:  movw   $0x200,0x32(%esp)
0x000f3c5b:  mov    %ebx,0x2e(%esp)
0x000f3c5f:  mov    %esi,%eax
0x000f3c61:  mov    %al,0x22(%esp)
0x000f3c65:  movw   $0xaa55,0x2a(%esp)
0x000f3c6c:  lea    0xe(%esp),%eax
0x000f3c70:  call   0xf3bfa

----------------
IN: 
0x00007c00:  cli    

2. 在初始化位置0x7c00设置实地址断点,测试断点正常。
答：使用网络端口1234连接qemu与gdb之间通讯，使用命令b *0x7c00设置断点，输出结果如下
(gdb) target remote localhost:1234
Remote debugging using localhost:1234
0x0000fff0 in ?? ()
(gdb) b *0x7c00
Breakpoint 1 at 0x7c00
(gdb) c
Continuing.
Breakpoint 1, 0x00007c00 in ?? ()

3. 从0x7c00开始跟踪代码运行,将单步跟踪反汇编得到的代码与bootasm.S和 bootblock.asm进行比较。
答：单步跟踪代码运行结果如下

	(gdb) b *0x7c00
	Breakpoint 1 at 0x7c00
	(gdb) b *0x7c74
	Breakpoint 2 at 0x7c74
	(gdb) c
	Continuing.
	=> 0x7c00 <start>:	cli    

	Breakpoint 1, start () at boot/bootasm.S:15
	15		cli								# Disable interrupts
	(gdb) stepi
	=> 0x7c01 <start+1>:	cld    
	16		cld								# String operations increment
	(gdb) stepi
	=> 0x7c02 <start+2>:	xor    %eax,%eax
	19		xorw %ax, %ax							# Segment number zero
	(gdb) stepi
	=> 0x7c04 <start+4>:	mov    %eax,%ds
	20		movw %ax, %ds							# -> Data Segment
	(gdb) stepi
	=> 0x7c06 <start+6>:	mov    %eax,%es
	21		movw %ax, %es							# -> Extra Segment
	(gdb) stepi
	=> 0x7c08 <start+8>:	mov    %eax,%ss
	22		movw %ax, %ss							# -> Stack Segment
	(gdb) stepi
	=> 0x7c0a <seta20.1>:	in     $0x64,%al
	29		inb $0x64, %al							# Wait for not busy
	(gdb) stepi
	=> 0x7c0c <seta20.1+2>:	test   $0x2,%al
	30		testb $0x2, %al
	(gdb) stepi
	=> 0x7c0e <seta20.1+4>:	jne    0x7c0a <seta20.1>
	31		jnz seta20.1
	(gdb) stepi
	=> 0x7c10 <seta20.1+6>:	mov    $0xd1,%al
	33		movb $0xd1, %al							# 0xd1 -> port 0x64
	(gdb) stepi
	=> 0x7c12 <seta20.1+8>:	out    %al,$0x64
	34		outb %al, $0x64
	(gdb) stepi
	=> 0x7c14 <seta20.2>:	in     $0x64,%al
	37		inb $0x64, %al							# Wait for not busy
	(gdb) stepi
	=> 0x7c16 <seta20.2+2>:	test   $0x2,%al
	38		testb $0x2, %al
	(gdb) stepi
	=> 0x7c18 <seta20.2+4>:	jne    0x7c14 <seta20.2>
	39		jnz seta20.2
	(gdb) stepi
	=> 0x7c1a <seta20.2+6>:	mov    $0xdf,%al
	41		movb $0xdf, %al							# 0xdf -> port 0x60
	(gdb) stepi
	=> 0x7c1c <seta20.2+8>:	out    %al,$0x60
	42		outb %al, $0x60
	(gdb) stepi
	=> 0x7c1e <seta20.2+10>:	lgdtl  (%esi)
	48		lgdt gdtdesc
	(gdb) stepi
	=> 0x7c23 <seta20.2+15>:	mov    %cr0,%eax
	49		movl %cr0, %eax
	(gdb) stepi
	=> 0x7c26 <seta20.2+18>:	or     $0x1,%ax
	50		orl $CR0_PE_ON, %eax
	(gdb) stepi
	=> 0x7c2a <seta20.2+22>:	mov    %eax,%cr0
	51		movl %eax, %cr0
	(gdb) stepi
	=> 0x7c2d <seta20.2+25>:	ljmp   $0xb866,$0x87c32
	55		ljmp $PROT_MODE_CSEG, $protcseg
	(gdb) stepi
	=> 0x7c32 <protcseg>:	mov    $0x10,%ax
	60		movw $PROT_MODE_DSEG, %ax					# Our data segment selector
	(gdb) stepi
	=> 0x7c36 <protcseg+4>:	mov    %eax,%ds
	61		movw %ax, %ds							# -> DS: Data Segment
	(gdb) stepi
	=> 0x7c38 <protcseg+6>:	mov    %eax,%es
	62		movw %ax, %es							# -> ES: Extra Segment
	(gdb) stepi
	=> 0x7c3a <protcseg+8>:	mov    %eax,%fs
	63		movw %ax, %fs							# -> FS
	(gdb) stepi
	=> 0x7c3c <protcseg+10>:	mov    %eax,%gs
	64		movw %ax, %gs							# -> GS
	(gdb) stepi
	=> 0x7c3e <protcseg+12>:	mov    %eax,%ss
	65		movw %ax, %ss							# -> SS: Stack Segment
	(gdb) stepi
	=> 0x7c40 <protcseg+14>:	mov    $0x0,%ebp
	68		movl $0x0, %ebp
	(gdb) stepi
	=> 0x7c45 <protcseg+19>:	mov    $0x7c00,%esp
	69		movl $start, %esp
	(gdb) stepi
	=> 0x7c4a <protcseg+24>:	call   0x7c74 <bootmain>
	70		call bootmain
	(gdb) stepi
	=> 0x7c74 <bootmain>:	push   %ebp

	Breakpoint 2, bootmain () at boot/bootmain.c:87
	87	bootmain(void) {
	(gdb) stepi
	=> 0x7c75 <bootmain+1>:	mov    %esp,%ebp
	0x00007c75	87	bootmain(void) {
	(gdb) stepi
	=> 0x7c77 <bootmain+3>:	push   %edi
	0x00007c77	87	bootmain(void) {
	(gdb) stepi
	=> 0x7c78 <bootmain+4>:	push   %esi
	0x00007c78	87	bootmain(void) {
	(gdb) stepi
	=> 0x7c79 <bootmain+5>:	push   %ebx
	0x00007c79	87	bootmain(void) {
	(gdb) stepi
	=> 0x7c7a <bootmain+6>:	sub    $0x8,%esp
	0x00007c7a	87	bootmain(void) {
	
比较后发现，除去前半部分经过变量替换操作之后大致相似部分，两者代码基本相同。

4. 自己找一个bootloader或内核中的代码位置，设置断点并进行测试。
答：在以上代码基础上，继续增设断点，运行结果与预期相同。
	gdb) b *0x7c89
	Breakpoint 3 at 0x7c89
	(gdb) c
	Continuing.
	
练习3：分析bootloader进入保护模式的过程（要求在报告中写出分析）
答：对bootasm.s源文件添加注释，逐步解释进入保护模式的过程。

#include <asm.h>

# Start the CPU: switch to 32-bit protected mode, jump into C.
# The BIOS loads this code from the first sector of the hard disk into
# memory at physical address 0x7c00 and starts executing in real mode
# with %cs=0 %ip=7c00.

.set PROT_MODE_CSEG,        0x8                     # kernel code segment selector
.set PROT_MODE_DSEG,        0x10                    # kernel data segment selector
.set CR0_PE_ON,             0x1                     # protected mode enable flag

# start address should be 0:7c00, in real mode, the beginning address of the running bootloader
.globl start
start:
# cli 用于禁止处理器中断 cld用于字符串运算
.code16                                             # Assemble for 16-bit mode
    cli                                             # Disable interrupts
    cld                                             # String operations increment
#初始化重要的段寄存器
    # Set up the important data segment registers (DS, ES, SS).
    xorw %ax, %ax                                   # Segment number zero
    movw %ax, %ds                                   # -> Data Segment
    movw %ax, %es                                   # -> Extra Segment
    movw %ax, %ss                                   # -> Stack Segment
#激活A20地址线
#开启A20: 为了兼容8086，解决wrap-around的bug，IBM使用键盘控制器上剩余的一些输出线来管理第21条地址线（从0开始为20），称为A20。如果A20被开启，当程序员给出0x100000~0x10ffef之间的地址时，系统将真正访问这块内存区域；如果A20被禁用，则系统仍按照8086/8088的方式，回绕从0开始找内存区域。
    # Enable A20:
    #  For backwards compatibility with the earliest PCs, physical
    #  address line 20 is tied low, so that addresses higher than
    #  1MB wrap around to zero by default. This code undoes this.
seta20.1:
    inb $0x64, %al                                  # Wait for not busy(8042 input buffer empty).
    testb $0x2, %al
    jnz seta20.1

    movb $0xd1, %al                                 # 0xd1 -> port 0x64
    outb %al, $0x64                                 # 0xd1 means: write data to 8042's P2 port

seta20.2:
    inb $0x64, %al                                  # Wait for not busy(8042 input buffer empty).
    testb $0x2, %al
    jnz seta20.2

    movb $0xdf, %al                                 # 0xdf -> port 0x60
    outb %al, $0x60                                 # 0xdf = 11011111, means set P2's A20 bit(the 1 bit) to 1

#建立全局描述符gdt，并用指针gdtdesc指向gdt
    # Switch from real to protected mode, using a bootstrap GDT
    # and segment translation that makes virtual addresses
    # identical to physical addresses, so that the
    # effective memory map does not change during the switch.
    lgdt gdtdesc
    movl %cr0, %eax
    orl $CR0_PE_ON, %eax
    movl %eax, %cr0
#切换到32位保护模式，寄存器会重新加载，后面代码均在保护模式下运行
    # Jump to next instruction, but in 32-bit code segment.
    # Switches processor into 32-bit mode.
    ljmp $PROT_MODE_CSEG, $protcseg

.code32                                             # Assemble for 32-bit mode
protcseg:
#初始化保护模式下的寄存器
    # Set up the protected-mode data segment registers
    movw $PROT_MODE_DSEG, %ax                       # Our data segment selector
    movw %ax, %ds                                   # -> DS: Data Segment
    movw %ax, %es                                   # -> ES: Extra Segment
    movw %ax, %fs                                   # -> FS
    movw %ax, %gs                                   # -> GS
    movw %ax, %ss                                   # -> SS: Stack Segment

    # Set up the stack pointer and call into C. The stack region is from 0--start(0x7c00)
    movl $0x0, %ebp
    movl $start, %esp
    call bootmain

    # If bootmain returns (it shouldn't), loop.
spin:
    jmp spin

# Bootstrap GDT
.p2align 2                                          # force 4 byte alignment
gdt:
    SEG_NULLASM                                     # null seg
    SEG_ASM(STA_X|STA_R, 0x0, 0xffffffff)           # code seg for bootloader and kernel
    SEG_ASM(STA_W, 0x0, 0xffffffff)                 # data seg for bootloader and kernel

gdtdesc:
    .word 0x17                                      # sizeof(gdt) - 1
    .long gdt                                       # address gdt

练习4： 分析bootloader加载ELF格式的OS的过程，要求在报告中写出分析。通过阅读bootmain.c，了解bootloader如何加载ELF文件。通过分析源代码和通过qemu来运行并调试bootloader&OS。

1. bootloader如何读取硬盘扇区的？
答：在bootmain.c中的readsect函数实现，过程大致如下：
/* readsect - read a single sector at @secno into @dst */
	static void
	readsect(void *dst, uint32_t secno) {
		// 第1步：等待磁盘
		waitdisk();
		
		// 第2步：发出命令
		outb(0x1F2, 1);					                    // 读取一个扇区
		outb(0x1F3, secno & 0xFF);			            // LBA参数的0~7位
		outb(0x1F4, (secno >> 8) & 0xFF);		        // LBA参数的8~15位
		outb(0x1F5, (secno >> 16) & 0xFF);		      // LBA参数的16~23位
		outb(0x1F6, ((secno >> 24) & 0xF) | 0xE0);	// LBA参数的24~27位
		outb(0x1F7, 0x20);				                  // 状态和命令寄存器。命令 0x20 - 读取扇区

		// 第3步：等待磁盘
		waitdisk();

		// 第4步：把磁盘数据读取到目标内存
		insl(0x1F0, dst, SECTSIZE / 4);
	}
	
2. bootloader是如何加载ELF格式的OS？
答：具体在bootmain.c的函数main()中实现：
	// 读取磁盘的第一页（载入kernel的文件头）
	readseg((uintptr_t)ELFHDR, SECTSIZE * 8, 0);

	// 判断ELF是否有效
	if (ELFHDR->e_magic != ELF_MAGIC) {
		goto bad;
	}

	struct proghdr *ph, *eph;

	// 载入程序片段到内存
	ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);
	eph = ph + ELFHDR->e_phnum;
	for (; ph < eph; ph ++) {
		readseg(ph->p_va & 0xFFFFFF, ph->p_memsz, ph->p_offset);
	}

	((void (*)(void))(ELFHDR->e_entry & 0xFFFFFF))();

练习5：实现函数调用堆栈跟踪函数，需要在lab1中完成kdebug.c中函数print_stackframe的实现，可以通过函数print_stackframe来跟踪函数调用堆栈中记录的返回地址。在如果能够正确实现此函数，可在lab1中执行 make qemu后，在qemu模拟器中得到类似如下的输出：

ebp:0x00007b28 eip:0x00100992 args:0x00010094 0x00010094 0x00007b58 0x00100096

    kern/debug/kdebug.c:305: print_stackframe+22

ebp:0x00007b38 eip:0x00100c79 args:0x00000000 0x00000000 0x00000000 0x00007ba8

    kern/debug/kmonitor.c:125: mon_backtrace+10

ebp:0x00007b58 eip:0x00100096 args:0x00000000 0x00007b80 0xffff0000 0x00007b84

    kern/init/init.c:48: grade_backtrace2+33

ebp:0x00007b78 eip:0x001000bf args:0x00000000 0xffff0000 0x00007ba4 0x00000029

    kern/init/init.c:53: grade_backtrace1+38

ebp:0x00007b98 eip:0x001000dd args:0x00000000 0x00100000 0xffff0000 0x0000001d

    kern/init/init.c:58: grade_backtrace0+23

ebp:0x00007bb8 eip:0x00100102 args:0x0010353c 0x00103520 0x00001308 0x00000000

    kern/init/init.c:63: grade_backtrace+34

ebp:0x00007be8 eip:0x00100059 args:0x00000000 0x00000000 0x00000000 0x00007c53

    kern/init/init.c:28: kern_init+88

ebp:0x00007bf8 eip:0x00007d73 args:0xc031fcfa 0xc08ed88e 0x64e4d08e 0xfa7502a8

请完成实验，看看输出是否与上述显示大致一致，并解释最后一行各个数值的含义。要求完成函数kern/debug/kdebug.c::print_stackframe的实现，提交改进后源代码包（可以编译执行），并在实验报告中简要说明实现过程，并写出对上述问题的回答。

练习6：完善中断初始化和处理，请完成编码工作和回答如下问题(要求完成问题2和问题3提出的相关函数实现，提交改进后的源代码包（可以编译执行），并在实验报告中简要说明实现过程，并写出对问题1的回答。完成这问题2和3要求的部分代码后，运行整个系统，可以看到大约每1秒会输出一次100 ticks，而按下的键也会在屏幕上显示)：

1. 中断向量表中一个表项占多少字节？其中哪几位代表中断处理代码的入口？
答：中断向量表中一个表项占8个字节，其中第0～15，48～63位代表中断处理代码的入口。

2. 请编程完善kern/trap/trap.c中对中断向量表进行初始化的函数idt_init。在idt_init函数中，依次对所有中断入口进行初始化。使用mmu.h中的SETGATE宏，填充idt数组内容。注意除了系统调用中断(T_SYSCALL)以外，其它中断均使用中断门描述符，权限为内核态权限；而系统调用中断使用异常，权限为陷阱门描述符。每个中断的入口由tools/vectors.c生成，使用trap.c中声明的vectors数组即可。
答：将中断信息添至idt数组中。中断号为128（T_SYSCALL）的中断的特权级（3）和中断类型（陷入中断）需要特殊处理。最后设置IDTR寄存器，值为idt表的首地址。

3. 请编程完善trap.c中的中断处理函数trap，在对时钟中断进行处理的部分填写trap函数中处理时钟中断的部分，使操作系统每遇到100次时钟中断后，调用print_ticks子程序，向屏幕上打印一行文字100 ticks。
答：trap_dispatch()函数中，对于case IRQ_OFFSET + IRQ_TIMER，ticks将增加1，ticks满100（ticks%100 == 0）时，则调用print_ticks()打印字符。

